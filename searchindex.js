Search.setIndex({"docnames": ["api/chapters", "api/iterator", "api/memory", "api/object", "doxygen/algorithm_8h", "doxygen/algorithm_8h_source", "doxygen/annotated", "doxygen/atomic_8cuh", "doxygen/atomic_8cuh_a1a61934ee764723ac42dfe2c18274ed0", "doxygen/atomic_8cuh_a804e08a947a006ccc3c8f6bc64111bb9", "doxygen/atomic_8cuh_ada734bc4cfc80a1e18b9833a40cdbe58", "doxygen/bit_8h", "doxygen/bit_8h_source", "doxygen/bitset_8cuh", "doxygen/bitset_8cuh_acbea2027703043b7b2077d2c6f4f237b", "doxygen/classstdgpu_1_1atomic", "doxygen/classstdgpu_1_1atomic-members", "doxygen/classstdgpu_1_1atomic__ref", "doxygen/classstdgpu_1_1atomic__ref-members", "doxygen/classstdgpu_1_1atomic__ref_a013ae79915b506255431507bababa3cd", "doxygen/classstdgpu_1_1atomic__ref_a12e072d50745047fbd2229719db863af", "doxygen/classstdgpu_1_1atomic__ref_a183e5d75ca3cd150c3232032f362a8b3", "doxygen/classstdgpu_1_1atomic__ref_a1c8b347f4f1a36fae96f43269bb832a7", "doxygen/classstdgpu_1_1atomic__ref_a1f14783e183a128e583cafc27370c4f4", "doxygen/classstdgpu_1_1atomic__ref_a2007f0264451c2ddab53c574761a62b9", "doxygen/classstdgpu_1_1atomic__ref_a23aa2475f6fe0c54a10aed72e09f07ee", "doxygen/classstdgpu_1_1atomic__ref_a255267d9f51e15b076f6fc0bc976c399", "doxygen/classstdgpu_1_1atomic__ref_a2f36f84dd4e0181bccd06388f02d9d33", "doxygen/classstdgpu_1_1atomic__ref_a41ac61c3a3e620087c2fd3908c7c5301", "doxygen/classstdgpu_1_1atomic__ref_a4bbd964dd9df7052a4e4f4f48cd56c14", "doxygen/classstdgpu_1_1atomic__ref_a70ca69a125d4cb725b0e3b273c9eaf42", "doxygen/classstdgpu_1_1atomic__ref_aae1a873893f1c62cfc8cfc63263904e2", "doxygen/classstdgpu_1_1atomic__ref_ab665e9ce4128bcac27307dff28d76a51", "doxygen/classstdgpu_1_1atomic__ref_ab83f156fb7d67edcd8478ce905d9ca06", "doxygen/classstdgpu_1_1atomic__ref_ab930c352326bbcaa3c23d115b30f1ce0", "doxygen/classstdgpu_1_1atomic__ref_ab9f1b8676ec80c814c7446ecca07bed8", "doxygen/classstdgpu_1_1atomic__ref_aca7debde67a21a09d09b50947d37e03a", "doxygen/classstdgpu_1_1atomic__ref_aded433d979c1aa0c1eab6a11889a8318", "doxygen/classstdgpu_1_1atomic__ref_ae84bf48c31a4a5b93089e523aca7f923", "doxygen/classstdgpu_1_1atomic__ref_ae9d2400257e028d3b914dab0352a0e51", "doxygen/classstdgpu_1_1atomic__ref_aed6438a7a6a8f04f66761342577781cc", "doxygen/classstdgpu_1_1atomic__ref_aeeb5615a15bf86ed8a4f19388c16892e", "doxygen/classstdgpu_1_1atomic__ref_af284445fe0d57e8a92bd5922a53fe552", "doxygen/classstdgpu_1_1atomic__ref_af2882b31d1b73903ba67cec71bf42c2f", "doxygen/classstdgpu_1_1atomic__ref_af4595497f7135e14b44cd9ee8d0c037c", "doxygen/classstdgpu_1_1atomic__ref_af4b9364942e81ed0032b6143d65ac81f", "doxygen/classstdgpu_1_1atomic__ref_afbed13b370e4374a90530e49aa6b4308", "doxygen/classstdgpu_1_1atomic__ref_afcd0d6e08b978bb249d2159152f1b22e", "doxygen/classstdgpu_1_1atomic_a00668baff37b998e62b2bd384e33dea8", "doxygen/classstdgpu_1_1atomic_a0b9333d72f540f6b9f98a25c94ed9381", "doxygen/classstdgpu_1_1atomic_a200b49435f5f6e15a934023b7fa76581", "doxygen/classstdgpu_1_1atomic_a21180f21849c96c8f6e5f0f1b59e21dc", "doxygen/classstdgpu_1_1atomic_a266ebe8c29371bece674efa2412bb23e", "doxygen/classstdgpu_1_1atomic_a2bed7c660b44c17221efe6b323f20672", "doxygen/classstdgpu_1_1atomic_a3161f84b3601541e6b4505cf1bfa3d1b", "doxygen/classstdgpu_1_1atomic_a34d6ac956b6d5f275f95bfd4f92d17b2", "doxygen/classstdgpu_1_1atomic_a3c7a12b09b7db78c484625f1795b5069", "doxygen/classstdgpu_1_1atomic_a49b277ce2746484c6eaa35929f759136", "doxygen/classstdgpu_1_1atomic_a50e8eed503bee8c91a4fbae2c716967d", "doxygen/classstdgpu_1_1atomic_a5aeac3f40d0190419cc30115ad9f99aa", "doxygen/classstdgpu_1_1atomic_a5cadc08a518fe5b7e340ab7ae9a42d9a", "doxygen/classstdgpu_1_1atomic_a5e0170d045bb9ece2627b8d675fc59bc", "doxygen/classstdgpu_1_1atomic_a5e55af586391684377da25d3975a27c7", "doxygen/classstdgpu_1_1atomic_a6408c54e749cce606ce0e15feb1166fa", "doxygen/classstdgpu_1_1atomic_a666cf3df42b0fd2082a089be892cc705", "doxygen/classstdgpu_1_1atomic_a678c22a9377ff61e7e4daebfdd9f0fef", "doxygen/classstdgpu_1_1atomic_a6a6f73f4dc5d441f28ee7c2b14ba82d4", "doxygen/classstdgpu_1_1atomic_a80dd48aa209db11e3dce991ef47194d5", "doxygen/classstdgpu_1_1atomic_a98e6f71e5bfcb556126deee8630a8de0", "doxygen/classstdgpu_1_1atomic_a9d9c3f7ca4439896a53969996c2ba436", "doxygen/classstdgpu_1_1atomic_aa4a4ffc5612cce8d1928bff7295aa797", "doxygen/classstdgpu_1_1atomic_aa4bcb94229bd2e2d816477fefbe16307", "doxygen/classstdgpu_1_1atomic_aa8a11eb19232aeb240421846554d3d72", "doxygen/classstdgpu_1_1atomic_ab02c5e6cc6bfcdaa04ee277c5c917085", "doxygen/classstdgpu_1_1atomic_ab630fd1e19120d045748689dcd19007a", "doxygen/classstdgpu_1_1atomic_aba7141e6ca30e3b7b78cb84e16efc28e", "doxygen/classstdgpu_1_1atomic_abd259004c11d1b89ccaaa2579d74713f", "doxygen/classstdgpu_1_1atomic_ac60ddbdfd2605e07f506279ebb0f71d5", "doxygen/classstdgpu_1_1atomic_acc545ef68bce993f52813b61906bd0ec", "doxygen/classstdgpu_1_1atomic_af24376f4ba658b304e86cc47d233ae82", "doxygen/classstdgpu_1_1atomic_afb0634e91d0496436a7156fae1fbc5a1", "doxygen/classstdgpu_1_1atomic_aff85c71f1336a207abcac9380a846dfc", "doxygen/classstdgpu_1_1back__insert__iterator", "doxygen/classstdgpu_1_1back__insert__iterator-members", "doxygen/classstdgpu_1_1back__insert__iterator_a17173550cb08d0b4a8f60ba2a0d2fd5b", "doxygen/classstdgpu_1_1back__insert__iterator_aafa5ccf03eb4c12c52cd314fbdba00af", "doxygen/classstdgpu_1_1bitset", "doxygen/classstdgpu_1_1bitset-members", "doxygen/classstdgpu_1_1bitset_1_1reference", "doxygen/classstdgpu_1_1bitset_1_1reference-members", "doxygen/classstdgpu_1_1bitset_1_1reference_a3a620394297d41dd0d721d082f9afa2d", "doxygen/classstdgpu_1_1bitset_1_1reference_a7ad574b6353727c3c20fbcd4a53f5a84", "doxygen/classstdgpu_1_1bitset_1_1reference_aad87f675d008043913d46e6f9f3cbac6", "doxygen/classstdgpu_1_1bitset_1_1reference_aae070d69a346ba79ae9bca499aa6854c", "doxygen/classstdgpu_1_1bitset_1_1reference_acb1388e18bb864d923e3bea3a5a312c1", "doxygen/classstdgpu_1_1bitset_1_1reference_add18f9d94ce5389ac15a9422a8cc4c40", "doxygen/classstdgpu_1_1bitset_a068a11229ba02e5cda857479074fd0ed", "doxygen/classstdgpu_1_1bitset_a0ef8b2dbd573eebdb7d9b7a085d4b9fd", "doxygen/classstdgpu_1_1bitset_a18c2efaea6aca9142918aa5cffacbc3e", "doxygen/classstdgpu_1_1bitset_a28f96fee63f0255961411a7949172923", "doxygen/classstdgpu_1_1bitset_a2972c5c63de595c9a990a7771946e557", "doxygen/classstdgpu_1_1bitset_a30de395c2e13104740290cfc7e36e97a", "doxygen/classstdgpu_1_1bitset_a3a3adefd74ee66f2e9cd5797ff06c277", "doxygen/classstdgpu_1_1bitset_a45c4a0cab8e2663e0f829b0526fa3eba", "doxygen/classstdgpu_1_1bitset_a4c0451598573b7e5e4528c2b641abb23", "doxygen/classstdgpu_1_1bitset_a50084dcdc4069f5c0ddd09967c6206cb", "doxygen/classstdgpu_1_1bitset_a55c97bdc35007c9037de0b3967ed8f6f", "doxygen/classstdgpu_1_1bitset_a668f93ab77a2fb39a2a2874b166e98d2", "doxygen/classstdgpu_1_1bitset_a672e38f11bc1d0d98d43adab14cdd573", "doxygen/classstdgpu_1_1bitset_a74991d2f8e0b32dd82bed9b8a9c2bcc1", "doxygen/classstdgpu_1_1bitset_a84c0a2dee20eeb155ecdc0563bce5332", "doxygen/classstdgpu_1_1bitset_a8693b10bac83bf4e0393dc5857d7c4fc", "doxygen/classstdgpu_1_1bitset_a8a6b3d73ad1efca8f19296745901f82d", "doxygen/classstdgpu_1_1bitset_a9dd70c24ba4387bf7e7f916f2dd771bb", "doxygen/classstdgpu_1_1bitset_aa490cbeca76ebc5410be4b9dab9c5dc4", "doxygen/classstdgpu_1_1bitset_ab34a98927f4e9a8b5eec467630ec206c", "doxygen/classstdgpu_1_1bitset_ab5ca676a9e4cc147523fef907321c31f", "doxygen/classstdgpu_1_1bitset_ac096f6f39f5e86cb7adeb409da319160", "doxygen/classstdgpu_1_1bitset_ac71958207e0610e13bc4237ca772af0e", "doxygen/classstdgpu_1_1bitset_acfec77b43179226d09e3aa5d030d5c9b", "doxygen/classstdgpu_1_1bitset_ad31f35b84a73fe5842a31c28f956dbaa", "doxygen/classstdgpu_1_1bitset_ad5043ebbb696f7c41f958551efc7e1cc", "doxygen/classstdgpu_1_1bitset_ae51b61c3ae384cf81caa5602f2de93b1", "doxygen/classstdgpu_1_1bitset_af07b666a8150c74e2e06ab0831f72170", "doxygen/classstdgpu_1_1deque", "doxygen/classstdgpu_1_1deque-members", "doxygen/classstdgpu_1_1deque_a037466779c170f693ef9b62cc2e8a7be", "doxygen/classstdgpu_1_1deque_a05b9f81169419589f9a3a31de25c0feb", "doxygen/classstdgpu_1_1deque_a0bb087f112c1d08ae40577413177bc7a", "doxygen/classstdgpu_1_1deque_a111cb0ac0f7d373aed0674077c98e8e7", "doxygen/classstdgpu_1_1deque_a12096ec3cd46d07a9f4078bb40ee52a9", "doxygen/classstdgpu_1_1deque_a26ed0fbac41051e487a12d2d95d6c757", "doxygen/classstdgpu_1_1deque_a2c3f063892cb945bd8af0ce18eab68d0", "doxygen/classstdgpu_1_1deque_a3075ff9933ab70ca293cc0108b44a09e", "doxygen/classstdgpu_1_1deque_a383e5ceeaa1aaf174762a1021d9db4a1", "doxygen/classstdgpu_1_1deque_a3d14fbdf4a01eaddd0fadb02edc5b1fa", "doxygen/classstdgpu_1_1deque_a47f5db081d729ca509b91721f86d3b53", "doxygen/classstdgpu_1_1deque_a502c1b14f322f6328e84c0ac71786870", "doxygen/classstdgpu_1_1deque_a58eeaaa88a44d90e625c795ad39cce3a", "doxygen/classstdgpu_1_1deque_a5d1a00c8241bf05b94249596a5398489", "doxygen/classstdgpu_1_1deque_a5faf58e832a3a9cf2ca7af4169f2befd", "doxygen/classstdgpu_1_1deque_a615a923f59738ab9fbd0edd6f4107126", "doxygen/classstdgpu_1_1deque_a6efa64a8f3d321fcb42bcc24eee7842b", "doxygen/classstdgpu_1_1deque_a6fbde70d89dbac09e6042bb9a3461d7f", "doxygen/classstdgpu_1_1deque_a733ae315ab8ce1db20c945e74e0c27fe", "doxygen/classstdgpu_1_1deque_a75a61b09e8bd289324c68f2218f691d0", "doxygen/classstdgpu_1_1deque_a7848c9a68eccfbedbc5008efd54d1614", "doxygen/classstdgpu_1_1deque_a7c4f8c13257ed26e2104ac0703d58e7f", "doxygen/classstdgpu_1_1deque_a80b588cf9d5122b9cc0d8b9f342ba318", "doxygen/classstdgpu_1_1deque_aaa9f90ee0f01aa1076a5ab07795110bb", "doxygen/classstdgpu_1_1deque_aad633ae2f944118063b63cbbb216606c", "doxygen/classstdgpu_1_1deque_ab23ea24594fb4ceb1b477014c5e40ff6", "doxygen/classstdgpu_1_1deque_ab288a098eb638a6bb03ed6cc8bd37127", "doxygen/classstdgpu_1_1deque_ab5230bdd89af77a26d9729eaa3a5608e", "doxygen/classstdgpu_1_1deque_ab6e9630b4f2674472d5ac785c3220ca4", "doxygen/classstdgpu_1_1deque_ac46ce31aade3688766341bcc6ce7d8c6", "doxygen/classstdgpu_1_1deque_ac66084f7c32b6d7ede2f90d011a4dd3f", "doxygen/classstdgpu_1_1deque_ac7cb13207bdf433adb958db3a108bb7b", "doxygen/classstdgpu_1_1deque_ace0cdd73f6bd1083946126063b4fc9b5", "doxygen/classstdgpu_1_1deque_ad0094ee24c8110ffd1ea24adeb6ef029", "doxygen/classstdgpu_1_1deque_adb0e5d26ecdd1616a49329640644ee31", "doxygen/classstdgpu_1_1deque_ae0082ed954fd673a5a738fdd343ba654", "doxygen/classstdgpu_1_1deque_aec15240536b55698ef1a5475137f36c7", "doxygen/classstdgpu_1_1deque_aec64c86c12edd9249c752b87344ea8e2", "doxygen/classstdgpu_1_1deque_aecc83da88bae14801815309da0aaf4b8", "doxygen/classstdgpu_1_1deque_af46a731d261c63f9c41932d3c27a7c31", "doxygen/classstdgpu_1_1deque_af60cd499871852ab9fb66be934ebf03e", "doxygen/classstdgpu_1_1deque_afd7d1c0b139f443d4f89a54b57373d57", "doxygen/classstdgpu_1_1device__range", "doxygen/classstdgpu_1_1device__range-members", "doxygen/classstdgpu_1_1device__range_a00d2198dbb3ebbf26d507c651de3ff1c", "doxygen/classstdgpu_1_1device__range_a0f31185999a682850571a6db76535ad5", "doxygen/classstdgpu_1_1device__range_a18813374137d90ed1957859495f1ce86", "doxygen/classstdgpu_1_1device__range_a212cb29b29a9e52fdc8cfa8e3c80705b", "doxygen/classstdgpu_1_1device__range_a349660e1bd528b56973ddf0c6954083c", "doxygen/classstdgpu_1_1device__range_a3a242586f6b016bdd2e24572caf64c6a", "doxygen/classstdgpu_1_1device__range_a6842509f472ed1c4269dd229192d5af0", "doxygen/classstdgpu_1_1device__range_a968d0567ec5cd51d10b39ca43f263de7", "doxygen/classstdgpu_1_1device__range_aa1e7719bc211428d71f475564d05715f", "doxygen/classstdgpu_1_1device__range_aac327ef6580b38b4f6c29465542e65b0", "doxygen/classstdgpu_1_1device__range_ab0be0f447eac673f403340ec0ebbd517", "doxygen/classstdgpu_1_1device__range_adebbc838a080b3978be2e1ba484f7ab5", "doxygen/classstdgpu_1_1device__unique__object", "doxygen/classstdgpu_1_1device__unique__object-members", "doxygen/classstdgpu_1_1device__unique__object_a159cf254ab754a23aa316c313e94872d", "doxygen/classstdgpu_1_1device__unique__object_a2037ded3d277d9b6d7ea7444e35f2505", "doxygen/classstdgpu_1_1device__unique__object_a6d3c3ab9a1cb44267dc2b427c54905d6", "doxygen/classstdgpu_1_1device__unique__object_a8edc637b0d23077f71bd3f296976274e", "doxygen/classstdgpu_1_1device__unique__object_af0a6358b6be7c1558ba352296628ec87", "doxygen/classstdgpu_1_1device__unique__object_afcf81ef94b4b76558ba2bf10114c32a1", "doxygen/classstdgpu_1_1front__insert__iterator", "doxygen/classstdgpu_1_1front__insert__iterator-members", "doxygen/classstdgpu_1_1front__insert__iterator_a031768674ceaeb44023f592acbed17bb", "doxygen/classstdgpu_1_1front__insert__iterator_a5d3a17ec4162f2d11443fc3e38f586e5", "doxygen/classstdgpu_1_1host__range", "doxygen/classstdgpu_1_1host__range-members", "doxygen/classstdgpu_1_1host__range_a2977588ec637a869ca7e876697342f59", "doxygen/classstdgpu_1_1host__range_a2ada7d63b1c4791c1ad01e64d87de338", "doxygen/classstdgpu_1_1host__range_a3fdec5a56aa00a451357790708eea6a7", "doxygen/classstdgpu_1_1host__range_a507fbe895180085dbb06165d2e23925d", "doxygen/classstdgpu_1_1host__range_a5f8767ed95ce8f9060ee160f4bc8b9c8", "doxygen/classstdgpu_1_1host__range_a69be7ac9fe732d9c76aad86cfae1f0f7", "doxygen/classstdgpu_1_1host__range_a6c1c6258cfe7e927030e8ee3892b421f", "doxygen/classstdgpu_1_1host__range_a7ee0cd04643a5e61376df3fd2d965e09", "doxygen/classstdgpu_1_1host__range_a8e902cd6d7bca71967bf670924058c09", "doxygen/classstdgpu_1_1host__range_aa5b8b0e677f9d3b2299e62893972e3c1", "doxygen/classstdgpu_1_1host__range_aa75e29613811ff39feeaf8e5051222e5", "doxygen/classstdgpu_1_1host__range_aad2100437a6893704b8971c762d315c5", "doxygen/classstdgpu_1_1insert__iterator", "doxygen/classstdgpu_1_1insert__iterator-members", "doxygen/classstdgpu_1_1insert__iterator_a97b89f12d33aae6a8d75bb9fc7f6d153", "doxygen/classstdgpu_1_1insert__iterator_af9924ebdda7edab2b6847fafe28ccb50", "doxygen/classstdgpu_1_1mutex__array", "doxygen/classstdgpu_1_1mutex__array-members", "doxygen/classstdgpu_1_1mutex__array_1_1reference", "doxygen/classstdgpu_1_1mutex__array_1_1reference-members", "doxygen/classstdgpu_1_1mutex__array_1_1reference_a7666d3ae3df484b2065b4845ba42cd22", "doxygen/classstdgpu_1_1mutex__array_1_1reference_a8e044386e1581260b13c6ca534cb3540", "doxygen/classstdgpu_1_1mutex__array_a1c995793a4ff1df0a1fbdece1c48804b", "doxygen/classstdgpu_1_1mutex__array_a225cce28d08119b11019a8d8b720facf", "doxygen/classstdgpu_1_1mutex__array_a399ad68ea62e69e891208d4b98b245d1", "doxygen/classstdgpu_1_1mutex__array_a3b385f4df5645cfdc2104464f665042c", "doxygen/classstdgpu_1_1mutex__array_a403a9d26451a83f74b8beda06dea5d60", "doxygen/classstdgpu_1_1mutex__array_a44c6d42f117e25d1ada6563adaa05981", "doxygen/classstdgpu_1_1mutex__array_a5ea44823ec86bb7a49bff6223cd8b336", "doxygen/classstdgpu_1_1mutex__array_a65994416407b6b951c61455128168bc1", "doxygen/classstdgpu_1_1mutex__array_a6f159d5b8fdac8c829d2b4b36c37a8f2", "doxygen/classstdgpu_1_1mutex__array_abf78ae0fcd4b64353d4582eb13455174", "doxygen/classstdgpu_1_1mutex__array_ad4d0473167007fb69c5678899d199988", "doxygen/classstdgpu_1_1mutex__array_ae9a6ab5edade6c6e4b27b9f26f8b2eec", "doxygen/classstdgpu_1_1queue", "doxygen/classstdgpu_1_1queue-members", "doxygen/classstdgpu_1_1queue_a0fccffb67ae6c43a2cc5e04d938ce9ff", "doxygen/classstdgpu_1_1queue_a193197a33c08bd98660f21ef90b952c5", "doxygen/classstdgpu_1_1queue_a35b70630eb5250f3539e948a98a920da", "doxygen/classstdgpu_1_1queue_a4dde90d167664043b24f36181386659c", "doxygen/classstdgpu_1_1queue_a4fb71b8f76b01e76b5cff637c0d4db5b", "doxygen/classstdgpu_1_1queue_a4fcd110bc756255dcf3f45d400226a41", "doxygen/classstdgpu_1_1queue_a556d6fbd03e384e9a7adf4ef9bf77a42", "doxygen/classstdgpu_1_1queue_a67d47a805536f12dd545a945ce474521", "doxygen/classstdgpu_1_1queue_a7cd4123272b38a24912d7a7936372389", "doxygen/classstdgpu_1_1queue_a9160dd61252020f3f6ea4a508b79f049", "doxygen/classstdgpu_1_1queue_a92a990c87a7c30308b86095054917746", "doxygen/classstdgpu_1_1queue_add18587162e5ccfb34df2ec0fd0048f6", "doxygen/classstdgpu_1_1queue_ae49f3f8f38f9213984f0475f61fd0582", "doxygen/classstdgpu_1_1queue_af1c87c19e135b9b694136b64c33953ca", "doxygen/classstdgpu_1_1stack", "doxygen/classstdgpu_1_1stack-members", "doxygen/classstdgpu_1_1stack_a0d23124fd2f20a1d7a5462e90daee922", "doxygen/classstdgpu_1_1stack_a309d812f0099397e9433e720676156b3", "doxygen/classstdgpu_1_1stack_a41333f67d105a3df1553c4f28f9acaad", "doxygen/classstdgpu_1_1stack_a4e7de84aba7e3a6618aaff3506d1f1ee", "doxygen/classstdgpu_1_1stack_a534cbdb1517e65f1cda6f17c476b1faf", "doxygen/classstdgpu_1_1stack_a55207e62ef6e199d5ff6ab7fdf4df599", "doxygen/classstdgpu_1_1stack_a5f2cf847dddb953f4c8c48cbf68e229e", "doxygen/classstdgpu_1_1stack_a634495ac058c3ebae9b917b49f42af93", "doxygen/classstdgpu_1_1stack_a74ac8c3ee6694946e263d42afd159a10", "doxygen/classstdgpu_1_1stack_a7aeaa470fd4b4691ab3c2daa21d39909", "doxygen/classstdgpu_1_1stack_a95492c30a94aa9948a28688a327e31a3", "doxygen/classstdgpu_1_1stack_aa258ba7fc58319541e4253bc5e0b0a0b", "doxygen/classstdgpu_1_1stack_ab7d9d1c94347427a027c7f5ce8f70cb8", "doxygen/classstdgpu_1_1stack_ad2c0cfd49c1ea2381a78f67851785487", "doxygen/classstdgpu_1_1transform__range", "doxygen/classstdgpu_1_1transform__range-members", "doxygen/classstdgpu_1_1transform__range_a0de4cacc478fc9dd8b4af8fa19cb7ffc", "doxygen/classstdgpu_1_1transform__range_a2244f2594215423b18d246095b8aff47", "doxygen/classstdgpu_1_1transform__range_a4fc8b0a3ada7d82623ca4445a4ca4519", "doxygen/classstdgpu_1_1transform__range_a5941486c1e235ef7273cce0d14592a80", "doxygen/classstdgpu_1_1transform__range_a8159664f1016fc044eebdab20637f078", "doxygen/classstdgpu_1_1transform__range_a8497ce76b7058fb10ea528937ab9fd75", "doxygen/classstdgpu_1_1transform__range_a8d4f062edab90d2b6ba3c4d34049e216", "doxygen/classstdgpu_1_1transform__range_a97758caf5d606594c5a41ee92897a115", "doxygen/classstdgpu_1_1transform__range_aa1eb5d0fd0908a9a03553b2b3d864d98", "doxygen/classstdgpu_1_1transform__range_abc6aa736c09cb3b01922c56b6fa8cbdb", "doxygen/classstdgpu_1_1unordered__map", "doxygen/classstdgpu_1_1unordered__map-members", "doxygen/classstdgpu_1_1unordered__map_a0b91355acea6be87945ba4b99c50c032", "doxygen/classstdgpu_1_1unordered__map_a10f9997da89002aaef5b05065ba89986", "doxygen/classstdgpu_1_1unordered__map_a13fc798e0bb13e09cf107f4cc89a77dd", "doxygen/classstdgpu_1_1unordered__map_a1c1174e7303146179f4475674d618ef6", "doxygen/classstdgpu_1_1unordered__map_a1c9d46242fa3194dd206e1f22b9f0b5a", "doxygen/classstdgpu_1_1unordered__map_a1cd7abd237b0bd80a3b80108964f1414", "doxygen/classstdgpu_1_1unordered__map_a225cebac9c682f62a6bab61a0e5d89bf", "doxygen/classstdgpu_1_1unordered__map_a28c2b8d40bb2f5f248175ef30ed7d035", "doxygen/classstdgpu_1_1unordered__map_a2a10621d961f08a7021212b9a7f11527", "doxygen/classstdgpu_1_1unordered__map_a2fc0faeeb752f164d63b5ea82e762fe4", "doxygen/classstdgpu_1_1unordered__map_a34175fb5ac53fc067687036aa7efe4c8", "doxygen/classstdgpu_1_1unordered__map_a3553a2734cf05c06165683b253fcc594", "doxygen/classstdgpu_1_1unordered__map_a3689fa9b27ef119a5f04fa1479f8d0a6", "doxygen/classstdgpu_1_1unordered__map_a36f03669e7033efd099e65363fd1ef50", "doxygen/classstdgpu_1_1unordered__map_a3c5dcb288e65005bc43984c819833595", "doxygen/classstdgpu_1_1unordered__map_a40dfbbdac1d4dd6fa7637c4ffedefb56", "doxygen/classstdgpu_1_1unordered__map_a413c00fa0ac3ee5ba7c1a1a28ceb3b61", "doxygen/classstdgpu_1_1unordered__map_a47481928f65b91f75f0b13975d6a17b8", "doxygen/classstdgpu_1_1unordered__map_a47a91489d9b4bfa2b40197bced28701a", "doxygen/classstdgpu_1_1unordered__map_a4a4b09a8b128b134d112d93444af3b71", "doxygen/classstdgpu_1_1unordered__map_a4f84cc1a08f34935c971dbde24f00b49", "doxygen/classstdgpu_1_1unordered__map_a5134a31a8f58796dfd34391b338b4e49", "doxygen/classstdgpu_1_1unordered__map_a5a9e386ff1da292168af5797678c2bff", "doxygen/classstdgpu_1_1unordered__map_a5adcd909b3e2ff07ee89642543f22000", "doxygen/classstdgpu_1_1unordered__map_a5b64fb0eb27b0693a54e83ad827c27d0", "doxygen/classstdgpu_1_1unordered__map_a6129ae52579a7458b5d9cf4088f7d46c", "doxygen/classstdgpu_1_1unordered__map_a6346cb21cbfb6b7770bb0e6bfc78452d", "doxygen/classstdgpu_1_1unordered__map_a6d0b3e69e5473e7f41e8ba4ab0ca7c21", "doxygen/classstdgpu_1_1unordered__map_a70e4f2a4f787bb130f6c0e6a91932a5c", "doxygen/classstdgpu_1_1unordered__map_a75cbf06bf0a74f675b2476125678ce49", "doxygen/classstdgpu_1_1unordered__map_a769ed0229e1f830757f64bfc07e81773", "doxygen/classstdgpu_1_1unordered__map_a79f84ace8dcd07ad29d15adc38d27bdf", "doxygen/classstdgpu_1_1unordered__map_a8ba60bae4445ee71ff8c93c72e0ba201", "doxygen/classstdgpu_1_1unordered__map_a8c725208bf8b3a543d3c8d308ee61d92", "doxygen/classstdgpu_1_1unordered__map_a8f0d80cce2835654abedc7891c62f383", "doxygen/classstdgpu_1_1unordered__map_a90d901708528d323e25e6637c78556d1", "doxygen/classstdgpu_1_1unordered__map_a935853d385f87386857e26e695ceb523", "doxygen/classstdgpu_1_1unordered__map_a9b863bb5f90e924c363db186937113c1", "doxygen/classstdgpu_1_1unordered__map_aa33ca3f839f958009e00f1e8e7a97c3d", "doxygen/classstdgpu_1_1unordered__map_aa438e338e5bfe603b6cb7daa0e1ea97f", "doxygen/classstdgpu_1_1unordered__map_aa9850326e1dc3ebfae057c330aae4da5", "doxygen/classstdgpu_1_1unordered__map_aacdc3ae840cff319de881ce65194a112", "doxygen/classstdgpu_1_1unordered__map_aae02ab9e18f6778fee549b572cea6ed0", "doxygen/classstdgpu_1_1unordered__map_ab90f10d46a65ed313d5e6bce4a7a2dca", "doxygen/classstdgpu_1_1unordered__map_ac33606f2e6d850dd04d2ae12319a5559", "doxygen/classstdgpu_1_1unordered__map_ac5927b12e496fb1d253398b68a018c53", "doxygen/classstdgpu_1_1unordered__map_ac86eb15d19265a36ab197a43e93be66f", "doxygen/classstdgpu_1_1unordered__map_ac917bd80ae24050fc8b71febe379cf53", "doxygen/classstdgpu_1_1unordered__map_acef070794a0e35c3f7427663794a70e6", "doxygen/classstdgpu_1_1unordered__map_ad0becb3e9155aaf2216460adffac4c57", "doxygen/classstdgpu_1_1unordered__map_ad2cc91c91a4cdb12d24b94da2bc09f4f", "doxygen/classstdgpu_1_1unordered__map_adbc7cd1f8333385096e4c28675128d74", "doxygen/classstdgpu_1_1unordered__map_ae28ade69988d5d62436beb846326e766", "doxygen/classstdgpu_1_1unordered__map_aea3529ceab3b0c8d98877f63808f0167", "doxygen/classstdgpu_1_1unordered__map_af13b5a52fafe2ccaa1e3a89a5d000b32", "doxygen/classstdgpu_1_1unordered__map_af273559138872441208932e61f555109", "doxygen/classstdgpu_1_1unordered__map_af89066c32bbbcc21718f92989f2c774b", "doxygen/classstdgpu_1_1unordered__map_afda3c54af82fef9d9048b2c4b534520e", "doxygen/classstdgpu_1_1unordered__set", "doxygen/classstdgpu_1_1unordered__set-members", "doxygen/classstdgpu_1_1unordered__set_a0586a05c475471dcc9af616f377518a4", "doxygen/classstdgpu_1_1unordered__set_a06855581be32d85c8c706bd60d7ff576", "doxygen/classstdgpu_1_1unordered__set_a13541565247b9a29e83d97251d3d88c4", "doxygen/classstdgpu_1_1unordered__set_a1cfca17870a0705ac9498a696be61699", "doxygen/classstdgpu_1_1unordered__set_a2a0a86ba3d4788a88120276f12f62f57", "doxygen/classstdgpu_1_1unordered__set_a2dbcc1e8d76c53a8259095fb9b50edef", "doxygen/classstdgpu_1_1unordered__set_a2ebee0a96edd4a479e03adaa75c51d9c", "doxygen/classstdgpu_1_1unordered__set_a34e0b636cef40749fe28c6ef567625d7", "doxygen/classstdgpu_1_1unordered__set_a3625346bf7b1d7b063300120830747b5", "doxygen/classstdgpu_1_1unordered__set_a366b8c2152edd313af682dcd7644be08", "doxygen/classstdgpu_1_1unordered__set_a3c3a6452a2925c51a37b3917e2f489c0", "doxygen/classstdgpu_1_1unordered__set_a4107c5999557d552cfcf3847dcce2c28", "doxygen/classstdgpu_1_1unordered__set_a441b61a8bfe4bee8d5d1a57cb821153f", "doxygen/classstdgpu_1_1unordered__set_a471ec53f0b647ec69d0c010010c2d779", "doxygen/classstdgpu_1_1unordered__set_a5287ec2f4ddd1664f0a5181672b65146", "doxygen/classstdgpu_1_1unordered__set_a5ca9fde00379ce6b9cb51de047f9cbae", "doxygen/classstdgpu_1_1unordered__set_a5faa7bd33bb9080c25d64d83994dbfae", "doxygen/classstdgpu_1_1unordered__set_a609d58fffa0d6e8792aecd0c1406bf72", "doxygen/classstdgpu_1_1unordered__set_a655829d43543f393eef8d419a7244327", "doxygen/classstdgpu_1_1unordered__set_a6e55fa92278c9b1f557a648aa678df6c", "doxygen/classstdgpu_1_1unordered__set_a754d5353085e07ab65b4ae5af0f4bd55", "doxygen/classstdgpu_1_1unordered__set_a7759b8368eebed5d5050b7ada477b8e5", "doxygen/classstdgpu_1_1unordered__set_a7dcfdce5cbc4ba2be0e6168b4a874ef9", "doxygen/classstdgpu_1_1unordered__set_a7df5305ab7dd2dc1eeffe1e64cabcae0", "doxygen/classstdgpu_1_1unordered__set_a7f53b11be27d21caf74a33a5abc0be55", "doxygen/classstdgpu_1_1unordered__set_a817fade71ca5034e80bb6fa31ce522c6", "doxygen/classstdgpu_1_1unordered__set_a83876a376bd75b43dbfa1097226a925b", "doxygen/classstdgpu_1_1unordered__set_a88b6edbf29fdd40db075643cfbcf7347", "doxygen/classstdgpu_1_1unordered__set_a94a90ea201b3f3ba0720394fced4ed1a", "doxygen/classstdgpu_1_1unordered__set_a9b50daf1bd72fc02b84ace8a3cd1fc48", "doxygen/classstdgpu_1_1unordered__set_aa000d235371b6a7025b5258ed8f5980a", "doxygen/classstdgpu_1_1unordered__set_aa18078b9fe040e9f1b2cc98d918a150e", "doxygen/classstdgpu_1_1unordered__set_aa5279d861c37b5c68cb483c677269ee1", "doxygen/classstdgpu_1_1unordered__set_aa83cb9bd0fa4f1338f1e7960b3caef2a", "doxygen/classstdgpu_1_1unordered__set_aa9dbc9d0387d779c7f84d18a248de42b", "doxygen/classstdgpu_1_1unordered__set_aaa2c8ed250b2cbe7c327873101dcbcc4", "doxygen/classstdgpu_1_1unordered__set_aac1e6362fc9776cbb26bbdb8f245f1ed", "doxygen/classstdgpu_1_1unordered__set_aad2792c82d1040f0da05d6529364c1d5", "doxygen/classstdgpu_1_1unordered__set_aaeeb852b95f85eae0737aad8290d0f89", "doxygen/classstdgpu_1_1unordered__set_aaef89e106150dc3d8af13bcc0a91363d", "doxygen/classstdgpu_1_1unordered__set_ab7b6a04ddec531bc9bd8d5d458c9e274", "doxygen/classstdgpu_1_1unordered__set_ab86b40a9751195d7a37d9f3c766002b0", "doxygen/classstdgpu_1_1unordered__set_ac0dd5c5c39a2c2a225e35994678ae4e2", "doxygen/classstdgpu_1_1unordered__set_ac715bd3e180109cb0ebeb39015ddb93a", "doxygen/classstdgpu_1_1unordered__set_aca9d26554d0cb0e2a483f8466e9bc11e", "doxygen/classstdgpu_1_1unordered__set_ad7dcee55f0385a9131dd48a96d4a1529", "doxygen/classstdgpu_1_1unordered__set_ad85f0e80013c7f52c4cc06d794ae411a", "doxygen/classstdgpu_1_1unordered__set_ad884c32aad19be044bbc2d5723e7b396", "doxygen/classstdgpu_1_1unordered__set_ad8ec65672aefb7e106e819ccb53f57a8", "doxygen/classstdgpu_1_1unordered__set_adb4cc2fdf59a8e6aa341e3aa616f90bb", "doxygen/classstdgpu_1_1unordered__set_adbf19f6b67069d10f9e742fc6d55c2e3", "doxygen/classstdgpu_1_1unordered__set_add0f420ccab99022804221eb962ea4db", "doxygen/classstdgpu_1_1unordered__set_adeac058fd25af2515a769d4d0fed9cd2", "doxygen/classstdgpu_1_1unordered__set_ae867536e1e354f97a1ee9c70394a0d7e", "doxygen/classstdgpu_1_1unordered__set_aece58152caa2dc92e3b482c7257a3840", "doxygen/classstdgpu_1_1unordered__set_aefb59ed3ea7cfe6dbe31ea0bec82484d", "doxygen/classstdgpu_1_1unordered__set_afa6f5347ce3198b5c2f6cde8fa0af6e9", "doxygen/classstdgpu_1_1vector", "doxygen/classstdgpu_1_1vector-members", "doxygen/classstdgpu_1_1vector_a0093fcdd91dbbe434f1511139e451236", "doxygen/classstdgpu_1_1vector_a0816331de28a6f27003c14e76c514035", "doxygen/classstdgpu_1_1vector_a0a1c83863a468dc2becc8bd3245ef7e8", "doxygen/classstdgpu_1_1vector_a10c1a55a9bc5381d47bc74484144efb3", "doxygen/classstdgpu_1_1vector_a111188f38908eabf7c502a0bb2420076", "doxygen/classstdgpu_1_1vector_a12c09e63ae52a2540eb4128029e2479d", "doxygen/classstdgpu_1_1vector_a18c4f34a0f8d54f4e98946726638e748", "doxygen/classstdgpu_1_1vector_a1bc1e768e5d35fffaad83f6652e2a08d", "doxygen/classstdgpu_1_1vector_a203399c07e0846e61824016aa79153a0", "doxygen/classstdgpu_1_1vector_a2759dd9ed4343649170294a5f98de058", "doxygen/classstdgpu_1_1vector_a2f692bd8e09c21004b500f48375290e7", "doxygen/classstdgpu_1_1vector_a33db89e6933dd7a4636d551c1d49734a", "doxygen/classstdgpu_1_1vector_a4029ed1d26534b245be6d79880e57581", "doxygen/classstdgpu_1_1vector_a451f5498afbfd57700a4d833fbabcbbf", "doxygen/classstdgpu_1_1vector_a4d16cd8bd7b163de0fa1a789569a863a", "doxygen/classstdgpu_1_1vector_a53ee549954f0ec706a6a9a254b5f651c", "doxygen/classstdgpu_1_1vector_a550c9bb2f86d141389b6576974ea1c13", "doxygen/classstdgpu_1_1vector_a5615dc6fc672ead80ed370ddefbded86", "doxygen/classstdgpu_1_1vector_a589cf80a376d3db2b68767ee1dee9091", "doxygen/classstdgpu_1_1vector_a58a2307b1fb4b9e12179696516933366", "doxygen/classstdgpu_1_1vector_a5b36f0889defe3960b18f9c1414c9a5e", "doxygen/classstdgpu_1_1vector_a5c978910aecbf68a5fcebebca0e7226e", "doxygen/classstdgpu_1_1vector_a5eee2ad816279ead47d978660aa4c0a8", "doxygen/classstdgpu_1_1vector_a6caafb08102c759a273a2f0e033bd4ab", "doxygen/classstdgpu_1_1vector_a75db1799377efd4d3c9a9f9cfae6efc0", "doxygen/classstdgpu_1_1vector_a781b2876f1ad58a0c1f5c3afbd6f0287", "doxygen/classstdgpu_1_1vector_a7dd66829711e8e671d3d490ed880deac", "doxygen/classstdgpu_1_1vector_a85f98eb22e2eae1a7c477282be7cfd3b", "doxygen/classstdgpu_1_1vector_a860a3c6316468a955173004b7dd72d90", "doxygen/classstdgpu_1_1vector_a862485c6eacec3b86f62158e5eb02812", "doxygen/classstdgpu_1_1vector_a8e4fd78b9c63d8162520a001a54057f9", "doxygen/classstdgpu_1_1vector_a8f8295c473e0c98c7d4e6666687208b3", "doxygen/classstdgpu_1_1vector_a934f2ffdbdad5cc347b67549a7967f22", "doxygen/classstdgpu_1_1vector_a9e5ce08a63d4f45e6140d02312c72330", "doxygen/classstdgpu_1_1vector_aa13e7abfa78e145d97a77fd9d0e9253b", "doxygen/classstdgpu_1_1vector_ab924bf35da7f363766c456145bfd293b", "doxygen/classstdgpu_1_1vector_ac298bcc14b449dc814e28e1181b7a997", "doxygen/classstdgpu_1_1vector_acb0e1512188f7c1c9302066a49c0882a", "doxygen/classstdgpu_1_1vector_ad3905f38ea28547c4bf83fc48d00f4a1", "doxygen/classstdgpu_1_1vector_ad40155e70c8e4bca3749ba8a65c92316", "doxygen/classstdgpu_1_1vector_add93a05d30fed38d01cfa38b0412f434", "doxygen/classstdgpu_1_1vector_ae1bbf4b60ca74dfc2b968ebd71282b38", "doxygen/classstdgpu_1_1vector_ae1d1bc5e5f7bc326748fe05dcc208af4", "doxygen/classstdgpu_1_1vector_aec43b223c3575d0aca500ebe3d52cd2c", "doxygen/classstdgpu_1_1vector_af340e744fffc062f6126dfbb20918846", "doxygen/classstdgpu_1_1vector_afc5c6ec769b1d3186da840137451459d", "doxygen/classstdgpu_1_1vector_afd1008ed51b71d4ec20a0d3aabdf4d87", "doxygen/compiler_8h", "doxygen/compiler_8h_source", "doxygen/config_8h_8in", "doxygen/contract_8h", "doxygen/contract_8h_source", "doxygen/cstddef_8h", "doxygen/cstddef_8h_source", "doxygen/deque_8cuh", "doxygen/device_8h_source", "doxygen/dir_428503dcf15f4bfec322f74d927bb3fb", "doxygen/dir_49e56c817e5e54854c35e136979f97ca", "doxygen/dir_898c961af6c7154379fc56a14535fef9", "doxygen/execution_8h", "doxygen/execution_8h_source", "doxygen/files", "doxygen/functional_8h", "doxygen/functional_8h_source", "doxygen/group__algorithm", "doxygen/group__algorithm_ga0b5cc5d196df56e6cb2bfeddd8391d01", "doxygen/group__algorithm_ga4aac2abc5af546a48dccab17837b308f", "doxygen/group__algorithm_ga565de133d4cf8410d40cdb25fb115798", "doxygen/group__algorithm_ga6eef069288db550f1e5487ac70d3bb99", "doxygen/group__algorithm_ga7afedcb1c9bffa8f2f3b364541657ce5", "doxygen/group__algorithm_ga81ef3aa13f35cbfad300b60df9a682b0", "doxygen/group__algorithm_gaadaf19b3d025db5c8e98809390410eeb", "doxygen/group__algorithm_gaf00e4ecd0c83fa98ac5840f9b4eea1b0", "doxygen/group__atomic", "doxygen/group__atomic_ga02a95237f9215b5445af72602de742af", "doxygen/group__atomic_ga129b71df4a774dff5ed90fb848b720b1", "doxygen/group__atomic_ga1c5cae047867e2e53bb81945fc851e72", "doxygen/group__atomic_ga200ddedf082902f0e86ffeaab1e1342d", "doxygen/group__atomic_ga31f9dcedcca97bda7f7d7fbd8139a71c", "doxygen/group__atomic_ga41db3cd72b1dfbe2291fa39ebe6a3fc6", "doxygen/group__atomic_ga49e453e978931f4f26bd65119041c63a", "doxygen/group__atomic_ga4ea04cb9397e2e3fdf98671edf092fd1", "doxygen/group__atomic_ga52929ba61da4d12a3fb526be635761be", "doxygen/group__atomic_ga59bf186739bbb7ccd43c16dc5fa8867d", "doxygen/group__atomic_ga5db7dc5560bcf4b833a90617b9b48a55", "doxygen/group__atomic_ga6100d28bebf55b64b220835d789ce53d", "doxygen/group__atomic_ga620902c6ed1003d77c083ce9fc0d84ae", "doxygen/group__atomic_ga76e883c39c6e4df1ef962afc118b8437", "doxygen/group__atomic_ga8d52f465e5e2fdac3468674739c1dc82", "doxygen/group__atomic_ga8f22a64958b426ac75998e780732aeb4", "doxygen/group__atomic_ga9e5c9ca30990fab8b865451e8fe2a9d0", "doxygen/group__atomic_gaa1e6d2bc92f44040c7a466df561b2f51", "doxygen/group__atomic_gacad24a7a81c7495380951780fb7de2bb", "doxygen/group__atomic_gacc1de96e08aff0d33567e5b78197664a", "doxygen/group__atomic_gaf74178c9ac98319834fe2d129ea51773", "doxygen/group__atomic_gaf93742b96fb03839557359711ffc9c52", "doxygen/group__bit", "doxygen/group__bit_ga000ca83776d024bb4339cffe62fceff4", "doxygen/group__bit_ga7a88237ffd8ac201d50b85789f20de2c", "doxygen/group__bit_ga9d30d2439cae63bb2c991643f9dd9755", "doxygen/group__bit_gaa3c39b5a76dd38f8bcd5c16fe153d32b", "doxygen/group__bit_gabf26596348b55612b2686baa7a04328b", "doxygen/group__bit_gada86b409717edbbeee94dacf442935f1", "doxygen/group__bit_gae4f9b287187273d3cb2a3ab614b8c966", "doxygen/group__bitset", "doxygen/group__compiler", "doxygen/group__config", "doxygen/group__contract", "doxygen/group__cstddef", "doxygen/group__data__structures", "doxygen/group__deque", "doxygen/group__execution", "doxygen/group__functional", "doxygen/group__iterator", "doxygen/group__iterator_ga0e906cc3cb26763107126537616a95df", "doxygen/group__iterator_ga1930e8f778034618d7c226119aacf378", "doxygen/group__iterator_ga1d2156e646cd66754318ef226fd4c391", "doxygen/group__iterator_ga23e760609935182e779e1ed51f84cdcc", "doxygen/group__iterator_ga2547330e223bdf1f9c73ee056634a4d4", "doxygen/group__iterator_ga34f43f98cd4f89db43d145fc313e9c93", "doxygen/group__iterator_ga3b42f7d8ad69f2606225ffd49a78a909", "doxygen/group__iterator_ga42472431abb9c6b20e8991037559bf61", "doxygen/group__iterator_ga483c639b2f3a2c8dd265a5ef22f73341", "doxygen/group__iterator_ga5769e14b2700cfbfd14b408524a1a34f", "doxygen/group__iterator_ga60a4cecd7787eec10082cdb1088de319", "doxygen/group__iterator_ga614ffbff47ebcb3e4bc656d3561920d8", "doxygen/group__iterator_ga6ef9e87a5d4d4bbb356b61b47edd1628", "doxygen/group__iterator_ga6fb75645295f15b396cf74957f8de508", "doxygen/group__iterator_ga7445d2a775ca6703a3d33801bc8bfdb4", "doxygen/group__iterator_ga7a99ec32a48e44905ac872e1135a5ee7", "doxygen/group__iterator_ga7c9ac3d63e5edf4b233a2e9a81a71144", "doxygen/group__iterator_ga8d975a2c2b2987a72bb148519d924d45", "doxygen/group__iterator_ga923ee861262bc590d780fd07bb6f18f7", "doxygen/group__iterator_ga95f617f8a2691b15656fe850f7a7a0d1", "doxygen/group__iterator_gaa096451d625bc742d2bf6489259e041f", "doxygen/group__iterator_gaab6088756ec6a8bff18be58bcbef69eb", "doxygen/group__iterator_gaacf57ef317a4a0862456aa626b905bec", "doxygen/group__iterator_gab37d31ea1e88464b33201c51bcbb7e2d", "doxygen/group__iterator_gab6399a2a814ee797138e47de6b3b5366", "doxygen/group__iterator_gab677890f4cbebfe871e2ba88c8833565", "doxygen/group__iterator_gacea0e5c13c16c6957a11ca0375970be9", "doxygen/group__iterator_gad3bebb4a54fececbdf778337f25aa49b", "doxygen/group__iterator_gaeff91d38431463f68e8de5303ddb25a2", "doxygen/group__iterator_gaf2017062ac7701fdced76c342c7351bd", "doxygen/group__iterator_gaf302d69a0468d75cf69d212d0f09166e", "doxygen/group__iterator_gafe9e995136f718e126848ade5b7b3813", "doxygen/group__limits", "doxygen/group__memory", "doxygen/group__memory_ga013559d7b7541834fed1c1273fc6bfc9", "doxygen/group__memory_ga075af49dd57c3c99feb4d2d312112159", "doxygen/group__memory_ga198de7e9d2a392c7a1daa35e4297e949", "doxygen/group__memory_ga21ed721bec58c4f1bfdac3a26ca9ea6a", "doxygen/group__memory_ga34ac68e2cacb089a38a1d5f3ab9cc636", "doxygen/group__memory_ga372d470c4a658990a5097591fc904415", "doxygen/group__memory_ga37a59c41f852e87d333aa31b2058d44b", "doxygen/group__memory_ga3d2293892395c750ea9847cea62648ae", "doxygen/group__memory_ga498262251e8954f199c8010f08cb79ca", "doxygen/group__memory_ga4ddddacc6bfa28be4252a408558da00a", "doxygen/group__memory_ga556fea26fdb67ebbcd2a24191a73e534", "doxygen/group__memory_ga6672cdde5db3cdddf642039a5cacd3af", "doxygen/group__memory_ga67a97f08e29a9410ee9c74dcbc8e55ca", "doxygen/group__memory_ga6ee49a4cab875bd3eb9bdc334093d5dc", "doxygen/group__memory_ga70fcf2cb1510ed56d73f2327db465d27", "doxygen/group__memory_ga72aaac6abc2adf3748365bb2d5489198", "doxygen/group__memory_ga88503b225c4b5090c83dbd83e600d554", "doxygen/group__memory_ga8c2c4321e874a31a3f2b561c59ca1dfb", "doxygen/group__memory_ga8c602ca82065ab61886f04670b2d0cf6", "doxygen/group__memory_ga8ffa3291b5459b10feb1610c5fd25b71", "doxygen/group__memory_ga950dbc1db080680dd5388c2a4f8d4142", "doxygen/group__memory_ga96cf6385f1c78e9eb7511187a5f915fb", "doxygen/group__memory_ga9df152bc71e0088453ffad0071ce520b", "doxygen/group__memory_ga9e69840b1a7cb2b721c188041c405d3c", "doxygen/group__memory_ga9f6029c96f143cc0768c48c34da23d9c", "doxygen/group__memory_gaac53f0bb67ae88a76cd6503345a61b71", "doxygen/group__memory_gac8bfa0eeebcd6e4a23e736e82865506e", "doxygen/group__memory_gaca75bee2ef7e8e5c2f4a500773136efa", "doxygen/group__memory_gacd327816a2da1fd3bbebd88a9c56b898", "doxygen/group__memory_gad579303dc135400a4d919403f27cd516", "doxygen/group__memory_gae65960011022fce97852b4425ceaec7a", "doxygen/group__memory_gaf9f58b4cea111d7723a2519090a8d664", "doxygen/group__memory_gaff51cb395ff5a8d82d8950b12c660d47", "doxygen/group__mutex", "doxygen/group__mutex_gab1127ae3d8dcaa92f752e3c524a5baa1", "doxygen/group__numeric", "doxygen/group__numeric_ga6084e7001f21bc5247e9e9cea9d6db75", "doxygen/group__numeric_gaa47698d5c1c712d03effe6f48312428e", "doxygen/group__platform", "doxygen/group__queue", "doxygen/group__ranges", "doxygen/group__ranges_ga666a8f1d6392473e9b6dadcb2ea7f80c", "doxygen/group__ranges_ga6edb8f022d6f451efe8afee6fde97e02", "doxygen/group__stack", "doxygen/group__system", "doxygen/group__type__traits", "doxygen/group__unordered__map", "doxygen/group__unordered__set", "doxygen/group__utilities", "doxygen/group__utility", "doxygen/group__utility_ga403141a3dd79113d922de22ecbb23ddd", "doxygen/group__utility_ga46c23f5a3d2f65b89c667faf55cfb72b", "doxygen/group__utility_ga52aa2811615f6a8b00b5898184667ec2", "doxygen/group__utility_gae4a55cfe9f3653f59b77ccdd532ce938", "doxygen/group__vector", "doxygen/iterator_8h", "doxygen/iterator_8h_source", "doxygen/limits_8h", "doxygen/limits_8h_source", "doxygen/memory_8h", "doxygen/memory_8h_source", "doxygen/modules", "doxygen/mutex_8cuh", "doxygen/mutex_8cuh_a5aeb511d23e2c9d53a69c23c55853767", "doxygen/numeric_8h", "doxygen/numeric_8h_source", "doxygen/platform_8h", "doxygen/platform_8h_source", "doxygen/queue_8cuh", "doxygen/ranges_8h", "doxygen/ranges_8h_source", "doxygen/stack_8cuh", "doxygen/structstdgpu_1_1allocator__traits", "doxygen/structstdgpu_1_1allocator__traits-members", "doxygen/structstdgpu_1_1allocator__traits_a25aa5e2d3c5a9e0535fcae3a31319b82", "doxygen/structstdgpu_1_1allocator__traits_a2a75b123e7690b648ea0899f4981d374", "doxygen/structstdgpu_1_1allocator__traits_a2a88462b9698422b30191950b3193171", "doxygen/structstdgpu_1_1allocator__traits_a3f06fb9936e0bd80746b9288a8570d7b", "doxygen/structstdgpu_1_1allocator__traits_a55528b7d04bc37b82b551e593ead168e", "doxygen/structstdgpu_1_1allocator__traits_a59aad455a09028474275452fdbf55033", "doxygen/structstdgpu_1_1allocator__traits_a6ed13c59b6c1e77abe87fece4fde6215", "doxygen/structstdgpu_1_1allocator__traits_a71a2b277752444ad25083811a81b89ca", "doxygen/structstdgpu_1_1allocator__traits_a8a7059fefa040a160eff63ab48eb6e3b", "doxygen/structstdgpu_1_1allocator__traits_a92115354bfc2fd14b1b46d371bdeab52", "doxygen/structstdgpu_1_1allocator__traits_a9856609d26289c2cb22fa37856345cda", "doxygen/structstdgpu_1_1allocator__traits_a99df1a3b138a04b1d31fb90034f75ab0", "doxygen/structstdgpu_1_1allocator__traits_aa936c46f7698b0eb4e60813826318725", "doxygen/structstdgpu_1_1allocator__traits_aab29639b11528967a323ba443db8ce80", "doxygen/structstdgpu_1_1allocator__traits_aae09fb5e867cec3a4cc217e1c2fdb1b6", "doxygen/structstdgpu_1_1allocator__traits_acae2746f085e103432e542b3a64ec9c7", "doxygen/structstdgpu_1_1allocator__traits_ace1b8bdc1ac6535b2255d80747f75476", "doxygen/structstdgpu_1_1allocator__traits_ad612264ebb184b31d29568dd1160898d", "doxygen/structstdgpu_1_1allocator__traits_ae5d87a1cbef8e36523432c391504c4ac", "doxygen/structstdgpu_1_1allocator__traits_aeceaffd3ea4112b3402dd8c135e1662d", "doxygen/structstdgpu_1_1allocator__traits_aee98218272148ee976fc5e4919686ea1", "doxygen/structstdgpu_1_1allocator__traits_af79c19bc7b088820614c64d1a5e6f982", "doxygen/structstdgpu_1_1allocator__traits_afa335f987fc643145311b7144906a284", "doxygen/structstdgpu_1_1bit__not", "doxygen/structstdgpu_1_1bit__not-members", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4-members", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4_a899611e62de2fd8e1aa07302c3314af5", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4_afdec7d8b1ca7fd30d42517a64f6515eb", "doxygen/structstdgpu_1_1bit__not_a3957f5cbb51151de23e93fb806ba8025", "doxygen/structstdgpu_1_1equal__to", "doxygen/structstdgpu_1_1equal__to-members", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4-members", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4_a2284dbb147364dd79971cc1eea4cb186", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4_ad8fdc5d8de476a219e8e85b251790db4", "doxygen/structstdgpu_1_1equal__to_a7716e2aeda03e7d19caa60a854428424", "doxygen/structstdgpu_1_1hash", "doxygen/structstdgpu_1_1hash_3_01bool_01_4", "doxygen/structstdgpu_1_1hash_3_01bool_01_4-members", "doxygen/structstdgpu_1_1hash_3_01bool_01_4_a800626f0b19d0582aa7e831e1eec5160", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4-members", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4_a86ad4cecb176b4d1329cd45d6e208e84", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4-members", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4_a52750aad0273d8ba47bc9169d2bf0118", "doxygen/structstdgpu_1_1hash_3_01char_01_4", "doxygen/structstdgpu_1_1hash_3_01char_01_4-members", "doxygen/structstdgpu_1_1hash_3_01char_01_4_aebc31cb0c5914c02990685205e216e40", "doxygen/structstdgpu_1_1hash_3_01double_01_4", "doxygen/structstdgpu_1_1hash_3_01double_01_4-members", "doxygen/structstdgpu_1_1hash_3_01double_01_4_ad00fd5bf23ce5136658b60a00e116eee", "doxygen/structstdgpu_1_1hash_3_01float_01_4", "doxygen/structstdgpu_1_1hash_3_01float_01_4-members", "doxygen/structstdgpu_1_1hash_3_01float_01_4_a6f305075338f2fe8c122a57698bf7638", "doxygen/structstdgpu_1_1hash_3_01int_01_4", "doxygen/structstdgpu_1_1hash_3_01int_01_4-members", "doxygen/structstdgpu_1_1hash_3_01int_01_4_a9a33905e2877e1d1c6a713d253e12b39", "doxygen/structstdgpu_1_1hash_3_01long_01_4", "doxygen/structstdgpu_1_1hash_3_01long_01_4-members", "doxygen/structstdgpu_1_1hash_3_01long_01_4_a326545e54badd05bd1a30076645e4df6", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4-members", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4_a6763d5abccd7e7231fed4a4dd378db65", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4-members", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4_a5fc4b0ccfee72f060812a05ac61c2a60", "doxygen/structstdgpu_1_1hash_3_01short_01_4", "doxygen/structstdgpu_1_1hash_3_01short_01_4-members", "doxygen/structstdgpu_1_1hash_3_01short_01_4_a5cc0c0b719462b7b27dbee1ad91e43f6", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4-members", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4_a3f2d4f9cc91f7e21bd9058a85aed8256", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4-members", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4_a4ad633e52b9ef646158875638c296a16", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4-members", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4_ad6b4c13b408c21d743e82bd9da3d87d7", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4-members", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4_a32a4742964b8f4391669055f51ca6259", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4-members", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4_a9b0989cd4bbb2a0354373b61f16fb4fe", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4-members", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4_ad3799ce70bd4d58c88314cfd108d1d14", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4-members", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4_abbd9a755fd45f8b10f5ea7a0ac8b6922", "doxygen/structstdgpu_1_1identity", "doxygen/structstdgpu_1_1identity-members", "doxygen/structstdgpu_1_1identity_a8bd54aab2f80eab700e83d6439a26d9b", "doxygen/structstdgpu_1_1is__execution__policy", "doxygen/structstdgpu_1_1logical__and", "doxygen/structstdgpu_1_1logical__and-members", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4-members", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4_a0af656582bc5e7afafb51525bc1a96d7", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4_af166b964c52cc0dab13d0530c10babd7", "doxygen/structstdgpu_1_1logical__and_af9f8980486d51c7df5e216a13dc6d111", "doxygen/structstdgpu_1_1numeric__limits", "doxygen/structstdgpu_1_1numeric__limits-members", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a09380e56b08ef50e2c2590a696246c69", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a36619348a8467661374ab4f69491de80", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a51ba2e1639a88bb0be9c53ffc925498f", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_ab6545d015b78c5f644a25a911fc88b34", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_acf4b801d38e1b80614746a26ce61ca9b", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_adc231e5ff9d1565d561e5258474576bd", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a0fd9a981a6fab72c8f63768bfb1783e1", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a46d4e169e728f60624a595b74a1957b3", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a8d96bb39afff13b051aeebcddecc782f", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a9d270414268fda1c40b6b547d627fe93", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_aa0c050fddd47d55f6cadd441dfacb720", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_abef590477a8f872cd33f23fb62f24456", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a013af173e32ba48173d4b33f32d9d84f", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a50a8d4155e31e14472d1de315f68ec1a", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a694b0d6d7309e79f68e59af554222b10", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a6b1037d4d3c592173ef32e33e3e6c112", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_ae29d52d9cd366a1b159673d5b100ca3d", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_ae481c5a27b33557c113c285fc9f86e86", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a1edad21332d7b08860f33e7ef1f8c7ae", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a31211d70e8ef8aecc74898b48f15c06e", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a43f68153a54d82d08bfcd957bc5e8325", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a4c8a8b0c2af73273b5a8c90069b644bc", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a8abb6a87b55f59b5b860ea9bd3e5ad82", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_ac05b4f436bab0e415cd4076ad672d134", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_ad8fbd50bb23c59a56dbe93354a012452", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a360b6efbda8ff0f0774904ef107dfcf1", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a467ee7782b4a46cac26b5d5fc9eb5f42", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a4db808a78320b71cefbeac1783dfc8cd", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a616cba7730481f6d6504d971e6b7fd24", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_ab51232441a678e82c6d6225eb1270715", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_ac1ab00e75cb3c847a003087ee7030c3b", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a2f96aa117a6aad2e56aaaf84e3cd4ee6", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a7449f5b9eaced1a472a0ec3446a735f6", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a7ad413979658fa3b2c6b16f93eb264a1", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a9e0b6932af3ebb64acb82ac9e10a5d5e", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_ac6f12d6e4d26275f85f7a82841d6f5ce", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_ae250eb098d756b46533c0a1625dac852", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a2246b6a4b92db3cd05ab005af090ad37", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a343e829256736707a3cbcc04db7c370e", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a77dbda27758147112268c2c1dd9fcc89", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a916f280742ed08e15616204b86ad4994", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_aa929e5eba58ec880bc370446bc9eff95", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_aaabfddee05d45d48942914fa5bb834a3", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a2aec4efce2d7ec90ee4147c74aea10b2", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a60ab11866707b3768cb8f378250a64b1", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a847a78ef175ecdf7b094bb3fa59f2fc0", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_aaf5df5741832904d7bf2981f1c342e37", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_acf3bf7b7bbdf535c50b47fe0c57eece0", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_ad08443938b4ad2767ede8536ade5273f", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a1d5563cdb67282be70197dbd79a49aea", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a20b05e9e683dc4296111a8d76e0b149f", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a7190af147ace2fc42b6e8ba6bfe4c489", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a87a5381e84b81f45ce67278355c74995", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_ab742b154e9b7a0ce07301ebc187256fd", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_ad3a5012c002330126b028cdbb45f1c74", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a4e0cc8cca5136a0ebc3521054b507156", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a5e0391f303cdfb2b47331584603f02f6", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a9689c732ad17f0fc727a5a130e952d2a", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a9f3c8f101ccc0f7f8a7c5590eba295a2", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_ad56d5437960fc5f3f7e14c073749fa5c", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_af484c233289b66c7342a6e89d91cde58", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a4c2f296c2733f961bb276dab8aa55b95", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a657c022a403afc5091d718ded5627133", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a753bf658f46d10d12495b23f3ba7eb69", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_aa693b2d767164f2b0d93d9a891f2ecc5", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_ac54dc5bc4411ab3cdaaa44b0318333fc", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_acdcb61f558f27cc398bc731bf34bffb7", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a3374c0ebee86b3bdf859b3588131e848", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a47615a1d76fbebada68d9345e6e72887", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a87bdfd8eae35551843ad3a04aa849e0d", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_aaf979cf056e5786f60cc4eebd5998597", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_acca6103a03f8669254ae9d14f39a5b26", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_ae2d90ecc2584739ee6401178cf71eb3c", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a0402f3c124e6aba50f3162b60d209499", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a1390e2fa1018f689799e528f05fac70a", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a22c108d83454e667b216f4c818f65288", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a301fca0117b88dfefbd38f4878406ccb", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a85d6ab76ece426ee2f6dee3fcc400ac4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_ae0d48364acbafde3c4809e1407943f6f", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a4cf64631f587a9362e93b40a8509b368", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a5be89ce9880a7ab4e9d00efc96253602", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a7b79f429646450060c13da1c6fe2daec", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a7e9eef94dff7dfdac01914d8580eb7c9", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_aba043610d7ead3c0fbdfea437feecaa7", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_af150adccef2c23a0df83925a8ca0d89d", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_a4649f2553a2125bd66f495d41a7e7c78", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_a878fd8c6723f78c553f3aab709728445", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_aa627f27a7c92b3466ac33b0850f33ee9", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_aa9001505f11460ac50e0f190c341a36a", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_acb6fa7c1758a3b9c910ce98a04261263", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_af47e7a062456d67aae6c5636cda0acad", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_a2b46fe78bc4f40c86e5491d8dc1b5562", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_a33292c8a0a0787f74be0471840a3b840", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_aa8a7e3c0c569c1de3ae1070dab761817", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_aa8dd7a7c403b7d7405726b2b9268e24b", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_acc8f0d35c0249c901403ae7131796615", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_ae370b9dbccdd4e6a35c95309c34feff5", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a114db78f37a1b2328c16e5f234a81975", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a561c3d3a6e947197bf2257be8b43ed64", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a5ecb54668f5e381d6a7ce2049a057d75", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_ac6fd0dac9b9895a445b1f7b77860f935", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_acafe976407c7c2043f757f0fec535a53", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_afb5449ab8ac2b49b885db0d3f580be00", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4-members", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a070d01c6973e0b7b9990b9ebe02ee2e0", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a1a10298674897060829c4d479a7df1b6", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a1f4d1abfa8de9337e0a0c824cc8fccec", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a216edbffc35b44efd7b35375192a0e7a", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a8bd5cf812c19492d6d6acda5dd0f84d7", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_aa1ee59c2a50eec5fde0480726decc32c", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_aa6b51dad7180129b16d52f7faf987f53", "doxygen/structstdgpu_1_1numeric__limits_a216db0b86d6dc7dc24ed04ed3530e6df", "doxygen/structstdgpu_1_1numeric__limits_a42f33265a056ad338f28171d3c2dda15", "doxygen/structstdgpu_1_1numeric__limits_a4403e73004cd5ffa1bc6488d291323e4", "doxygen/structstdgpu_1_1numeric__limits_a624c74025640eed3ec34158fa5e74fa0", "doxygen/structstdgpu_1_1numeric__limits_a89df0f66bd02044da39200b479598cae", "doxygen/structstdgpu_1_1numeric__limits_ad172f19d0757f875d5b7524e572ca8a7", "doxygen/structstdgpu_1_1plus", "doxygen/structstdgpu_1_1plus-members", "doxygen/structstdgpu_1_1plus_3_01void_01_4", "doxygen/structstdgpu_1_1plus_3_01void_01_4-members", "doxygen/structstdgpu_1_1plus_3_01void_01_4_a58195c2648bd0dbe76fcd535ae2564ce", "doxygen/structstdgpu_1_1plus_3_01void_01_4_a8b58fbb918c9bf2627c86bca89c102da", "doxygen/structstdgpu_1_1plus_a21706fdd40e79f66d69f5522dc22d71b", "doxygen/structstdgpu_1_1remove__cvref", "doxygen/structstdgpu_1_1remove__cvref-members", "doxygen/structstdgpu_1_1remove__cvref_a5698c63d68e4e6dff8c1cd954ebc6b08", "doxygen/structstdgpu_1_1safe__device__allocator", "doxygen/structstdgpu_1_1safe__device__allocator-members", "doxygen/structstdgpu_1_1safe__device__allocator_a2a1ca57598bd842851fae6f015592ae0", "doxygen/structstdgpu_1_1safe__device__allocator_a54ae733bfe3532fec4fa701bac938870", "doxygen/structstdgpu_1_1safe__device__allocator_aaa6f89abadf19b754f46c81860913c08", "doxygen/structstdgpu_1_1safe__device__allocator_aab6d0ec283f13752120e788acc56c548", "doxygen/structstdgpu_1_1safe__device__allocator_ab222fe7c94ccbffa88ad59b00d4b5576", "doxygen/structstdgpu_1_1safe__device__allocator_afe1f9b9a437300cbfb92e1aea9774660", "doxygen/structstdgpu_1_1safe__host__allocator", "doxygen/structstdgpu_1_1safe__host__allocator-members", "doxygen/structstdgpu_1_1safe__host__allocator_a20315930abff726e3ee14ee91764ebe0", "doxygen/structstdgpu_1_1safe__host__allocator_a2b9aabf343e99f77248e1c86c5758f24", "doxygen/structstdgpu_1_1safe__host__allocator_a4184877a24c9dfd9deba6d39d5e01f88", "doxygen/structstdgpu_1_1safe__host__allocator_a88a97c611894815da9f0ef8116b2c2e6", "doxygen/structstdgpu_1_1safe__host__allocator_a8c391ba393b1ebe92c933a7a2162f331", "doxygen/structstdgpu_1_1safe__host__allocator_afa44729c5180f1f0408c949376a4dd58", "doxygen/structstdgpu_1_1safe__managed__allocator", "doxygen/structstdgpu_1_1safe__managed__allocator-members", "doxygen/structstdgpu_1_1safe__managed__allocator_a131af18e50b3fd57e60591d841745ff2", "doxygen/structstdgpu_1_1safe__managed__allocator_a589d2d9d790df81871eafdb8d924d0c3", "doxygen/structstdgpu_1_1safe__managed__allocator_a5989d5cfe25534b48fbf473654fe8b85", "doxygen/structstdgpu_1_1safe__managed__allocator_a99b6f91aeb1427fb9e36647ec91117f8", "doxygen/structstdgpu_1_1safe__managed__allocator_aa7733d7b5e38ca4d1f4013ca846d92b9", "doxygen/structstdgpu_1_1safe__managed__allocator_afbb5782b2a7b4a06a2aea3329ab40306", "doxygen/type__traits_8h", "doxygen/type__traits_8h_source", "doxygen/unordered__map_8cuh", "doxygen/unordered__set_8cuh", "doxygen/utility_8h", "doxygen/utility_8h_source", "doxygen/vector_8cuh", "index"], "filenames": ["api/chapters.md", "api/iterator.md", "api/memory.md", "api/object.md", "doxygen/algorithm_8h.rst", "doxygen/algorithm_8h_source.rst", "doxygen/annotated.rst", "doxygen/atomic_8cuh.rst", "doxygen/atomic_8cuh_a1a61934ee764723ac42dfe2c18274ed0.rst", "doxygen/atomic_8cuh_a804e08a947a006ccc3c8f6bc64111bb9.rst", "doxygen/atomic_8cuh_ada734bc4cfc80a1e18b9833a40cdbe58.rst", "doxygen/bit_8h.rst", "doxygen/bit_8h_source.rst", "doxygen/bitset_8cuh.rst", "doxygen/bitset_8cuh_acbea2027703043b7b2077d2c6f4f237b.rst", "doxygen/classstdgpu_1_1atomic.rst", "doxygen/classstdgpu_1_1atomic-members.rst", "doxygen/classstdgpu_1_1atomic__ref.rst", "doxygen/classstdgpu_1_1atomic__ref-members.rst", "doxygen/classstdgpu_1_1atomic__ref_a013ae79915b506255431507bababa3cd.rst", "doxygen/classstdgpu_1_1atomic__ref_a12e072d50745047fbd2229719db863af.rst", "doxygen/classstdgpu_1_1atomic__ref_a183e5d75ca3cd150c3232032f362a8b3.rst", "doxygen/classstdgpu_1_1atomic__ref_a1c8b347f4f1a36fae96f43269bb832a7.rst", "doxygen/classstdgpu_1_1atomic__ref_a1f14783e183a128e583cafc27370c4f4.rst", "doxygen/classstdgpu_1_1atomic__ref_a2007f0264451c2ddab53c574761a62b9.rst", "doxygen/classstdgpu_1_1atomic__ref_a23aa2475f6fe0c54a10aed72e09f07ee.rst", "doxygen/classstdgpu_1_1atomic__ref_a255267d9f51e15b076f6fc0bc976c399.rst", "doxygen/classstdgpu_1_1atomic__ref_a2f36f84dd4e0181bccd06388f02d9d33.rst", "doxygen/classstdgpu_1_1atomic__ref_a41ac61c3a3e620087c2fd3908c7c5301.rst", "doxygen/classstdgpu_1_1atomic__ref_a4bbd964dd9df7052a4e4f4f48cd56c14.rst", "doxygen/classstdgpu_1_1atomic__ref_a70ca69a125d4cb725b0e3b273c9eaf42.rst", "doxygen/classstdgpu_1_1atomic__ref_aae1a873893f1c62cfc8cfc63263904e2.rst", "doxygen/classstdgpu_1_1atomic__ref_ab665e9ce4128bcac27307dff28d76a51.rst", "doxygen/classstdgpu_1_1atomic__ref_ab83f156fb7d67edcd8478ce905d9ca06.rst", "doxygen/classstdgpu_1_1atomic__ref_ab930c352326bbcaa3c23d115b30f1ce0.rst", "doxygen/classstdgpu_1_1atomic__ref_ab9f1b8676ec80c814c7446ecca07bed8.rst", "doxygen/classstdgpu_1_1atomic__ref_aca7debde67a21a09d09b50947d37e03a.rst", "doxygen/classstdgpu_1_1atomic__ref_aded433d979c1aa0c1eab6a11889a8318.rst", "doxygen/classstdgpu_1_1atomic__ref_ae84bf48c31a4a5b93089e523aca7f923.rst", "doxygen/classstdgpu_1_1atomic__ref_ae9d2400257e028d3b914dab0352a0e51.rst", "doxygen/classstdgpu_1_1atomic__ref_aed6438a7a6a8f04f66761342577781cc.rst", "doxygen/classstdgpu_1_1atomic__ref_aeeb5615a15bf86ed8a4f19388c16892e.rst", "doxygen/classstdgpu_1_1atomic__ref_af284445fe0d57e8a92bd5922a53fe552.rst", "doxygen/classstdgpu_1_1atomic__ref_af2882b31d1b73903ba67cec71bf42c2f.rst", "doxygen/classstdgpu_1_1atomic__ref_af4595497f7135e14b44cd9ee8d0c037c.rst", "doxygen/classstdgpu_1_1atomic__ref_af4b9364942e81ed0032b6143d65ac81f.rst", "doxygen/classstdgpu_1_1atomic__ref_afbed13b370e4374a90530e49aa6b4308.rst", "doxygen/classstdgpu_1_1atomic__ref_afcd0d6e08b978bb249d2159152f1b22e.rst", "doxygen/classstdgpu_1_1atomic_a00668baff37b998e62b2bd384e33dea8.rst", "doxygen/classstdgpu_1_1atomic_a0b9333d72f540f6b9f98a25c94ed9381.rst", "doxygen/classstdgpu_1_1atomic_a200b49435f5f6e15a934023b7fa76581.rst", "doxygen/classstdgpu_1_1atomic_a21180f21849c96c8f6e5f0f1b59e21dc.rst", "doxygen/classstdgpu_1_1atomic_a266ebe8c29371bece674efa2412bb23e.rst", "doxygen/classstdgpu_1_1atomic_a2bed7c660b44c17221efe6b323f20672.rst", "doxygen/classstdgpu_1_1atomic_a3161f84b3601541e6b4505cf1bfa3d1b.rst", "doxygen/classstdgpu_1_1atomic_a34d6ac956b6d5f275f95bfd4f92d17b2.rst", "doxygen/classstdgpu_1_1atomic_a3c7a12b09b7db78c484625f1795b5069.rst", "doxygen/classstdgpu_1_1atomic_a49b277ce2746484c6eaa35929f759136.rst", "doxygen/classstdgpu_1_1atomic_a50e8eed503bee8c91a4fbae2c716967d.rst", "doxygen/classstdgpu_1_1atomic_a5aeac3f40d0190419cc30115ad9f99aa.rst", "doxygen/classstdgpu_1_1atomic_a5cadc08a518fe5b7e340ab7ae9a42d9a.rst", "doxygen/classstdgpu_1_1atomic_a5e0170d045bb9ece2627b8d675fc59bc.rst", "doxygen/classstdgpu_1_1atomic_a5e55af586391684377da25d3975a27c7.rst", "doxygen/classstdgpu_1_1atomic_a6408c54e749cce606ce0e15feb1166fa.rst", "doxygen/classstdgpu_1_1atomic_a666cf3df42b0fd2082a089be892cc705.rst", "doxygen/classstdgpu_1_1atomic_a678c22a9377ff61e7e4daebfdd9f0fef.rst", "doxygen/classstdgpu_1_1atomic_a6a6f73f4dc5d441f28ee7c2b14ba82d4.rst", "doxygen/classstdgpu_1_1atomic_a80dd48aa209db11e3dce991ef47194d5.rst", "doxygen/classstdgpu_1_1atomic_a98e6f71e5bfcb556126deee8630a8de0.rst", "doxygen/classstdgpu_1_1atomic_a9d9c3f7ca4439896a53969996c2ba436.rst", "doxygen/classstdgpu_1_1atomic_aa4a4ffc5612cce8d1928bff7295aa797.rst", "doxygen/classstdgpu_1_1atomic_aa4bcb94229bd2e2d816477fefbe16307.rst", "doxygen/classstdgpu_1_1atomic_aa8a11eb19232aeb240421846554d3d72.rst", "doxygen/classstdgpu_1_1atomic_ab02c5e6cc6bfcdaa04ee277c5c917085.rst", "doxygen/classstdgpu_1_1atomic_ab630fd1e19120d045748689dcd19007a.rst", "doxygen/classstdgpu_1_1atomic_aba7141e6ca30e3b7b78cb84e16efc28e.rst", "doxygen/classstdgpu_1_1atomic_abd259004c11d1b89ccaaa2579d74713f.rst", "doxygen/classstdgpu_1_1atomic_ac60ddbdfd2605e07f506279ebb0f71d5.rst", "doxygen/classstdgpu_1_1atomic_acc545ef68bce993f52813b61906bd0ec.rst", "doxygen/classstdgpu_1_1atomic_af24376f4ba658b304e86cc47d233ae82.rst", "doxygen/classstdgpu_1_1atomic_afb0634e91d0496436a7156fae1fbc5a1.rst", "doxygen/classstdgpu_1_1atomic_aff85c71f1336a207abcac9380a846dfc.rst", "doxygen/classstdgpu_1_1back__insert__iterator.rst", "doxygen/classstdgpu_1_1back__insert__iterator-members.rst", "doxygen/classstdgpu_1_1back__insert__iterator_a17173550cb08d0b4a8f60ba2a0d2fd5b.rst", "doxygen/classstdgpu_1_1back__insert__iterator_aafa5ccf03eb4c12c52cd314fbdba00af.rst", "doxygen/classstdgpu_1_1bitset.rst", "doxygen/classstdgpu_1_1bitset-members.rst", "doxygen/classstdgpu_1_1bitset_1_1reference.rst", "doxygen/classstdgpu_1_1bitset_1_1reference-members.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_a3a620394297d41dd0d721d082f9afa2d.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_a7ad574b6353727c3c20fbcd4a53f5a84.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_aad87f675d008043913d46e6f9f3cbac6.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_aae070d69a346ba79ae9bca499aa6854c.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_acb1388e18bb864d923e3bea3a5a312c1.rst", "doxygen/classstdgpu_1_1bitset_1_1reference_add18f9d94ce5389ac15a9422a8cc4c40.rst", "doxygen/classstdgpu_1_1bitset_a068a11229ba02e5cda857479074fd0ed.rst", "doxygen/classstdgpu_1_1bitset_a0ef8b2dbd573eebdb7d9b7a085d4b9fd.rst", "doxygen/classstdgpu_1_1bitset_a18c2efaea6aca9142918aa5cffacbc3e.rst", "doxygen/classstdgpu_1_1bitset_a28f96fee63f0255961411a7949172923.rst", "doxygen/classstdgpu_1_1bitset_a2972c5c63de595c9a990a7771946e557.rst", "doxygen/classstdgpu_1_1bitset_a30de395c2e13104740290cfc7e36e97a.rst", "doxygen/classstdgpu_1_1bitset_a3a3adefd74ee66f2e9cd5797ff06c277.rst", "doxygen/classstdgpu_1_1bitset_a45c4a0cab8e2663e0f829b0526fa3eba.rst", "doxygen/classstdgpu_1_1bitset_a4c0451598573b7e5e4528c2b641abb23.rst", "doxygen/classstdgpu_1_1bitset_a50084dcdc4069f5c0ddd09967c6206cb.rst", "doxygen/classstdgpu_1_1bitset_a55c97bdc35007c9037de0b3967ed8f6f.rst", "doxygen/classstdgpu_1_1bitset_a668f93ab77a2fb39a2a2874b166e98d2.rst", "doxygen/classstdgpu_1_1bitset_a672e38f11bc1d0d98d43adab14cdd573.rst", "doxygen/classstdgpu_1_1bitset_a74991d2f8e0b32dd82bed9b8a9c2bcc1.rst", "doxygen/classstdgpu_1_1bitset_a84c0a2dee20eeb155ecdc0563bce5332.rst", "doxygen/classstdgpu_1_1bitset_a8693b10bac83bf4e0393dc5857d7c4fc.rst", "doxygen/classstdgpu_1_1bitset_a8a6b3d73ad1efca8f19296745901f82d.rst", "doxygen/classstdgpu_1_1bitset_a9dd70c24ba4387bf7e7f916f2dd771bb.rst", "doxygen/classstdgpu_1_1bitset_aa490cbeca76ebc5410be4b9dab9c5dc4.rst", "doxygen/classstdgpu_1_1bitset_ab34a98927f4e9a8b5eec467630ec206c.rst", "doxygen/classstdgpu_1_1bitset_ab5ca676a9e4cc147523fef907321c31f.rst", "doxygen/classstdgpu_1_1bitset_ac096f6f39f5e86cb7adeb409da319160.rst", "doxygen/classstdgpu_1_1bitset_ac71958207e0610e13bc4237ca772af0e.rst", "doxygen/classstdgpu_1_1bitset_acfec77b43179226d09e3aa5d030d5c9b.rst", "doxygen/classstdgpu_1_1bitset_ad31f35b84a73fe5842a31c28f956dbaa.rst", "doxygen/classstdgpu_1_1bitset_ad5043ebbb696f7c41f958551efc7e1cc.rst", "doxygen/classstdgpu_1_1bitset_ae51b61c3ae384cf81caa5602f2de93b1.rst", "doxygen/classstdgpu_1_1bitset_af07b666a8150c74e2e06ab0831f72170.rst", "doxygen/classstdgpu_1_1deque.rst", "doxygen/classstdgpu_1_1deque-members.rst", "doxygen/classstdgpu_1_1deque_a037466779c170f693ef9b62cc2e8a7be.rst", "doxygen/classstdgpu_1_1deque_a05b9f81169419589f9a3a31de25c0feb.rst", "doxygen/classstdgpu_1_1deque_a0bb087f112c1d08ae40577413177bc7a.rst", "doxygen/classstdgpu_1_1deque_a111cb0ac0f7d373aed0674077c98e8e7.rst", "doxygen/classstdgpu_1_1deque_a12096ec3cd46d07a9f4078bb40ee52a9.rst", "doxygen/classstdgpu_1_1deque_a26ed0fbac41051e487a12d2d95d6c757.rst", "doxygen/classstdgpu_1_1deque_a2c3f063892cb945bd8af0ce18eab68d0.rst", "doxygen/classstdgpu_1_1deque_a3075ff9933ab70ca293cc0108b44a09e.rst", "doxygen/classstdgpu_1_1deque_a383e5ceeaa1aaf174762a1021d9db4a1.rst", "doxygen/classstdgpu_1_1deque_a3d14fbdf4a01eaddd0fadb02edc5b1fa.rst", "doxygen/classstdgpu_1_1deque_a47f5db081d729ca509b91721f86d3b53.rst", "doxygen/classstdgpu_1_1deque_a502c1b14f322f6328e84c0ac71786870.rst", "doxygen/classstdgpu_1_1deque_a58eeaaa88a44d90e625c795ad39cce3a.rst", "doxygen/classstdgpu_1_1deque_a5d1a00c8241bf05b94249596a5398489.rst", "doxygen/classstdgpu_1_1deque_a5faf58e832a3a9cf2ca7af4169f2befd.rst", "doxygen/classstdgpu_1_1deque_a615a923f59738ab9fbd0edd6f4107126.rst", "doxygen/classstdgpu_1_1deque_a6efa64a8f3d321fcb42bcc24eee7842b.rst", "doxygen/classstdgpu_1_1deque_a6fbde70d89dbac09e6042bb9a3461d7f.rst", "doxygen/classstdgpu_1_1deque_a733ae315ab8ce1db20c945e74e0c27fe.rst", "doxygen/classstdgpu_1_1deque_a75a61b09e8bd289324c68f2218f691d0.rst", "doxygen/classstdgpu_1_1deque_a7848c9a68eccfbedbc5008efd54d1614.rst", "doxygen/classstdgpu_1_1deque_a7c4f8c13257ed26e2104ac0703d58e7f.rst", "doxygen/classstdgpu_1_1deque_a80b588cf9d5122b9cc0d8b9f342ba318.rst", "doxygen/classstdgpu_1_1deque_aaa9f90ee0f01aa1076a5ab07795110bb.rst", "doxygen/classstdgpu_1_1deque_aad633ae2f944118063b63cbbb216606c.rst", "doxygen/classstdgpu_1_1deque_ab23ea24594fb4ceb1b477014c5e40ff6.rst", "doxygen/classstdgpu_1_1deque_ab288a098eb638a6bb03ed6cc8bd37127.rst", "doxygen/classstdgpu_1_1deque_ab5230bdd89af77a26d9729eaa3a5608e.rst", "doxygen/classstdgpu_1_1deque_ab6e9630b4f2674472d5ac785c3220ca4.rst", "doxygen/classstdgpu_1_1deque_ac46ce31aade3688766341bcc6ce7d8c6.rst", "doxygen/classstdgpu_1_1deque_ac66084f7c32b6d7ede2f90d011a4dd3f.rst", "doxygen/classstdgpu_1_1deque_ac7cb13207bdf433adb958db3a108bb7b.rst", "doxygen/classstdgpu_1_1deque_ace0cdd73f6bd1083946126063b4fc9b5.rst", "doxygen/classstdgpu_1_1deque_ad0094ee24c8110ffd1ea24adeb6ef029.rst", "doxygen/classstdgpu_1_1deque_adb0e5d26ecdd1616a49329640644ee31.rst", "doxygen/classstdgpu_1_1deque_ae0082ed954fd673a5a738fdd343ba654.rst", "doxygen/classstdgpu_1_1deque_aec15240536b55698ef1a5475137f36c7.rst", "doxygen/classstdgpu_1_1deque_aec64c86c12edd9249c752b87344ea8e2.rst", "doxygen/classstdgpu_1_1deque_aecc83da88bae14801815309da0aaf4b8.rst", "doxygen/classstdgpu_1_1deque_af46a731d261c63f9c41932d3c27a7c31.rst", "doxygen/classstdgpu_1_1deque_af60cd499871852ab9fb66be934ebf03e.rst", "doxygen/classstdgpu_1_1deque_afd7d1c0b139f443d4f89a54b57373d57.rst", "doxygen/classstdgpu_1_1device__range.rst", "doxygen/classstdgpu_1_1device__range-members.rst", "doxygen/classstdgpu_1_1device__range_a00d2198dbb3ebbf26d507c651de3ff1c.rst", "doxygen/classstdgpu_1_1device__range_a0f31185999a682850571a6db76535ad5.rst", "doxygen/classstdgpu_1_1device__range_a18813374137d90ed1957859495f1ce86.rst", "doxygen/classstdgpu_1_1device__range_a212cb29b29a9e52fdc8cfa8e3c80705b.rst", "doxygen/classstdgpu_1_1device__range_a349660e1bd528b56973ddf0c6954083c.rst", "doxygen/classstdgpu_1_1device__range_a3a242586f6b016bdd2e24572caf64c6a.rst", "doxygen/classstdgpu_1_1device__range_a6842509f472ed1c4269dd229192d5af0.rst", "doxygen/classstdgpu_1_1device__range_a968d0567ec5cd51d10b39ca43f263de7.rst", "doxygen/classstdgpu_1_1device__range_aa1e7719bc211428d71f475564d05715f.rst", "doxygen/classstdgpu_1_1device__range_aac327ef6580b38b4f6c29465542e65b0.rst", "doxygen/classstdgpu_1_1device__range_ab0be0f447eac673f403340ec0ebbd517.rst", "doxygen/classstdgpu_1_1device__range_adebbc838a080b3978be2e1ba484f7ab5.rst", "doxygen/classstdgpu_1_1device__unique__object.rst", "doxygen/classstdgpu_1_1device__unique__object-members.rst", "doxygen/classstdgpu_1_1device__unique__object_a159cf254ab754a23aa316c313e94872d.rst", "doxygen/classstdgpu_1_1device__unique__object_a2037ded3d277d9b6d7ea7444e35f2505.rst", "doxygen/classstdgpu_1_1device__unique__object_a6d3c3ab9a1cb44267dc2b427c54905d6.rst", "doxygen/classstdgpu_1_1device__unique__object_a8edc637b0d23077f71bd3f296976274e.rst", "doxygen/classstdgpu_1_1device__unique__object_af0a6358b6be7c1558ba352296628ec87.rst", "doxygen/classstdgpu_1_1device__unique__object_afcf81ef94b4b76558ba2bf10114c32a1.rst", "doxygen/classstdgpu_1_1front__insert__iterator.rst", "doxygen/classstdgpu_1_1front__insert__iterator-members.rst", "doxygen/classstdgpu_1_1front__insert__iterator_a031768674ceaeb44023f592acbed17bb.rst", "doxygen/classstdgpu_1_1front__insert__iterator_a5d3a17ec4162f2d11443fc3e38f586e5.rst", "doxygen/classstdgpu_1_1host__range.rst", "doxygen/classstdgpu_1_1host__range-members.rst", "doxygen/classstdgpu_1_1host__range_a2977588ec637a869ca7e876697342f59.rst", "doxygen/classstdgpu_1_1host__range_a2ada7d63b1c4791c1ad01e64d87de338.rst", "doxygen/classstdgpu_1_1host__range_a3fdec5a56aa00a451357790708eea6a7.rst", "doxygen/classstdgpu_1_1host__range_a507fbe895180085dbb06165d2e23925d.rst", "doxygen/classstdgpu_1_1host__range_a5f8767ed95ce8f9060ee160f4bc8b9c8.rst", "doxygen/classstdgpu_1_1host__range_a69be7ac9fe732d9c76aad86cfae1f0f7.rst", "doxygen/classstdgpu_1_1host__range_a6c1c6258cfe7e927030e8ee3892b421f.rst", "doxygen/classstdgpu_1_1host__range_a7ee0cd04643a5e61376df3fd2d965e09.rst", "doxygen/classstdgpu_1_1host__range_a8e902cd6d7bca71967bf670924058c09.rst", "doxygen/classstdgpu_1_1host__range_aa5b8b0e677f9d3b2299e62893972e3c1.rst", "doxygen/classstdgpu_1_1host__range_aa75e29613811ff39feeaf8e5051222e5.rst", "doxygen/classstdgpu_1_1host__range_aad2100437a6893704b8971c762d315c5.rst", "doxygen/classstdgpu_1_1insert__iterator.rst", "doxygen/classstdgpu_1_1insert__iterator-members.rst", "doxygen/classstdgpu_1_1insert__iterator_a97b89f12d33aae6a8d75bb9fc7f6d153.rst", "doxygen/classstdgpu_1_1insert__iterator_af9924ebdda7edab2b6847fafe28ccb50.rst", "doxygen/classstdgpu_1_1mutex__array.rst", "doxygen/classstdgpu_1_1mutex__array-members.rst", "doxygen/classstdgpu_1_1mutex__array_1_1reference.rst", "doxygen/classstdgpu_1_1mutex__array_1_1reference-members.rst", "doxygen/classstdgpu_1_1mutex__array_1_1reference_a7666d3ae3df484b2065b4845ba42cd22.rst", "doxygen/classstdgpu_1_1mutex__array_1_1reference_a8e044386e1581260b13c6ca534cb3540.rst", "doxygen/classstdgpu_1_1mutex__array_a1c995793a4ff1df0a1fbdece1c48804b.rst", "doxygen/classstdgpu_1_1mutex__array_a225cce28d08119b11019a8d8b720facf.rst", "doxygen/classstdgpu_1_1mutex__array_a399ad68ea62e69e891208d4b98b245d1.rst", "doxygen/classstdgpu_1_1mutex__array_a3b385f4df5645cfdc2104464f665042c.rst", "doxygen/classstdgpu_1_1mutex__array_a403a9d26451a83f74b8beda06dea5d60.rst", "doxygen/classstdgpu_1_1mutex__array_a44c6d42f117e25d1ada6563adaa05981.rst", "doxygen/classstdgpu_1_1mutex__array_a5ea44823ec86bb7a49bff6223cd8b336.rst", "doxygen/classstdgpu_1_1mutex__array_a65994416407b6b951c61455128168bc1.rst", "doxygen/classstdgpu_1_1mutex__array_a6f159d5b8fdac8c829d2b4b36c37a8f2.rst", "doxygen/classstdgpu_1_1mutex__array_abf78ae0fcd4b64353d4582eb13455174.rst", "doxygen/classstdgpu_1_1mutex__array_ad4d0473167007fb69c5678899d199988.rst", "doxygen/classstdgpu_1_1mutex__array_ae9a6ab5edade6c6e4b27b9f26f8b2eec.rst", "doxygen/classstdgpu_1_1queue.rst", "doxygen/classstdgpu_1_1queue-members.rst", "doxygen/classstdgpu_1_1queue_a0fccffb67ae6c43a2cc5e04d938ce9ff.rst", "doxygen/classstdgpu_1_1queue_a193197a33c08bd98660f21ef90b952c5.rst", "doxygen/classstdgpu_1_1queue_a35b70630eb5250f3539e948a98a920da.rst", "doxygen/classstdgpu_1_1queue_a4dde90d167664043b24f36181386659c.rst", "doxygen/classstdgpu_1_1queue_a4fb71b8f76b01e76b5cff637c0d4db5b.rst", "doxygen/classstdgpu_1_1queue_a4fcd110bc756255dcf3f45d400226a41.rst", "doxygen/classstdgpu_1_1queue_a556d6fbd03e384e9a7adf4ef9bf77a42.rst", "doxygen/classstdgpu_1_1queue_a67d47a805536f12dd545a945ce474521.rst", "doxygen/classstdgpu_1_1queue_a7cd4123272b38a24912d7a7936372389.rst", "doxygen/classstdgpu_1_1queue_a9160dd61252020f3f6ea4a508b79f049.rst", "doxygen/classstdgpu_1_1queue_a92a990c87a7c30308b86095054917746.rst", "doxygen/classstdgpu_1_1queue_add18587162e5ccfb34df2ec0fd0048f6.rst", "doxygen/classstdgpu_1_1queue_ae49f3f8f38f9213984f0475f61fd0582.rst", "doxygen/classstdgpu_1_1queue_af1c87c19e135b9b694136b64c33953ca.rst", "doxygen/classstdgpu_1_1stack.rst", "doxygen/classstdgpu_1_1stack-members.rst", "doxygen/classstdgpu_1_1stack_a0d23124fd2f20a1d7a5462e90daee922.rst", "doxygen/classstdgpu_1_1stack_a309d812f0099397e9433e720676156b3.rst", "doxygen/classstdgpu_1_1stack_a41333f67d105a3df1553c4f28f9acaad.rst", "doxygen/classstdgpu_1_1stack_a4e7de84aba7e3a6618aaff3506d1f1ee.rst", "doxygen/classstdgpu_1_1stack_a534cbdb1517e65f1cda6f17c476b1faf.rst", "doxygen/classstdgpu_1_1stack_a55207e62ef6e199d5ff6ab7fdf4df599.rst", "doxygen/classstdgpu_1_1stack_a5f2cf847dddb953f4c8c48cbf68e229e.rst", "doxygen/classstdgpu_1_1stack_a634495ac058c3ebae9b917b49f42af93.rst", "doxygen/classstdgpu_1_1stack_a74ac8c3ee6694946e263d42afd159a10.rst", "doxygen/classstdgpu_1_1stack_a7aeaa470fd4b4691ab3c2daa21d39909.rst", "doxygen/classstdgpu_1_1stack_a95492c30a94aa9948a28688a327e31a3.rst", "doxygen/classstdgpu_1_1stack_aa258ba7fc58319541e4253bc5e0b0a0b.rst", "doxygen/classstdgpu_1_1stack_ab7d9d1c94347427a027c7f5ce8f70cb8.rst", "doxygen/classstdgpu_1_1stack_ad2c0cfd49c1ea2381a78f67851785487.rst", "doxygen/classstdgpu_1_1transform__range.rst", "doxygen/classstdgpu_1_1transform__range-members.rst", "doxygen/classstdgpu_1_1transform__range_a0de4cacc478fc9dd8b4af8fa19cb7ffc.rst", "doxygen/classstdgpu_1_1transform__range_a2244f2594215423b18d246095b8aff47.rst", "doxygen/classstdgpu_1_1transform__range_a4fc8b0a3ada7d82623ca4445a4ca4519.rst", "doxygen/classstdgpu_1_1transform__range_a5941486c1e235ef7273cce0d14592a80.rst", "doxygen/classstdgpu_1_1transform__range_a8159664f1016fc044eebdab20637f078.rst", "doxygen/classstdgpu_1_1transform__range_a8497ce76b7058fb10ea528937ab9fd75.rst", "doxygen/classstdgpu_1_1transform__range_a8d4f062edab90d2b6ba3c4d34049e216.rst", "doxygen/classstdgpu_1_1transform__range_a97758caf5d606594c5a41ee92897a115.rst", "doxygen/classstdgpu_1_1transform__range_aa1eb5d0fd0908a9a03553b2b3d864d98.rst", "doxygen/classstdgpu_1_1transform__range_abc6aa736c09cb3b01922c56b6fa8cbdb.rst", "doxygen/classstdgpu_1_1unordered__map.rst", "doxygen/classstdgpu_1_1unordered__map-members.rst", "doxygen/classstdgpu_1_1unordered__map_a0b91355acea6be87945ba4b99c50c032.rst", "doxygen/classstdgpu_1_1unordered__map_a10f9997da89002aaef5b05065ba89986.rst", "doxygen/classstdgpu_1_1unordered__map_a13fc798e0bb13e09cf107f4cc89a77dd.rst", "doxygen/classstdgpu_1_1unordered__map_a1c1174e7303146179f4475674d618ef6.rst", "doxygen/classstdgpu_1_1unordered__map_a1c9d46242fa3194dd206e1f22b9f0b5a.rst", "doxygen/classstdgpu_1_1unordered__map_a1cd7abd237b0bd80a3b80108964f1414.rst", "doxygen/classstdgpu_1_1unordered__map_a225cebac9c682f62a6bab61a0e5d89bf.rst", "doxygen/classstdgpu_1_1unordered__map_a28c2b8d40bb2f5f248175ef30ed7d035.rst", "doxygen/classstdgpu_1_1unordered__map_a2a10621d961f08a7021212b9a7f11527.rst", "doxygen/classstdgpu_1_1unordered__map_a2fc0faeeb752f164d63b5ea82e762fe4.rst", "doxygen/classstdgpu_1_1unordered__map_a34175fb5ac53fc067687036aa7efe4c8.rst", "doxygen/classstdgpu_1_1unordered__map_a3553a2734cf05c06165683b253fcc594.rst", "doxygen/classstdgpu_1_1unordered__map_a3689fa9b27ef119a5f04fa1479f8d0a6.rst", "doxygen/classstdgpu_1_1unordered__map_a36f03669e7033efd099e65363fd1ef50.rst", "doxygen/classstdgpu_1_1unordered__map_a3c5dcb288e65005bc43984c819833595.rst", "doxygen/classstdgpu_1_1unordered__map_a40dfbbdac1d4dd6fa7637c4ffedefb56.rst", "doxygen/classstdgpu_1_1unordered__map_a413c00fa0ac3ee5ba7c1a1a28ceb3b61.rst", "doxygen/classstdgpu_1_1unordered__map_a47481928f65b91f75f0b13975d6a17b8.rst", "doxygen/classstdgpu_1_1unordered__map_a47a91489d9b4bfa2b40197bced28701a.rst", "doxygen/classstdgpu_1_1unordered__map_a4a4b09a8b128b134d112d93444af3b71.rst", "doxygen/classstdgpu_1_1unordered__map_a4f84cc1a08f34935c971dbde24f00b49.rst", "doxygen/classstdgpu_1_1unordered__map_a5134a31a8f58796dfd34391b338b4e49.rst", "doxygen/classstdgpu_1_1unordered__map_a5a9e386ff1da292168af5797678c2bff.rst", "doxygen/classstdgpu_1_1unordered__map_a5adcd909b3e2ff07ee89642543f22000.rst", "doxygen/classstdgpu_1_1unordered__map_a5b64fb0eb27b0693a54e83ad827c27d0.rst", "doxygen/classstdgpu_1_1unordered__map_a6129ae52579a7458b5d9cf4088f7d46c.rst", "doxygen/classstdgpu_1_1unordered__map_a6346cb21cbfb6b7770bb0e6bfc78452d.rst", "doxygen/classstdgpu_1_1unordered__map_a6d0b3e69e5473e7f41e8ba4ab0ca7c21.rst", "doxygen/classstdgpu_1_1unordered__map_a70e4f2a4f787bb130f6c0e6a91932a5c.rst", "doxygen/classstdgpu_1_1unordered__map_a75cbf06bf0a74f675b2476125678ce49.rst", "doxygen/classstdgpu_1_1unordered__map_a769ed0229e1f830757f64bfc07e81773.rst", "doxygen/classstdgpu_1_1unordered__map_a79f84ace8dcd07ad29d15adc38d27bdf.rst", "doxygen/classstdgpu_1_1unordered__map_a8ba60bae4445ee71ff8c93c72e0ba201.rst", "doxygen/classstdgpu_1_1unordered__map_a8c725208bf8b3a543d3c8d308ee61d92.rst", "doxygen/classstdgpu_1_1unordered__map_a8f0d80cce2835654abedc7891c62f383.rst", "doxygen/classstdgpu_1_1unordered__map_a90d901708528d323e25e6637c78556d1.rst", "doxygen/classstdgpu_1_1unordered__map_a935853d385f87386857e26e695ceb523.rst", "doxygen/classstdgpu_1_1unordered__map_a9b863bb5f90e924c363db186937113c1.rst", "doxygen/classstdgpu_1_1unordered__map_aa33ca3f839f958009e00f1e8e7a97c3d.rst", "doxygen/classstdgpu_1_1unordered__map_aa438e338e5bfe603b6cb7daa0e1ea97f.rst", "doxygen/classstdgpu_1_1unordered__map_aa9850326e1dc3ebfae057c330aae4da5.rst", "doxygen/classstdgpu_1_1unordered__map_aacdc3ae840cff319de881ce65194a112.rst", "doxygen/classstdgpu_1_1unordered__map_aae02ab9e18f6778fee549b572cea6ed0.rst", "doxygen/classstdgpu_1_1unordered__map_ab90f10d46a65ed313d5e6bce4a7a2dca.rst", "doxygen/classstdgpu_1_1unordered__map_ac33606f2e6d850dd04d2ae12319a5559.rst", "doxygen/classstdgpu_1_1unordered__map_ac5927b12e496fb1d253398b68a018c53.rst", "doxygen/classstdgpu_1_1unordered__map_ac86eb15d19265a36ab197a43e93be66f.rst", "doxygen/classstdgpu_1_1unordered__map_ac917bd80ae24050fc8b71febe379cf53.rst", "doxygen/classstdgpu_1_1unordered__map_acef070794a0e35c3f7427663794a70e6.rst", "doxygen/classstdgpu_1_1unordered__map_ad0becb3e9155aaf2216460adffac4c57.rst", "doxygen/classstdgpu_1_1unordered__map_ad2cc91c91a4cdb12d24b94da2bc09f4f.rst", "doxygen/classstdgpu_1_1unordered__map_adbc7cd1f8333385096e4c28675128d74.rst", "doxygen/classstdgpu_1_1unordered__map_ae28ade69988d5d62436beb846326e766.rst", "doxygen/classstdgpu_1_1unordered__map_aea3529ceab3b0c8d98877f63808f0167.rst", "doxygen/classstdgpu_1_1unordered__map_af13b5a52fafe2ccaa1e3a89a5d000b32.rst", "doxygen/classstdgpu_1_1unordered__map_af273559138872441208932e61f555109.rst", "doxygen/classstdgpu_1_1unordered__map_af89066c32bbbcc21718f92989f2c774b.rst", "doxygen/classstdgpu_1_1unordered__map_afda3c54af82fef9d9048b2c4b534520e.rst", "doxygen/classstdgpu_1_1unordered__set.rst", "doxygen/classstdgpu_1_1unordered__set-members.rst", "doxygen/classstdgpu_1_1unordered__set_a0586a05c475471dcc9af616f377518a4.rst", "doxygen/classstdgpu_1_1unordered__set_a06855581be32d85c8c706bd60d7ff576.rst", "doxygen/classstdgpu_1_1unordered__set_a13541565247b9a29e83d97251d3d88c4.rst", "doxygen/classstdgpu_1_1unordered__set_a1cfca17870a0705ac9498a696be61699.rst", "doxygen/classstdgpu_1_1unordered__set_a2a0a86ba3d4788a88120276f12f62f57.rst", "doxygen/classstdgpu_1_1unordered__set_a2dbcc1e8d76c53a8259095fb9b50edef.rst", "doxygen/classstdgpu_1_1unordered__set_a2ebee0a96edd4a479e03adaa75c51d9c.rst", "doxygen/classstdgpu_1_1unordered__set_a34e0b636cef40749fe28c6ef567625d7.rst", "doxygen/classstdgpu_1_1unordered__set_a3625346bf7b1d7b063300120830747b5.rst", "doxygen/classstdgpu_1_1unordered__set_a366b8c2152edd313af682dcd7644be08.rst", "doxygen/classstdgpu_1_1unordered__set_a3c3a6452a2925c51a37b3917e2f489c0.rst", "doxygen/classstdgpu_1_1unordered__set_a4107c5999557d552cfcf3847dcce2c28.rst", "doxygen/classstdgpu_1_1unordered__set_a441b61a8bfe4bee8d5d1a57cb821153f.rst", "doxygen/classstdgpu_1_1unordered__set_a471ec53f0b647ec69d0c010010c2d779.rst", "doxygen/classstdgpu_1_1unordered__set_a5287ec2f4ddd1664f0a5181672b65146.rst", "doxygen/classstdgpu_1_1unordered__set_a5ca9fde00379ce6b9cb51de047f9cbae.rst", "doxygen/classstdgpu_1_1unordered__set_a5faa7bd33bb9080c25d64d83994dbfae.rst", "doxygen/classstdgpu_1_1unordered__set_a609d58fffa0d6e8792aecd0c1406bf72.rst", "doxygen/classstdgpu_1_1unordered__set_a655829d43543f393eef8d419a7244327.rst", "doxygen/classstdgpu_1_1unordered__set_a6e55fa92278c9b1f557a648aa678df6c.rst", "doxygen/classstdgpu_1_1unordered__set_a754d5353085e07ab65b4ae5af0f4bd55.rst", "doxygen/classstdgpu_1_1unordered__set_a7759b8368eebed5d5050b7ada477b8e5.rst", "doxygen/classstdgpu_1_1unordered__set_a7dcfdce5cbc4ba2be0e6168b4a874ef9.rst", "doxygen/classstdgpu_1_1unordered__set_a7df5305ab7dd2dc1eeffe1e64cabcae0.rst", "doxygen/classstdgpu_1_1unordered__set_a7f53b11be27d21caf74a33a5abc0be55.rst", "doxygen/classstdgpu_1_1unordered__set_a817fade71ca5034e80bb6fa31ce522c6.rst", "doxygen/classstdgpu_1_1unordered__set_a83876a376bd75b43dbfa1097226a925b.rst", "doxygen/classstdgpu_1_1unordered__set_a88b6edbf29fdd40db075643cfbcf7347.rst", "doxygen/classstdgpu_1_1unordered__set_a94a90ea201b3f3ba0720394fced4ed1a.rst", "doxygen/classstdgpu_1_1unordered__set_a9b50daf1bd72fc02b84ace8a3cd1fc48.rst", "doxygen/classstdgpu_1_1unordered__set_aa000d235371b6a7025b5258ed8f5980a.rst", "doxygen/classstdgpu_1_1unordered__set_aa18078b9fe040e9f1b2cc98d918a150e.rst", "doxygen/classstdgpu_1_1unordered__set_aa5279d861c37b5c68cb483c677269ee1.rst", "doxygen/classstdgpu_1_1unordered__set_aa83cb9bd0fa4f1338f1e7960b3caef2a.rst", "doxygen/classstdgpu_1_1unordered__set_aa9dbc9d0387d779c7f84d18a248de42b.rst", "doxygen/classstdgpu_1_1unordered__set_aaa2c8ed250b2cbe7c327873101dcbcc4.rst", "doxygen/classstdgpu_1_1unordered__set_aac1e6362fc9776cbb26bbdb8f245f1ed.rst", "doxygen/classstdgpu_1_1unordered__set_aad2792c82d1040f0da05d6529364c1d5.rst", "doxygen/classstdgpu_1_1unordered__set_aaeeb852b95f85eae0737aad8290d0f89.rst", "doxygen/classstdgpu_1_1unordered__set_aaef89e106150dc3d8af13bcc0a91363d.rst", "doxygen/classstdgpu_1_1unordered__set_ab7b6a04ddec531bc9bd8d5d458c9e274.rst", "doxygen/classstdgpu_1_1unordered__set_ab86b40a9751195d7a37d9f3c766002b0.rst", "doxygen/classstdgpu_1_1unordered__set_ac0dd5c5c39a2c2a225e35994678ae4e2.rst", "doxygen/classstdgpu_1_1unordered__set_ac715bd3e180109cb0ebeb39015ddb93a.rst", "doxygen/classstdgpu_1_1unordered__set_aca9d26554d0cb0e2a483f8466e9bc11e.rst", "doxygen/classstdgpu_1_1unordered__set_ad7dcee55f0385a9131dd48a96d4a1529.rst", "doxygen/classstdgpu_1_1unordered__set_ad85f0e80013c7f52c4cc06d794ae411a.rst", "doxygen/classstdgpu_1_1unordered__set_ad884c32aad19be044bbc2d5723e7b396.rst", "doxygen/classstdgpu_1_1unordered__set_ad8ec65672aefb7e106e819ccb53f57a8.rst", "doxygen/classstdgpu_1_1unordered__set_adb4cc2fdf59a8e6aa341e3aa616f90bb.rst", "doxygen/classstdgpu_1_1unordered__set_adbf19f6b67069d10f9e742fc6d55c2e3.rst", "doxygen/classstdgpu_1_1unordered__set_add0f420ccab99022804221eb962ea4db.rst", "doxygen/classstdgpu_1_1unordered__set_adeac058fd25af2515a769d4d0fed9cd2.rst", "doxygen/classstdgpu_1_1unordered__set_ae867536e1e354f97a1ee9c70394a0d7e.rst", "doxygen/classstdgpu_1_1unordered__set_aece58152caa2dc92e3b482c7257a3840.rst", "doxygen/classstdgpu_1_1unordered__set_aefb59ed3ea7cfe6dbe31ea0bec82484d.rst", "doxygen/classstdgpu_1_1unordered__set_afa6f5347ce3198b5c2f6cde8fa0af6e9.rst", "doxygen/classstdgpu_1_1vector.rst", "doxygen/classstdgpu_1_1vector-members.rst", "doxygen/classstdgpu_1_1vector_a0093fcdd91dbbe434f1511139e451236.rst", "doxygen/classstdgpu_1_1vector_a0816331de28a6f27003c14e76c514035.rst", "doxygen/classstdgpu_1_1vector_a0a1c83863a468dc2becc8bd3245ef7e8.rst", "doxygen/classstdgpu_1_1vector_a10c1a55a9bc5381d47bc74484144efb3.rst", "doxygen/classstdgpu_1_1vector_a111188f38908eabf7c502a0bb2420076.rst", "doxygen/classstdgpu_1_1vector_a12c09e63ae52a2540eb4128029e2479d.rst", "doxygen/classstdgpu_1_1vector_a18c4f34a0f8d54f4e98946726638e748.rst", "doxygen/classstdgpu_1_1vector_a1bc1e768e5d35fffaad83f6652e2a08d.rst", "doxygen/classstdgpu_1_1vector_a203399c07e0846e61824016aa79153a0.rst", "doxygen/classstdgpu_1_1vector_a2759dd9ed4343649170294a5f98de058.rst", "doxygen/classstdgpu_1_1vector_a2f692bd8e09c21004b500f48375290e7.rst", "doxygen/classstdgpu_1_1vector_a33db89e6933dd7a4636d551c1d49734a.rst", "doxygen/classstdgpu_1_1vector_a4029ed1d26534b245be6d79880e57581.rst", "doxygen/classstdgpu_1_1vector_a451f5498afbfd57700a4d833fbabcbbf.rst", "doxygen/classstdgpu_1_1vector_a4d16cd8bd7b163de0fa1a789569a863a.rst", "doxygen/classstdgpu_1_1vector_a53ee549954f0ec706a6a9a254b5f651c.rst", "doxygen/classstdgpu_1_1vector_a550c9bb2f86d141389b6576974ea1c13.rst", "doxygen/classstdgpu_1_1vector_a5615dc6fc672ead80ed370ddefbded86.rst", "doxygen/classstdgpu_1_1vector_a589cf80a376d3db2b68767ee1dee9091.rst", "doxygen/classstdgpu_1_1vector_a58a2307b1fb4b9e12179696516933366.rst", "doxygen/classstdgpu_1_1vector_a5b36f0889defe3960b18f9c1414c9a5e.rst", "doxygen/classstdgpu_1_1vector_a5c978910aecbf68a5fcebebca0e7226e.rst", "doxygen/classstdgpu_1_1vector_a5eee2ad816279ead47d978660aa4c0a8.rst", "doxygen/classstdgpu_1_1vector_a6caafb08102c759a273a2f0e033bd4ab.rst", "doxygen/classstdgpu_1_1vector_a75db1799377efd4d3c9a9f9cfae6efc0.rst", "doxygen/classstdgpu_1_1vector_a781b2876f1ad58a0c1f5c3afbd6f0287.rst", "doxygen/classstdgpu_1_1vector_a7dd66829711e8e671d3d490ed880deac.rst", "doxygen/classstdgpu_1_1vector_a85f98eb22e2eae1a7c477282be7cfd3b.rst", "doxygen/classstdgpu_1_1vector_a860a3c6316468a955173004b7dd72d90.rst", "doxygen/classstdgpu_1_1vector_a862485c6eacec3b86f62158e5eb02812.rst", "doxygen/classstdgpu_1_1vector_a8e4fd78b9c63d8162520a001a54057f9.rst", "doxygen/classstdgpu_1_1vector_a8f8295c473e0c98c7d4e6666687208b3.rst", "doxygen/classstdgpu_1_1vector_a934f2ffdbdad5cc347b67549a7967f22.rst", "doxygen/classstdgpu_1_1vector_a9e5ce08a63d4f45e6140d02312c72330.rst", "doxygen/classstdgpu_1_1vector_aa13e7abfa78e145d97a77fd9d0e9253b.rst", "doxygen/classstdgpu_1_1vector_ab924bf35da7f363766c456145bfd293b.rst", "doxygen/classstdgpu_1_1vector_ac298bcc14b449dc814e28e1181b7a997.rst", "doxygen/classstdgpu_1_1vector_acb0e1512188f7c1c9302066a49c0882a.rst", "doxygen/classstdgpu_1_1vector_ad3905f38ea28547c4bf83fc48d00f4a1.rst", "doxygen/classstdgpu_1_1vector_ad40155e70c8e4bca3749ba8a65c92316.rst", "doxygen/classstdgpu_1_1vector_add93a05d30fed38d01cfa38b0412f434.rst", "doxygen/classstdgpu_1_1vector_ae1bbf4b60ca74dfc2b968ebd71282b38.rst", "doxygen/classstdgpu_1_1vector_ae1d1bc5e5f7bc326748fe05dcc208af4.rst", "doxygen/classstdgpu_1_1vector_aec43b223c3575d0aca500ebe3d52cd2c.rst", "doxygen/classstdgpu_1_1vector_af340e744fffc062f6126dfbb20918846.rst", "doxygen/classstdgpu_1_1vector_afc5c6ec769b1d3186da840137451459d.rst", "doxygen/classstdgpu_1_1vector_afd1008ed51b71d4ec20a0d3aabdf4d87.rst", "doxygen/compiler_8h.rst", "doxygen/compiler_8h_source.rst", "doxygen/config_8h_8in.rst", "doxygen/contract_8h.rst", "doxygen/contract_8h_source.rst", "doxygen/cstddef_8h.rst", "doxygen/cstddef_8h_source.rst", "doxygen/deque_8cuh.rst", "doxygen/device_8h_source.rst", "doxygen/dir_428503dcf15f4bfec322f74d927bb3fb.rst", "doxygen/dir_49e56c817e5e54854c35e136979f97ca.rst", "doxygen/dir_898c961af6c7154379fc56a14535fef9.rst", "doxygen/execution_8h.rst", "doxygen/execution_8h_source.rst", "doxygen/files.rst", "doxygen/functional_8h.rst", "doxygen/functional_8h_source.rst", "doxygen/group__algorithm.rst", "doxygen/group__algorithm_ga0b5cc5d196df56e6cb2bfeddd8391d01.rst", "doxygen/group__algorithm_ga4aac2abc5af546a48dccab17837b308f.rst", "doxygen/group__algorithm_ga565de133d4cf8410d40cdb25fb115798.rst", "doxygen/group__algorithm_ga6eef069288db550f1e5487ac70d3bb99.rst", "doxygen/group__algorithm_ga7afedcb1c9bffa8f2f3b364541657ce5.rst", "doxygen/group__algorithm_ga81ef3aa13f35cbfad300b60df9a682b0.rst", "doxygen/group__algorithm_gaadaf19b3d025db5c8e98809390410eeb.rst", "doxygen/group__algorithm_gaf00e4ecd0c83fa98ac5840f9b4eea1b0.rst", "doxygen/group__atomic.rst", "doxygen/group__atomic_ga02a95237f9215b5445af72602de742af.rst", "doxygen/group__atomic_ga129b71df4a774dff5ed90fb848b720b1.rst", "doxygen/group__atomic_ga1c5cae047867e2e53bb81945fc851e72.rst", "doxygen/group__atomic_ga200ddedf082902f0e86ffeaab1e1342d.rst", "doxygen/group__atomic_ga31f9dcedcca97bda7f7d7fbd8139a71c.rst", "doxygen/group__atomic_ga41db3cd72b1dfbe2291fa39ebe6a3fc6.rst", "doxygen/group__atomic_ga49e453e978931f4f26bd65119041c63a.rst", "doxygen/group__atomic_ga4ea04cb9397e2e3fdf98671edf092fd1.rst", "doxygen/group__atomic_ga52929ba61da4d12a3fb526be635761be.rst", "doxygen/group__atomic_ga59bf186739bbb7ccd43c16dc5fa8867d.rst", "doxygen/group__atomic_ga5db7dc5560bcf4b833a90617b9b48a55.rst", "doxygen/group__atomic_ga6100d28bebf55b64b220835d789ce53d.rst", "doxygen/group__atomic_ga620902c6ed1003d77c083ce9fc0d84ae.rst", "doxygen/group__atomic_ga76e883c39c6e4df1ef962afc118b8437.rst", "doxygen/group__atomic_ga8d52f465e5e2fdac3468674739c1dc82.rst", "doxygen/group__atomic_ga8f22a64958b426ac75998e780732aeb4.rst", "doxygen/group__atomic_ga9e5c9ca30990fab8b865451e8fe2a9d0.rst", "doxygen/group__atomic_gaa1e6d2bc92f44040c7a466df561b2f51.rst", "doxygen/group__atomic_gacad24a7a81c7495380951780fb7de2bb.rst", "doxygen/group__atomic_gacc1de96e08aff0d33567e5b78197664a.rst", "doxygen/group__atomic_gaf74178c9ac98319834fe2d129ea51773.rst", "doxygen/group__atomic_gaf93742b96fb03839557359711ffc9c52.rst", "doxygen/group__bit.rst", "doxygen/group__bit_ga000ca83776d024bb4339cffe62fceff4.rst", "doxygen/group__bit_ga7a88237ffd8ac201d50b85789f20de2c.rst", "doxygen/group__bit_ga9d30d2439cae63bb2c991643f9dd9755.rst", "doxygen/group__bit_gaa3c39b5a76dd38f8bcd5c16fe153d32b.rst", "doxygen/group__bit_gabf26596348b55612b2686baa7a04328b.rst", "doxygen/group__bit_gada86b409717edbbeee94dacf442935f1.rst", "doxygen/group__bit_gae4f9b287187273d3cb2a3ab614b8c966.rst", "doxygen/group__bitset.rst", "doxygen/group__compiler.rst", "doxygen/group__config.rst", "doxygen/group__contract.rst", "doxygen/group__cstddef.rst", "doxygen/group__data__structures.rst", "doxygen/group__deque.rst", "doxygen/group__execution.rst", "doxygen/group__functional.rst", "doxygen/group__iterator.rst", "doxygen/group__iterator_ga0e906cc3cb26763107126537616a95df.rst", "doxygen/group__iterator_ga1930e8f778034618d7c226119aacf378.rst", "doxygen/group__iterator_ga1d2156e646cd66754318ef226fd4c391.rst", "doxygen/group__iterator_ga23e760609935182e779e1ed51f84cdcc.rst", "doxygen/group__iterator_ga2547330e223bdf1f9c73ee056634a4d4.rst", "doxygen/group__iterator_ga34f43f98cd4f89db43d145fc313e9c93.rst", "doxygen/group__iterator_ga3b42f7d8ad69f2606225ffd49a78a909.rst", "doxygen/group__iterator_ga42472431abb9c6b20e8991037559bf61.rst", "doxygen/group__iterator_ga483c639b2f3a2c8dd265a5ef22f73341.rst", "doxygen/group__iterator_ga5769e14b2700cfbfd14b408524a1a34f.rst", "doxygen/group__iterator_ga60a4cecd7787eec10082cdb1088de319.rst", "doxygen/group__iterator_ga614ffbff47ebcb3e4bc656d3561920d8.rst", "doxygen/group__iterator_ga6ef9e87a5d4d4bbb356b61b47edd1628.rst", "doxygen/group__iterator_ga6fb75645295f15b396cf74957f8de508.rst", "doxygen/group__iterator_ga7445d2a775ca6703a3d33801bc8bfdb4.rst", "doxygen/group__iterator_ga7a99ec32a48e44905ac872e1135a5ee7.rst", "doxygen/group__iterator_ga7c9ac3d63e5edf4b233a2e9a81a71144.rst", "doxygen/group__iterator_ga8d975a2c2b2987a72bb148519d924d45.rst", "doxygen/group__iterator_ga923ee861262bc590d780fd07bb6f18f7.rst", "doxygen/group__iterator_ga95f617f8a2691b15656fe850f7a7a0d1.rst", "doxygen/group__iterator_gaa096451d625bc742d2bf6489259e041f.rst", "doxygen/group__iterator_gaab6088756ec6a8bff18be58bcbef69eb.rst", "doxygen/group__iterator_gaacf57ef317a4a0862456aa626b905bec.rst", "doxygen/group__iterator_gab37d31ea1e88464b33201c51bcbb7e2d.rst", "doxygen/group__iterator_gab6399a2a814ee797138e47de6b3b5366.rst", "doxygen/group__iterator_gab677890f4cbebfe871e2ba88c8833565.rst", "doxygen/group__iterator_gacea0e5c13c16c6957a11ca0375970be9.rst", "doxygen/group__iterator_gad3bebb4a54fececbdf778337f25aa49b.rst", "doxygen/group__iterator_gaeff91d38431463f68e8de5303ddb25a2.rst", "doxygen/group__iterator_gaf2017062ac7701fdced76c342c7351bd.rst", "doxygen/group__iterator_gaf302d69a0468d75cf69d212d0f09166e.rst", "doxygen/group__iterator_gafe9e995136f718e126848ade5b7b3813.rst", "doxygen/group__limits.rst", "doxygen/group__memory.rst", "doxygen/group__memory_ga013559d7b7541834fed1c1273fc6bfc9.rst", "doxygen/group__memory_ga075af49dd57c3c99feb4d2d312112159.rst", "doxygen/group__memory_ga198de7e9d2a392c7a1daa35e4297e949.rst", "doxygen/group__memory_ga21ed721bec58c4f1bfdac3a26ca9ea6a.rst", "doxygen/group__memory_ga34ac68e2cacb089a38a1d5f3ab9cc636.rst", "doxygen/group__memory_ga372d470c4a658990a5097591fc904415.rst", "doxygen/group__memory_ga37a59c41f852e87d333aa31b2058d44b.rst", "doxygen/group__memory_ga3d2293892395c750ea9847cea62648ae.rst", "doxygen/group__memory_ga498262251e8954f199c8010f08cb79ca.rst", "doxygen/group__memory_ga4ddddacc6bfa28be4252a408558da00a.rst", "doxygen/group__memory_ga556fea26fdb67ebbcd2a24191a73e534.rst", "doxygen/group__memory_ga6672cdde5db3cdddf642039a5cacd3af.rst", "doxygen/group__memory_ga67a97f08e29a9410ee9c74dcbc8e55ca.rst", "doxygen/group__memory_ga6ee49a4cab875bd3eb9bdc334093d5dc.rst", "doxygen/group__memory_ga70fcf2cb1510ed56d73f2327db465d27.rst", "doxygen/group__memory_ga72aaac6abc2adf3748365bb2d5489198.rst", "doxygen/group__memory_ga88503b225c4b5090c83dbd83e600d554.rst", "doxygen/group__memory_ga8c2c4321e874a31a3f2b561c59ca1dfb.rst", "doxygen/group__memory_ga8c602ca82065ab61886f04670b2d0cf6.rst", "doxygen/group__memory_ga8ffa3291b5459b10feb1610c5fd25b71.rst", "doxygen/group__memory_ga950dbc1db080680dd5388c2a4f8d4142.rst", "doxygen/group__memory_ga96cf6385f1c78e9eb7511187a5f915fb.rst", "doxygen/group__memory_ga9df152bc71e0088453ffad0071ce520b.rst", "doxygen/group__memory_ga9e69840b1a7cb2b721c188041c405d3c.rst", "doxygen/group__memory_ga9f6029c96f143cc0768c48c34da23d9c.rst", "doxygen/group__memory_gaac53f0bb67ae88a76cd6503345a61b71.rst", "doxygen/group__memory_gac8bfa0eeebcd6e4a23e736e82865506e.rst", "doxygen/group__memory_gaca75bee2ef7e8e5c2f4a500773136efa.rst", "doxygen/group__memory_gacd327816a2da1fd3bbebd88a9c56b898.rst", "doxygen/group__memory_gad579303dc135400a4d919403f27cd516.rst", "doxygen/group__memory_gae65960011022fce97852b4425ceaec7a.rst", "doxygen/group__memory_gaf9f58b4cea111d7723a2519090a8d664.rst", "doxygen/group__memory_gaff51cb395ff5a8d82d8950b12c660d47.rst", "doxygen/group__mutex.rst", "doxygen/group__mutex_gab1127ae3d8dcaa92f752e3c524a5baa1.rst", "doxygen/group__numeric.rst", "doxygen/group__numeric_ga6084e7001f21bc5247e9e9cea9d6db75.rst", "doxygen/group__numeric_gaa47698d5c1c712d03effe6f48312428e.rst", "doxygen/group__platform.rst", "doxygen/group__queue.rst", "doxygen/group__ranges.rst", "doxygen/group__ranges_ga666a8f1d6392473e9b6dadcb2ea7f80c.rst", "doxygen/group__ranges_ga6edb8f022d6f451efe8afee6fde97e02.rst", "doxygen/group__stack.rst", "doxygen/group__system.rst", "doxygen/group__type__traits.rst", "doxygen/group__unordered__map.rst", "doxygen/group__unordered__set.rst", "doxygen/group__utilities.rst", "doxygen/group__utility.rst", "doxygen/group__utility_ga403141a3dd79113d922de22ecbb23ddd.rst", "doxygen/group__utility_ga46c23f5a3d2f65b89c667faf55cfb72b.rst", "doxygen/group__utility_ga52aa2811615f6a8b00b5898184667ec2.rst", "doxygen/group__utility_gae4a55cfe9f3653f59b77ccdd532ce938.rst", "doxygen/group__vector.rst", "doxygen/iterator_8h.rst", "doxygen/iterator_8h_source.rst", "doxygen/limits_8h.rst", "doxygen/limits_8h_source.rst", "doxygen/memory_8h.rst", "doxygen/memory_8h_source.rst", "doxygen/modules.rst", "doxygen/mutex_8cuh.rst", "doxygen/mutex_8cuh_a5aeb511d23e2c9d53a69c23c55853767.rst", "doxygen/numeric_8h.rst", "doxygen/numeric_8h_source.rst", "doxygen/platform_8h.rst", "doxygen/platform_8h_source.rst", "doxygen/queue_8cuh.rst", "doxygen/ranges_8h.rst", "doxygen/ranges_8h_source.rst", "doxygen/stack_8cuh.rst", "doxygen/structstdgpu_1_1allocator__traits.rst", "doxygen/structstdgpu_1_1allocator__traits-members.rst", "doxygen/structstdgpu_1_1allocator__traits_a25aa5e2d3c5a9e0535fcae3a31319b82.rst", "doxygen/structstdgpu_1_1allocator__traits_a2a75b123e7690b648ea0899f4981d374.rst", "doxygen/structstdgpu_1_1allocator__traits_a2a88462b9698422b30191950b3193171.rst", "doxygen/structstdgpu_1_1allocator__traits_a3f06fb9936e0bd80746b9288a8570d7b.rst", "doxygen/structstdgpu_1_1allocator__traits_a55528b7d04bc37b82b551e593ead168e.rst", "doxygen/structstdgpu_1_1allocator__traits_a59aad455a09028474275452fdbf55033.rst", "doxygen/structstdgpu_1_1allocator__traits_a6ed13c59b6c1e77abe87fece4fde6215.rst", "doxygen/structstdgpu_1_1allocator__traits_a71a2b277752444ad25083811a81b89ca.rst", "doxygen/structstdgpu_1_1allocator__traits_a8a7059fefa040a160eff63ab48eb6e3b.rst", "doxygen/structstdgpu_1_1allocator__traits_a92115354bfc2fd14b1b46d371bdeab52.rst", "doxygen/structstdgpu_1_1allocator__traits_a9856609d26289c2cb22fa37856345cda.rst", "doxygen/structstdgpu_1_1allocator__traits_a99df1a3b138a04b1d31fb90034f75ab0.rst", "doxygen/structstdgpu_1_1allocator__traits_aa936c46f7698b0eb4e60813826318725.rst", "doxygen/structstdgpu_1_1allocator__traits_aab29639b11528967a323ba443db8ce80.rst", "doxygen/structstdgpu_1_1allocator__traits_aae09fb5e867cec3a4cc217e1c2fdb1b6.rst", "doxygen/structstdgpu_1_1allocator__traits_acae2746f085e103432e542b3a64ec9c7.rst", "doxygen/structstdgpu_1_1allocator__traits_ace1b8bdc1ac6535b2255d80747f75476.rst", "doxygen/structstdgpu_1_1allocator__traits_ad612264ebb184b31d29568dd1160898d.rst", "doxygen/structstdgpu_1_1allocator__traits_ae5d87a1cbef8e36523432c391504c4ac.rst", "doxygen/structstdgpu_1_1allocator__traits_aeceaffd3ea4112b3402dd8c135e1662d.rst", "doxygen/structstdgpu_1_1allocator__traits_aee98218272148ee976fc5e4919686ea1.rst", "doxygen/structstdgpu_1_1allocator__traits_af79c19bc7b088820614c64d1a5e6f982.rst", "doxygen/structstdgpu_1_1allocator__traits_afa335f987fc643145311b7144906a284.rst", "doxygen/structstdgpu_1_1bit__not.rst", "doxygen/structstdgpu_1_1bit__not-members.rst", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4.rst", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4-members.rst", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4_a899611e62de2fd8e1aa07302c3314af5.rst", "doxygen/structstdgpu_1_1bit__not_3_01void_01_4_afdec7d8b1ca7fd30d42517a64f6515eb.rst", "doxygen/structstdgpu_1_1bit__not_a3957f5cbb51151de23e93fb806ba8025.rst", "doxygen/structstdgpu_1_1equal__to.rst", "doxygen/structstdgpu_1_1equal__to-members.rst", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4.rst", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4-members.rst", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4_a2284dbb147364dd79971cc1eea4cb186.rst", "doxygen/structstdgpu_1_1equal__to_3_01void_01_4_ad8fdc5d8de476a219e8e85b251790db4.rst", "doxygen/structstdgpu_1_1equal__to_a7716e2aeda03e7d19caa60a854428424.rst", "doxygen/structstdgpu_1_1hash.rst", "doxygen/structstdgpu_1_1hash_3_01bool_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01bool_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01bool_01_4_a800626f0b19d0582aa7e831e1eec5160.rst", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01char16__t_01_4_a86ad4cecb176b4d1329cd45d6e208e84.rst", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01char32__t_01_4_a52750aad0273d8ba47bc9169d2bf0118.rst", "doxygen/structstdgpu_1_1hash_3_01char_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01char_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01char_01_4_aebc31cb0c5914c02990685205e216e40.rst", "doxygen/structstdgpu_1_1hash_3_01double_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01double_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01double_01_4_ad00fd5bf23ce5136658b60a00e116eee.rst", "doxygen/structstdgpu_1_1hash_3_01float_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01float_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01float_01_4_a6f305075338f2fe8c122a57698bf7638.rst", "doxygen/structstdgpu_1_1hash_3_01int_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01int_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01int_01_4_a9a33905e2877e1d1c6a713d253e12b39.rst", "doxygen/structstdgpu_1_1hash_3_01long_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01long_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01long_01_4_a326545e54badd05bd1a30076645e4df6.rst", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01long_01double_01_4_a6763d5abccd7e7231fed4a4dd378db65.rst", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01long_01long_01_4_a5fc4b0ccfee72f060812a05ac61c2a60.rst", "doxygen/structstdgpu_1_1hash_3_01short_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01short_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01short_01_4_a5cc0c0b719462b7b27dbee1ad91e43f6.rst", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01signed_01char_01_4_a3f2d4f9cc91f7e21bd9058a85aed8256.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01char_01_4_a4ad633e52b9ef646158875638c296a16.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01int_01_4_ad6b4c13b408c21d743e82bd9da3d87d7.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01_4_a32a4742964b8f4391669055f51ca6259.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01long_01long_01_4_a9b0989cd4bbb2a0354373b61f16fb4fe.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01unsigned_01short_01_4_ad3799ce70bd4d58c88314cfd108d1d14.rst", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4.rst", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4-members.rst", "doxygen/structstdgpu_1_1hash_3_01wchar__t_01_4_abbd9a755fd45f8b10f5ea7a0ac8b6922.rst", "doxygen/structstdgpu_1_1identity.rst", "doxygen/structstdgpu_1_1identity-members.rst", "doxygen/structstdgpu_1_1identity_a8bd54aab2f80eab700e83d6439a26d9b.rst", "doxygen/structstdgpu_1_1is__execution__policy.rst", "doxygen/structstdgpu_1_1logical__and.rst", "doxygen/structstdgpu_1_1logical__and-members.rst", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4.rst", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4-members.rst", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4_a0af656582bc5e7afafb51525bc1a96d7.rst", "doxygen/structstdgpu_1_1logical__and_3_01void_01_4_af166b964c52cc0dab13d0530c10babd7.rst", "doxygen/structstdgpu_1_1logical__and_af9f8980486d51c7df5e216a13dc6d111.rst", "doxygen/structstdgpu_1_1numeric__limits.rst", "doxygen/structstdgpu_1_1numeric__limits-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a09380e56b08ef50e2c2590a696246c69.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a36619348a8467661374ab4f69491de80.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_a51ba2e1639a88bb0be9c53ffc925498f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_ab6545d015b78c5f644a25a911fc88b34.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_acf4b801d38e1b80614746a26ce61ca9b.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01bool_01_4_adc231e5ff9d1565d561e5258474576bd.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a0fd9a981a6fab72c8f63768bfb1783e1.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a46d4e169e728f60624a595b74a1957b3.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a8d96bb39afff13b051aeebcddecc782f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_a9d270414268fda1c40b6b547d627fe93.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_aa0c050fddd47d55f6cadd441dfacb720.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char16__t_01_4_abef590477a8f872cd33f23fb62f24456.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a013af173e32ba48173d4b33f32d9d84f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a50a8d4155e31e14472d1de315f68ec1a.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a694b0d6d7309e79f68e59af554222b10.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_a6b1037d4d3c592173ef32e33e3e6c112.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_ae29d52d9cd366a1b159673d5b100ca3d.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char32__t_01_4_ae481c5a27b33557c113c285fc9f86e86.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a1edad21332d7b08860f33e7ef1f8c7ae.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a31211d70e8ef8aecc74898b48f15c06e.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a43f68153a54d82d08bfcd957bc5e8325.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a4c8a8b0c2af73273b5a8c90069b644bc.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_a8abb6a87b55f59b5b860ea9bd3e5ad82.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_ac05b4f436bab0e415cd4076ad672d134.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01char_01_4_ad8fbd50bb23c59a56dbe93354a012452.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a360b6efbda8ff0f0774904ef107dfcf1.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a467ee7782b4a46cac26b5d5fc9eb5f42.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a4db808a78320b71cefbeac1783dfc8cd.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_a616cba7730481f6d6504d971e6b7fd24.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_ab51232441a678e82c6d6225eb1270715.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01double_01_4_ac1ab00e75cb3c847a003087ee7030c3b.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a2f96aa117a6aad2e56aaaf84e3cd4ee6.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a7449f5b9eaced1a472a0ec3446a735f6.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a7ad413979658fa3b2c6b16f93eb264a1.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_a9e0b6932af3ebb64acb82ac9e10a5d5e.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_ac6f12d6e4d26275f85f7a82841d6f5ce.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01float_01_4_ae250eb098d756b46533c0a1625dac852.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a2246b6a4b92db3cd05ab005af090ad37.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a343e829256736707a3cbcc04db7c370e.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a77dbda27758147112268c2c1dd9fcc89.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_a916f280742ed08e15616204b86ad4994.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_aa929e5eba58ec880bc370446bc9eff95.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01int_01_4_aaabfddee05d45d48942914fa5bb834a3.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a2aec4efce2d7ec90ee4147c74aea10b2.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a60ab11866707b3768cb8f378250a64b1.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_a847a78ef175ecdf7b094bb3fa59f2fc0.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_aaf5df5741832904d7bf2981f1c342e37.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_acf3bf7b7bbdf535c50b47fe0c57eece0.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01_4_ad08443938b4ad2767ede8536ade5273f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a1d5563cdb67282be70197dbd79a49aea.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a20b05e9e683dc4296111a8d76e0b149f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a7190af147ace2fc42b6e8ba6bfe4c489.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_a87a5381e84b81f45ce67278355c74995.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_ab742b154e9b7a0ce07301ebc187256fd.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01double_01_4_ad3a5012c002330126b028cdbb45f1c74.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a4e0cc8cca5136a0ebc3521054b507156.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a5e0391f303cdfb2b47331584603f02f6.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a9689c732ad17f0fc727a5a130e952d2a.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_a9f3c8f101ccc0f7f8a7c5590eba295a2.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_ad56d5437960fc5f3f7e14c073749fa5c.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01long_01long_01_4_af484c233289b66c7342a6e89d91cde58.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a4c2f296c2733f961bb276dab8aa55b95.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a657c022a403afc5091d718ded5627133.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_a753bf658f46d10d12495b23f3ba7eb69.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_aa693b2d767164f2b0d93d9a891f2ecc5.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_ac54dc5bc4411ab3cdaaa44b0318333fc.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01short_01_4_acdcb61f558f27cc398bc731bf34bffb7.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a3374c0ebee86b3bdf859b3588131e848.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a47615a1d76fbebada68d9345e6e72887.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_a87bdfd8eae35551843ad3a04aa849e0d.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_aaf979cf056e5786f60cc4eebd5998597.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_acca6103a03f8669254ae9d14f39a5b26.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01signed_01char_01_4_ae2d90ecc2584739ee6401178cf71eb3c.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a0402f3c124e6aba50f3162b60d209499.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a1390e2fa1018f689799e528f05fac70a.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a22c108d83454e667b216f4c818f65288.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a301fca0117b88dfefbd38f4878406ccb.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_a85d6ab76ece426ee2f6dee3fcc400ac4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01char_01_4_ae0d48364acbafde3c4809e1407943f6f.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a4cf64631f587a9362e93b40a8509b368.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a5be89ce9880a7ab4e9d00efc96253602.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a7b79f429646450060c13da1c6fe2daec.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_a7e9eef94dff7dfdac01914d8580eb7c9.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_aba043610d7ead3c0fbdfea437feecaa7.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01int_01_4_af150adccef2c23a0df83925a8ca0d89d.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_a4649f2553a2125bd66f495d41a7e7c78.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_a878fd8c6723f78c553f3aab709728445.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_aa627f27a7c92b3466ac33b0850f33ee9.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_aa9001505f11460ac50e0f190c341a36a.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_acb6fa7c1758a3b9c910ce98a04261263.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01_4_af47e7a062456d67aae6c5636cda0acad.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_a2b46fe78bc4f40c86e5491d8dc1b5562.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_a33292c8a0a0787f74be0471840a3b840.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_aa8a7e3c0c569c1de3ae1070dab761817.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_aa8dd7a7c403b7d7405726b2b9268e24b.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_acc8f0d35c0249c901403ae7131796615.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01long_01long_01_4_ae370b9dbccdd4e6a35c95309c34feff5.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a114db78f37a1b2328c16e5f234a81975.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a561c3d3a6e947197bf2257be8b43ed64.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_a5ecb54668f5e381d6a7ce2049a057d75.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_ac6fd0dac9b9895a445b1f7b77860f935.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_acafe976407c7c2043f757f0fec535a53.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01unsigned_01short_01_4_afb5449ab8ac2b49b885db0d3f580be00.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4-members.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a070d01c6973e0b7b9990b9ebe02ee2e0.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a1a10298674897060829c4d479a7df1b6.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a1f4d1abfa8de9337e0a0c824cc8fccec.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a216edbffc35b44efd7b35375192a0e7a.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_a8bd5cf812c19492d6d6acda5dd0f84d7.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_aa1ee59c2a50eec5fde0480726decc32c.rst", "doxygen/structstdgpu_1_1numeric__limits_3_01wchar__t_01_4_aa6b51dad7180129b16d52f7faf987f53.rst", "doxygen/structstdgpu_1_1numeric__limits_a216db0b86d6dc7dc24ed04ed3530e6df.rst", "doxygen/structstdgpu_1_1numeric__limits_a42f33265a056ad338f28171d3c2dda15.rst", "doxygen/structstdgpu_1_1numeric__limits_a4403e73004cd5ffa1bc6488d291323e4.rst", "doxygen/structstdgpu_1_1numeric__limits_a624c74025640eed3ec34158fa5e74fa0.rst", "doxygen/structstdgpu_1_1numeric__limits_a89df0f66bd02044da39200b479598cae.rst", "doxygen/structstdgpu_1_1numeric__limits_ad172f19d0757f875d5b7524e572ca8a7.rst", "doxygen/structstdgpu_1_1plus.rst", "doxygen/structstdgpu_1_1plus-members.rst", "doxygen/structstdgpu_1_1plus_3_01void_01_4.rst", "doxygen/structstdgpu_1_1plus_3_01void_01_4-members.rst", "doxygen/structstdgpu_1_1plus_3_01void_01_4_a58195c2648bd0dbe76fcd535ae2564ce.rst", "doxygen/structstdgpu_1_1plus_3_01void_01_4_a8b58fbb918c9bf2627c86bca89c102da.rst", "doxygen/structstdgpu_1_1plus_a21706fdd40e79f66d69f5522dc22d71b.rst", "doxygen/structstdgpu_1_1remove__cvref.rst", "doxygen/structstdgpu_1_1remove__cvref-members.rst", "doxygen/structstdgpu_1_1remove__cvref_a5698c63d68e4e6dff8c1cd954ebc6b08.rst", "doxygen/structstdgpu_1_1safe__device__allocator.rst", "doxygen/structstdgpu_1_1safe__device__allocator-members.rst", "doxygen/structstdgpu_1_1safe__device__allocator_a2a1ca57598bd842851fae6f015592ae0.rst", "doxygen/structstdgpu_1_1safe__device__allocator_a54ae733bfe3532fec4fa701bac938870.rst", "doxygen/structstdgpu_1_1safe__device__allocator_aaa6f89abadf19b754f46c81860913c08.rst", "doxygen/structstdgpu_1_1safe__device__allocator_aab6d0ec283f13752120e788acc56c548.rst", "doxygen/structstdgpu_1_1safe__device__allocator_ab222fe7c94ccbffa88ad59b00d4b5576.rst", "doxygen/structstdgpu_1_1safe__device__allocator_afe1f9b9a437300cbfb92e1aea9774660.rst", "doxygen/structstdgpu_1_1safe__host__allocator.rst", "doxygen/structstdgpu_1_1safe__host__allocator-members.rst", "doxygen/structstdgpu_1_1safe__host__allocator_a20315930abff726e3ee14ee91764ebe0.rst", "doxygen/structstdgpu_1_1safe__host__allocator_a2b9aabf343e99f77248e1c86c5758f24.rst", "doxygen/structstdgpu_1_1safe__host__allocator_a4184877a24c9dfd9deba6d39d5e01f88.rst", "doxygen/structstdgpu_1_1safe__host__allocator_a88a97c611894815da9f0ef8116b2c2e6.rst", "doxygen/structstdgpu_1_1safe__host__allocator_a8c391ba393b1ebe92c933a7a2162f331.rst", "doxygen/structstdgpu_1_1safe__host__allocator_afa44729c5180f1f0408c949376a4dd58.rst", "doxygen/structstdgpu_1_1safe__managed__allocator.rst", "doxygen/structstdgpu_1_1safe__managed__allocator-members.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_a131af18e50b3fd57e60591d841745ff2.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_a589d2d9d790df81871eafdb8d924d0c3.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_a5989d5cfe25534b48fbf473654fe8b85.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_a99b6f91aeb1427fb9e36647ec91117f8.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_aa7733d7b5e38ca4d1f4013ca846d92b9.rst", "doxygen/structstdgpu_1_1safe__managed__allocator_afbb5782b2a7b4a06a2aea3329ab40306.rst", "doxygen/type__traits_8h.rst", "doxygen/type__traits_8h_source.rst", "doxygen/unordered__map_8cuh.rst", "doxygen/unordered__set_8cuh.rst", "doxygen/utility_8h.rst", "doxygen/utility_8h_source.rst", "doxygen/vector_8cuh.rst", "index.md"], "titles": ["Chapters", "Iterating over Arrays and Containers", "Memory Management", "Container Objects", "stdgpu: stdgpu/algorithm.h File Reference", "stdgpu: stdgpu/algorithm.h Source File", "stdgpu: Class List", "stdgpu: stdgpu/atomic.cuh File Reference", "stdgpu: stdgpu::atomic_int", "stdgpu: stdgpu::atomic_uint", "stdgpu: stdgpu::atomic_ullong", "stdgpu: stdgpu/bit.h File Reference", "stdgpu: stdgpu/bit.h Source File", "stdgpu: stdgpu/bitset.cuh File Reference", "stdgpu: stdgpu::bitset_default_type", "stdgpu: stdgpu::atomic&lt; T, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::atomic_ref&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::atomic_ref::value_type", "stdgpu: stdgpu::atomic_ref::fetch_dec_mod", "stdgpu: stdgpu::atomic_ref::operator&amp;=", "stdgpu: stdgpu::atomic_ref::atomic_ref", "stdgpu: stdgpu::atomic_ref::difference_type", "stdgpu: stdgpu::atomic_ref::operator--", "stdgpu: stdgpu::atomic_ref::is_lock_free", "stdgpu: stdgpu::atomic_ref::operator-=", "stdgpu: stdgpu::atomic_ref::fetch_sub", "stdgpu: stdgpu::atomic_ref::fetch_min", "stdgpu: stdgpu::atomic_ref::operator=", "stdgpu: stdgpu::atomic_ref::fetch_add", "stdgpu: stdgpu::atomic_ref::fetch_or", "stdgpu: stdgpu::atomic_ref::fetch_xor", "stdgpu: stdgpu::atomic_ref::fetch_inc_mod", "stdgpu: stdgpu::atomic_ref::operator--", "stdgpu: stdgpu::atomic_ref::load", "stdgpu: stdgpu::atomic_ref::operator^=", "stdgpu: stdgpu::atomic_ref::operator+=", "stdgpu: stdgpu::atomic_ref::fetch_and", "stdgpu: stdgpu::atomic_ref::operator++", "stdgpu: stdgpu::atomic_ref::operator T", "stdgpu: stdgpu::atomic_ref::compare_exchange_strong", "stdgpu: stdgpu::atomic_ref::fetch_max", "stdgpu: stdgpu::atomic_ref::exchange", "stdgpu: stdgpu::atomic_ref::operator|=", "stdgpu: stdgpu::atomic_ref::compare_exchange_weak", "stdgpu: stdgpu::atomic_ref::store", "stdgpu: stdgpu::atomic_ref::operator++", "stdgpu: stdgpu::atomic::get_allocator", "stdgpu: stdgpu::atomic::is_lock_free", "stdgpu: stdgpu::atomic::fetch_xor", "stdgpu: stdgpu::atomic::fetch_min", "stdgpu: stdgpu::atomic::operator--", "stdgpu: stdgpu::atomic::store", "stdgpu: stdgpu::atomic::difference_type", "stdgpu: stdgpu::atomic::allocator_type", "stdgpu: stdgpu::atomic::createDeviceObject", "stdgpu: stdgpu::atomic::value_type", "stdgpu: stdgpu::atomic::operator&amp;=", "stdgpu: stdgpu::atomic::fetch_sub", "stdgpu: stdgpu::atomic::operator T", "stdgpu: stdgpu::atomic::fetch_dec_mod", "stdgpu: stdgpu::atomic::fetch_and", "stdgpu: stdgpu::atomic::operator++", "stdgpu: stdgpu::atomic::fetch_or", "stdgpu: stdgpu::atomic::operator++", "stdgpu: stdgpu::atomic::operator-=", "stdgpu: stdgpu::atomic::destroyDeviceObject", "stdgpu: stdgpu::atomic::load", "stdgpu: stdgpu::atomic::compare_exchange_weak", "stdgpu: stdgpu::atomic::fetch_inc_mod", "stdgpu: stdgpu::atomic::fetch_max", "stdgpu: stdgpu::atomic::operator--", "stdgpu: stdgpu::atomic::exchange", "stdgpu: stdgpu::atomic::createDeviceObject", "stdgpu: stdgpu::atomic::destroyDeviceObject", "stdgpu: stdgpu::atomic::operator^=", "stdgpu: stdgpu::atomic::operator+=", "stdgpu: stdgpu::atomic::compare_exchange_strong", "stdgpu: stdgpu::atomic::operator=", "stdgpu: stdgpu::atomic::operator|=", "stdgpu: stdgpu::atomic::fetch_add", "stdgpu: stdgpu::back_insert_iterator&lt; Container &gt;", "stdgpu: Member List", "stdgpu: stdgpu::back_insert_iterator::back_insert_iterator", "stdgpu: stdgpu::back_insert_iterator::container_type", "stdgpu: stdgpu::bitset&lt; Block, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::bitset&lt; Block, Allocator &gt;::reference", "stdgpu: Member List", "stdgpu: stdgpu::bitset::reference::operator=", "stdgpu: stdgpu::bitset::reference::operator bool", "stdgpu: stdgpu::bitset::reference::flip", "stdgpu: stdgpu::bitset::reference::operator~", "stdgpu: stdgpu::bitset::reference::reference", "stdgpu: stdgpu::bitset::reference::operator=", "stdgpu: stdgpu::bitset::reset", "stdgpu: stdgpu::bitset::reset", "stdgpu: stdgpu::bitset::all", "stdgpu: stdgpu::bitset::operator[]", "stdgpu: stdgpu::bitset::destroyDeviceObject", "stdgpu: stdgpu::bitset::destroyDeviceObject", "stdgpu: stdgpu::bitset::flip", "stdgpu: stdgpu::bitset::get_allocator", "stdgpu: stdgpu::bitset::any", "stdgpu: stdgpu::bitset::flip", "stdgpu: stdgpu::bitset::block_type", "stdgpu: stdgpu::bitset::all", "stdgpu: stdgpu::bitset::operator[]", "stdgpu: stdgpu::bitset::allocator_type", "stdgpu: stdgpu::bitset::createDeviceObject", "stdgpu: stdgpu::bitset::set", "stdgpu: stdgpu::bitset::size", "stdgpu: stdgpu::bitset::set", "stdgpu: stdgpu::bitset::reset", "stdgpu: stdgpu::bitset::none", "stdgpu: stdgpu::bitset::createDeviceObject", "stdgpu: stdgpu::bitset::test", "stdgpu: stdgpu::bitset::none", "stdgpu: stdgpu::bitset::empty", "stdgpu: stdgpu::bitset::count", "stdgpu: stdgpu::bitset::set", "stdgpu: stdgpu::bitset::count", "stdgpu: stdgpu::bitset::any", "stdgpu: stdgpu::deque&lt; T, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::deque::data", "stdgpu: stdgpu::deque::destroyDeviceObject", "stdgpu: stdgpu::deque::at", "stdgpu: stdgpu::deque::get_allocator", "stdgpu: stdgpu::deque::createDeviceObject", "stdgpu: stdgpu::deque::emplace_back", "stdgpu: stdgpu::deque::push_back", "stdgpu: stdgpu::deque::front", "stdgpu: stdgpu::deque::pop_front", "stdgpu: stdgpu::deque::device_range", "stdgpu: stdgpu::deque::destroyDeviceObject", "stdgpu: stdgpu::deque::reference", "stdgpu: stdgpu::deque::push_front", "stdgpu: stdgpu::deque::index_type", "stdgpu: stdgpu::deque::createDeviceObject", "stdgpu: stdgpu::deque::device_range", "stdgpu: stdgpu::deque::pop_back", "stdgpu: stdgpu::deque::device_range", "stdgpu: stdgpu::deque::operator[]", "stdgpu: stdgpu::deque::at", "stdgpu: stdgpu::deque::front", "stdgpu: stdgpu::deque::data", "stdgpu: stdgpu::deque::pointer", "stdgpu: stdgpu::deque::operator[]", "stdgpu: stdgpu::deque::full", "stdgpu: stdgpu::deque::difference_type", "stdgpu: stdgpu::deque::back", "stdgpu: stdgpu::deque::device_range", "stdgpu: stdgpu::deque::allocator_type", "stdgpu: stdgpu::deque::capacity", "stdgpu: stdgpu::deque::shrink_to_fit", "stdgpu: stdgpu::deque::back", "stdgpu: stdgpu::deque::emplace_front", "stdgpu: stdgpu::deque::max_size", "stdgpu: stdgpu::deque::valid", "stdgpu: stdgpu::deque::const_pointer", "stdgpu: stdgpu::deque::const_reference", "stdgpu: stdgpu::deque::valid", "stdgpu: stdgpu::deque::clear", "stdgpu: stdgpu::deque::value_type", "stdgpu: stdgpu::deque::empty", "stdgpu: stdgpu::deque::size", "stdgpu: stdgpu::device_range&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::device_range::difference_type", "stdgpu: stdgpu::device_range::iterator", "stdgpu: stdgpu::device_range::value_type", "stdgpu: stdgpu::device_range::device_range", "stdgpu: stdgpu::device_range::device_range", "stdgpu: stdgpu::device_range::begin", "stdgpu: stdgpu::device_range::end", "stdgpu: stdgpu::device_range::size", "stdgpu: stdgpu::device_range::empty", "stdgpu: stdgpu::device_range::device_range", "stdgpu: stdgpu::device_range::device_range", "stdgpu: stdgpu::device_range::reference", "stdgpu: stdgpu::device_unique_object&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::device_unique_object::operator-&gt;", "stdgpu: stdgpu::device_unique_object::operator*", "stdgpu: stdgpu::device_unique_object::device_unique_object", "stdgpu: stdgpu::device_unique_object::device_unique_object", "stdgpu: stdgpu::device_unique_object::operator*", "stdgpu: stdgpu::device_unique_object::operator-&gt;", "stdgpu: stdgpu::front_insert_iterator&lt; Container &gt;", "stdgpu: Member List", "stdgpu: stdgpu::front_insert_iterator::container_type", "stdgpu: stdgpu::front_insert_iterator::front_insert_iterator", "stdgpu: stdgpu::host_range&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::host_range::host_range", "stdgpu: stdgpu::host_range::host_range", "stdgpu: stdgpu::host_range::host_range", "stdgpu: stdgpu::host_range::end", "stdgpu: stdgpu::host_range::iterator", "stdgpu: stdgpu::host_range::reference", "stdgpu: stdgpu::host_range::begin", "stdgpu: stdgpu::host_range::host_range", "stdgpu: stdgpu::host_range::difference_type", "stdgpu: stdgpu::host_range::value_type", "stdgpu: stdgpu::host_range::empty", "stdgpu: stdgpu::host_range::size", "stdgpu: stdgpu::insert_iterator&lt; Container &gt;", "stdgpu: Member List", "stdgpu: stdgpu::insert_iterator::insert_iterator", "stdgpu: stdgpu::insert_iterator::container_type", "stdgpu: stdgpu::mutex_array&lt; Block, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::mutex_array&lt; Block, Allocator &gt;::reference", "stdgpu: Member List", "stdgpu: stdgpu::mutex_array::reference::locked", "stdgpu: stdgpu::mutex_array::reference::try_lock", "stdgpu: stdgpu::mutex_array::allocator_type", "stdgpu: stdgpu::mutex_array::operator[]", "stdgpu: stdgpu::mutex_array::valid", "stdgpu: stdgpu::mutex_array::get_allocator", "stdgpu: stdgpu::mutex_array::createDeviceObject", "stdgpu: stdgpu::mutex_array::destroyDeviceObject", "stdgpu: stdgpu::mutex_array::empty", "stdgpu: stdgpu::mutex_array::createDeviceObject", "stdgpu: stdgpu::mutex_array::size", "stdgpu: stdgpu::mutex_array::destroyDeviceObject", "stdgpu: stdgpu::mutex_array::operator[]", "stdgpu: stdgpu::mutex_array::valid", "stdgpu: stdgpu::queue&lt; T, ContainerT &gt;", "stdgpu: Member List", "stdgpu: stdgpu::queue::push", "stdgpu: stdgpu::queue::size", "stdgpu: stdgpu::queue::reference", "stdgpu: stdgpu::queue::const_reference", "stdgpu: stdgpu::queue::destroyDeviceObject", "stdgpu: stdgpu::queue::capacity", "stdgpu: stdgpu::queue::full", "stdgpu: stdgpu::queue::value_type", "stdgpu: stdgpu::queue::pop", "stdgpu: stdgpu::queue::createDeviceObject", "stdgpu: stdgpu::queue::container_type", "stdgpu: stdgpu::queue::empty", "stdgpu: stdgpu::queue::index_type", "stdgpu: stdgpu::queue::valid", "stdgpu: stdgpu::stack&lt; T, ContainerT &gt;", "stdgpu: Member List", "stdgpu: stdgpu::stack::push", "stdgpu: stdgpu::stack::createDeviceObject", "stdgpu: stdgpu::stack::index_type", "stdgpu: stdgpu::stack::value_type", "stdgpu: stdgpu::stack::valid", "stdgpu: stdgpu::stack::destroyDeviceObject", "stdgpu: stdgpu::stack::size", "stdgpu: stdgpu::stack::const_reference", "stdgpu: stdgpu::stack::container_type", "stdgpu: stdgpu::stack::empty", "stdgpu: stdgpu::stack::capacity", "stdgpu: stdgpu::stack::full", "stdgpu: stdgpu::stack::pop", "stdgpu: stdgpu::stack::reference", "stdgpu: stdgpu::transform_range&lt; R, UnaryFunction &gt;", "stdgpu: Member List", "stdgpu: stdgpu::transform_range::iterator", "stdgpu: stdgpu::transform_range::transform_range", "stdgpu: stdgpu::transform_range::difference_type", "stdgpu: stdgpu::transform_range::size", "stdgpu: stdgpu::transform_range::value_type", "stdgpu: stdgpu::transform_range::reference", "stdgpu: stdgpu::transform_range::transform_range", "stdgpu: stdgpu::transform_range::end", "stdgpu: stdgpu::transform_range::begin", "stdgpu: stdgpu::transform_range::empty", "stdgpu: stdgpu::unordered_map&lt; Key, T, Hash, KeyEqual, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::unordered_map::begin", "stdgpu: stdgpu::unordered_map::max_size", "stdgpu: stdgpu::unordered_map::device_range", "stdgpu: stdgpu::unordered_map::find", "stdgpu: stdgpu::unordered_map::device_range", "stdgpu: stdgpu::unordered_map::empty", "stdgpu: stdgpu::unordered_map::erase", "stdgpu: stdgpu::unordered_map::key_equal", "stdgpu: stdgpu::unordered_map::insert", "stdgpu: stdgpu::unordered_map::allocator_type", "stdgpu: stdgpu::unordered_map::device_range", "stdgpu: stdgpu::unordered_map::index_type", "stdgpu: stdgpu::unordered_map::destroyDeviceObject", "stdgpu: stdgpu::unordered_map::bucket_size", "stdgpu: stdgpu::unordered_map::createDeviceObject", "stdgpu: stdgpu::unordered_map::createDeviceObject", "stdgpu: stdgpu::unordered_map::size", "stdgpu: stdgpu::unordered_map::device_range", "stdgpu: stdgpu::unordered_map::contains", "stdgpu: stdgpu::unordered_map::clear", "stdgpu: stdgpu::unordered_map::const_pointer", "stdgpu: stdgpu::unordered_map::find", "stdgpu: stdgpu::unordered_map::max_load_factor", "stdgpu: stdgpu::unordered_map::pointer", "stdgpu: stdgpu::unordered_map::insert", "stdgpu: stdgpu::unordered_map::end", "stdgpu: stdgpu::unordered_map::insert", "stdgpu: stdgpu::unordered_map::bucket_count", "stdgpu: stdgpu::unordered_map::find", "stdgpu: stdgpu::unordered_map::load_factor", "stdgpu: stdgpu::unordered_map::mapped_type", "stdgpu: stdgpu::unordered_map::valid", "stdgpu: stdgpu::unordered_map::count", "stdgpu: stdgpu::unordered_map::emplace", "stdgpu: stdgpu::unordered_map::count", "stdgpu: stdgpu::unordered_map::erase", "stdgpu: stdgpu::unordered_map::full", "stdgpu: stdgpu::unordered_map::const_reference", "stdgpu: stdgpu::unordered_map::contains", "stdgpu: stdgpu::unordered_map::end", "stdgpu: stdgpu::unordered_map::erase", "stdgpu: stdgpu::unordered_map::hasher", "stdgpu: stdgpu::unordered_map::value_type", "stdgpu: stdgpu::unordered_map::begin", "stdgpu: stdgpu::unordered_map::hash_function", "stdgpu: stdgpu::unordered_map::cend", "stdgpu: stdgpu::unordered_map::reference", "stdgpu: stdgpu::unordered_map::get_allocator", "stdgpu: stdgpu::unordered_map::iterator", "stdgpu: stdgpu::unordered_map::key_eq", "stdgpu: stdgpu::unordered_map::cbegin", "stdgpu: stdgpu::unordered_map::difference_type", "stdgpu: stdgpu::unordered_map::valid", "stdgpu: stdgpu::unordered_map::find", "stdgpu: stdgpu::unordered_map::key_type", "stdgpu: stdgpu::unordered_map::bucket", "stdgpu: stdgpu::unordered_map::const_iterator", "stdgpu: stdgpu::unordered_map::destroyDeviceObject", "stdgpu: stdgpu::unordered_set&lt; Key, Hash, KeyEqual, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::unordered_set::clear", "stdgpu: stdgpu::unordered_set::const_reference", "stdgpu: stdgpu::unordered_set::contains", "stdgpu: stdgpu::unordered_set::insert", "stdgpu: stdgpu::unordered_set::empty", "stdgpu: stdgpu::unordered_set::max_load_factor", "stdgpu: stdgpu::unordered_set::destroyDeviceObject", "stdgpu: stdgpu::unordered_set::end", "stdgpu: stdgpu::unordered_set::bucket_count", "stdgpu: stdgpu::unordered_set::count", "stdgpu: stdgpu::unordered_set::contains", "stdgpu: stdgpu::unordered_set::begin", "stdgpu: stdgpu::unordered_set::difference_type", "stdgpu: stdgpu::unordered_set::max_size", "stdgpu: stdgpu::unordered_set::bucket_size", "stdgpu: stdgpu::unordered_set::device_range", "stdgpu: stdgpu::unordered_set::valid", "stdgpu: stdgpu::unordered_set::valid", "stdgpu: stdgpu::unordered_set::emplace", "stdgpu: stdgpu::unordered_set::count", "stdgpu: stdgpu::unordered_set::erase", "stdgpu: stdgpu::unordered_set::allocator_type", "stdgpu: stdgpu::unordered_set::size", "stdgpu: stdgpu::unordered_set::reference", "stdgpu: stdgpu::unordered_set::find", "stdgpu: stdgpu::unordered_set::end", "stdgpu: stdgpu::unordered_set::find", "stdgpu: stdgpu::unordered_set::full", "stdgpu: stdgpu::unordered_set::index_type", "stdgpu: stdgpu::unordered_set::hash_function", "stdgpu: stdgpu::unordered_set::get_allocator", "stdgpu: stdgpu::unordered_set::insert", "stdgpu: stdgpu::unordered_set::const_pointer", "stdgpu: stdgpu::unordered_set::erase", "stdgpu: stdgpu::unordered_set::destroyDeviceObject", "stdgpu: stdgpu::unordered_set::createDeviceObject", "stdgpu: stdgpu::unordered_set::device_range", "stdgpu: stdgpu::unordered_set::key_equal", "stdgpu: stdgpu::unordered_set::iterator", "stdgpu: stdgpu::unordered_set::hasher", "stdgpu: stdgpu::unordered_set::load_factor", "stdgpu: stdgpu::unordered_set::value_type", "stdgpu: stdgpu::unordered_set::device_range", "stdgpu: stdgpu::unordered_set::key_type", "stdgpu: stdgpu::unordered_set::const_iterator", "stdgpu: stdgpu::unordered_set::find", "stdgpu: stdgpu::unordered_set::createDeviceObject", "stdgpu: stdgpu::unordered_set::erase", "stdgpu: stdgpu::unordered_set::pointer", "stdgpu: stdgpu::unordered_set::key_eq", "stdgpu: stdgpu::unordered_set::cend", "stdgpu: stdgpu::unordered_set::begin", "stdgpu: stdgpu::unordered_set::bucket", "stdgpu: stdgpu::unordered_set::device_range", "stdgpu: stdgpu::unordered_set::insert", "stdgpu: stdgpu::unordered_set::find", "stdgpu: stdgpu::unordered_set::cbegin", "stdgpu: stdgpu::vector&lt; T, Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::vector::device_end", "stdgpu: stdgpu::vector::erase", "stdgpu: stdgpu::vector::insert", "stdgpu: stdgpu::vector::destroyDeviceObject", "stdgpu: stdgpu::vector::operator[]", "stdgpu: stdgpu::vector::pointer", "stdgpu: stdgpu::vector::back", "stdgpu: stdgpu::vector::front", "stdgpu: stdgpu::vector::emplace_back", "stdgpu: stdgpu::vector::destroyDeviceObject", "stdgpu: stdgpu::vector::full", "stdgpu: stdgpu::vector::push_back", "stdgpu: stdgpu::vector::difference_type", "stdgpu: stdgpu::vector::valid", "stdgpu: stdgpu::vector::const_reference", "stdgpu: stdgpu::vector::device_range", "stdgpu: stdgpu::vector::const_pointer", "stdgpu: stdgpu::vector::clear", "stdgpu: stdgpu::vector::erase", "stdgpu: stdgpu::vector::allocator_type", "stdgpu: stdgpu::vector::device_cbegin", "stdgpu: stdgpu::vector::valid", "stdgpu: stdgpu::vector::at", "stdgpu: stdgpu::vector::empty", "stdgpu: stdgpu::vector::size", "stdgpu: stdgpu::vector::device_begin", "stdgpu: stdgpu::vector::reference", "stdgpu: stdgpu::vector::pop_back", "stdgpu: stdgpu::vector::operator[]", "stdgpu: stdgpu::vector::back", "stdgpu: stdgpu::vector::createDeviceObject", "stdgpu: stdgpu::vector::shrink_to_fit", "stdgpu: stdgpu::vector::value_type", "stdgpu: stdgpu::vector::front", "stdgpu: stdgpu::vector::capacity", "stdgpu: stdgpu::vector::at", "stdgpu: stdgpu::vector::data", "stdgpu: stdgpu::vector::createDeviceObject", "stdgpu: stdgpu::vector::get_allocator", "stdgpu: stdgpu::vector::device_end", "stdgpu: stdgpu::vector::insert", "stdgpu: stdgpu::vector::max_size", "stdgpu: stdgpu::vector::device_cend", "stdgpu: stdgpu::vector::device_begin", "stdgpu: stdgpu::vector::data", "stdgpu: stdgpu::vector::index_type", "stdgpu: stdgpu::vector::device_range", "stdgpu: stdgpu/compiler.h File Reference", "stdgpu: stdgpu/compiler.h Source File", "stdgpu: stdgpu/config.h.in File Reference", "stdgpu: stdgpu/contract.h File Reference", "stdgpu: stdgpu/contract.h Source File", "stdgpu: stdgpu/cstddef.h File Reference", "stdgpu: stdgpu/cstddef.h Source File", "stdgpu: stdgpu/deque.cuh File Reference", "stdgpu: stdgpu/device.h Source File", "stdgpu: stdgpu Directory Reference", "stdgpu: /home/runner/work/stdgpu/stdgpu/docs Directory Reference", "stdgpu: /home/runner/work/stdgpu/stdgpu/docs/doxygen_src Directory Reference", "stdgpu: stdgpu/execution.h File Reference", "stdgpu: stdgpu/execution.h Source File", "stdgpu: File List", "stdgpu: stdgpu/functional.h File Reference", "stdgpu: stdgpu/functional.h Source File", "stdgpu: algorithm", "stdgpu: stdgpu::clamp", "stdgpu: stdgpu::min", "stdgpu: stdgpu::fill_n", "stdgpu: stdgpu::copy_n", "stdgpu: stdgpu::for_each_index", "stdgpu: stdgpu::fill", "stdgpu: stdgpu::max", "stdgpu: stdgpu::copy", "stdgpu: atomic", "stdgpu: stdgpu::atomic_fetch_xor_explicit", "stdgpu: stdgpu::atomic_compare_exchange_weak", "stdgpu: stdgpu::atomic_fetch_or_explicit", "stdgpu: stdgpu::atomic_fetch_xor", "stdgpu: stdgpu::atomic_thread_fence", "stdgpu: stdgpu::atomic_exchange", "stdgpu: stdgpu::atomic_signal_fence", "stdgpu: stdgpu::atomic_fetch_and", "stdgpu: stdgpu::atomic_compare_exchange_strong", "stdgpu: stdgpu::atomic_fetch_sub", "stdgpu: stdgpu::atomic_store_explicit", "stdgpu: stdgpu::atomic_fetch_add_explicit", "stdgpu: stdgpu::atomic_store", "stdgpu: stdgpu::atomic_fetch_and_explicit", "stdgpu: stdgpu::memory_order", "stdgpu: stdgpu::atomic_load", "stdgpu: stdgpu::atomic_fetch_or", "stdgpu: stdgpu::atomic_is_lock_free", "stdgpu: stdgpu::atomic_exchange_explicit", "stdgpu: stdgpu::atomic_fetch_add", "stdgpu: stdgpu::atomic_fetch_sub_explicit", "stdgpu: stdgpu::atomic_load_explicit", "stdgpu: bit", "stdgpu: stdgpu::bit_ceil", "stdgpu: stdgpu::bit_floor", "stdgpu: stdgpu::popcount", "stdgpu: stdgpu::bit_width", "stdgpu: stdgpu::bit_mod", "stdgpu: stdgpu::has_single_bit", "stdgpu: stdgpu::bit_cast", "stdgpu: bitset", "stdgpu: compiler", "stdgpu: config", "stdgpu: contract", "stdgpu: cstddef", "stdgpu: Data Structures and Containers", "stdgpu: deque", "stdgpu: execution", "stdgpu: functional", "stdgpu: iterator", "stdgpu: stdgpu::host_end", "stdgpu: stdgpu::inserter", "stdgpu: stdgpu::device_ptr", "stdgpu: stdgpu::host_cend", "stdgpu: stdgpu::device_begin", "stdgpu: stdgpu::host_begin", "stdgpu: stdgpu::host_end", "stdgpu: stdgpu::host_cbegin", "stdgpu: stdgpu::device_cbegin", "stdgpu: stdgpu::device_cend", "stdgpu: stdgpu::host_cbegin", "stdgpu: stdgpu::device_end", "stdgpu: stdgpu::back_inserter", "stdgpu: stdgpu::device_begin", "stdgpu: stdgpu::device_begin", "stdgpu: stdgpu::make_device", "stdgpu: stdgpu::device_end", "stdgpu: stdgpu::device_begin", "stdgpu: stdgpu::device_end", "stdgpu: stdgpu::make_host", "stdgpu: stdgpu::host_begin", "stdgpu: stdgpu::size", "stdgpu: stdgpu::host_begin", "stdgpu: stdgpu::device_cend", "stdgpu: stdgpu::host_end", "stdgpu: stdgpu::device_cbegin", "stdgpu: stdgpu::host_cend", "stdgpu: stdgpu::host_end", "stdgpu: stdgpu::host_begin", "stdgpu: stdgpu::size", "stdgpu: stdgpu::front_inserter", "stdgpu: stdgpu::device_end", "stdgpu: limits", "stdgpu: memory", "stdgpu: createManagedArray", "stdgpu: stdgpu::get_deallocation_count", "stdgpu: stdgpu::to_address", "stdgpu: createDeviceArray", "stdgpu: stdgpu::construct_at", "stdgpu: copyCreateHost2HostArray", "stdgpu: stdgpu::size_bytes", "stdgpu: destroyHostArray", "stdgpu: MemoryCopy", "stdgpu: stdgpu::uninitialized_copy_n", "stdgpu: stdgpu::get_allocation_count", "stdgpu: stdgpu::uninitialized_fill", "stdgpu: createHostArray", "stdgpu: copyCreateHost2DeviceArray", "stdgpu: destroyManagedArray", "stdgpu: stdgpu::deregister_memory", "stdgpu: stdgpu::register_memory", "stdgpu: stdgpu::destroy", "stdgpu: stdgpu::uninitialized_fill_n", "stdgpu: copyHost2HostArray", "stdgpu: Initialization", "stdgpu: stdgpu::destroy_n", "stdgpu: stdgpu::uninitialized_copy", "stdgpu: stdgpu::get_dynamic_memory_type", "stdgpu: copyDevice2DeviceArray", "stdgpu: stdgpu::dynamic_memory_type", "stdgpu: stdgpu::destroy_at", "stdgpu: copyCreateDevice2DeviceArray", "stdgpu: stdgpu::to_address", "stdgpu: copyHost2DeviceArray", "stdgpu: copyDevice2HostArray", "stdgpu: copyCreateDevice2HostArray", "stdgpu: destroyDeviceArray", "stdgpu: mutex", "stdgpu: stdgpu::try_lock", "stdgpu: numeric", "stdgpu: stdgpu::transform_reduce_index", "stdgpu: stdgpu::iota", "stdgpu: platform", "stdgpu: queue", "stdgpu: ranges", "stdgpu: stdgpu::host_indexed_range", "stdgpu: stdgpu::device_indexed_range", "stdgpu: stack", "stdgpu: Platform functionality", "stdgpu: type_traits", "stdgpu: unordered_map", "stdgpu: unordered_set", "stdgpu: Complementing functionality", "stdgpu: utility", "stdgpu: stdgpu::forward", "stdgpu: stdgpu::move", "stdgpu: stdgpu::pair", "stdgpu: stdgpu::forward", "stdgpu: vector", "stdgpu: stdgpu/iterator.h File Reference", "stdgpu: stdgpu/iterator.h Source File", "stdgpu: stdgpu/limits.h File Reference", "stdgpu: stdgpu/limits.h Source File", "stdgpu: stdgpu/memory.h File Reference", "stdgpu: stdgpu/memory.h Source File", "stdgpu: Modules", "stdgpu: stdgpu/mutex.cuh File Reference", "stdgpu: stdgpu::mutex_default_type", "stdgpu: stdgpu/numeric.h File Reference", "stdgpu: stdgpu/numeric.h Source File", "stdgpu: stdgpu/platform.h File Reference", "stdgpu: stdgpu/platform.h Source File", "stdgpu: stdgpu/queue.cuh File Reference", "stdgpu: stdgpu/ranges.h File Reference", "stdgpu: stdgpu/ranges.h Source File", "stdgpu: stdgpu/stack.cuh File Reference", "stdgpu: stdgpu::allocator_traits&lt; Allocator &gt;", "stdgpu: Member List", "stdgpu: stdgpu::allocator_traits::value_type", "stdgpu: stdgpu::allocator_traits::allocate", "stdgpu: stdgpu::allocator_traits::propagate_on_container_copy_assignment", "stdgpu: stdgpu::allocator_traits::allocate", "stdgpu: stdgpu::allocator_traits::is_always_equal", "stdgpu: stdgpu::allocator_traits::const_pointer", "stdgpu: stdgpu::allocator_traits::rebind_traits", "stdgpu: stdgpu::allocator_traits::pointer", "stdgpu: stdgpu::allocator_traits::const_void_pointer", "stdgpu: stdgpu::allocator_traits::select_on_container_copy_construction", "stdgpu: stdgpu::allocator_traits::deallocate", "stdgpu: stdgpu::allocator_traits::rebind_alloc", "stdgpu: stdgpu::allocator_traits::index_type", "stdgpu: stdgpu::allocator_traits::max_size", "stdgpu: stdgpu::allocator_traits::destroy", "stdgpu: stdgpu::allocator_traits::deallocate_filled", "stdgpu: stdgpu::allocator_traits::propagate_on_container_swap", "stdgpu: stdgpu::allocator_traits::propagate_on_container_move_assignment", "stdgpu: stdgpu::allocator_traits::construct", "stdgpu: stdgpu::allocator_traits::allocator_type", "stdgpu: stdgpu::allocator_traits::allocate_filled", "stdgpu: stdgpu::allocator_traits::difference_type", "stdgpu: stdgpu::allocator_traits::void_pointer", "stdgpu: stdgpu::bit_not&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::bit_not&lt; void &gt;", "stdgpu: Member List", "stdgpu: stdgpu::bit_not&lt; void &gt;::is_transparent", "stdgpu: stdgpu::bit_not&lt; void &gt;::operator()", "stdgpu: stdgpu::bit_not::operator()", "stdgpu: stdgpu::equal_to&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::equal_to&lt; void &gt;", "stdgpu: Member List", "stdgpu: stdgpu::equal_to&lt; void &gt;::operator()", "stdgpu: stdgpu::equal_to&lt; void &gt;::is_transparent", "stdgpu: stdgpu::equal_to::operator()", "stdgpu: stdgpu::hash&lt; T &gt;", "stdgpu: stdgpu::hash&lt; bool &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; bool &gt;::operator()", "stdgpu: stdgpu::hash&lt; char16_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; char16_t &gt;::operator()", "stdgpu: stdgpu::hash&lt; char32_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; char32_t &gt;::operator()", "stdgpu: stdgpu::hash&lt; char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; char &gt;::operator()", "stdgpu: stdgpu::hash&lt; double &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; double &gt;::operator()", "stdgpu: stdgpu::hash&lt; float &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; float &gt;::operator()", "stdgpu: stdgpu::hash&lt; int &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; int &gt;::operator()", "stdgpu: stdgpu::hash&lt; long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; long &gt;::operator()", "stdgpu: stdgpu::hash&lt; long double &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; long double &gt;::operator()", "stdgpu: stdgpu::hash&lt; long long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; long long &gt;::operator()", "stdgpu: stdgpu::hash&lt; short &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; short &gt;::operator()", "stdgpu: stdgpu::hash&lt; signed char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; signed char &gt;::operator()", "stdgpu: stdgpu::hash&lt; unsigned char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; unsigned char &gt;::operator()", "stdgpu: stdgpu::hash&lt; unsigned int &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; unsigned int &gt;::operator()", "stdgpu: stdgpu::hash&lt; unsigned long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; unsigned long &gt;::operator()", "stdgpu: stdgpu::hash&lt; unsigned long long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; unsigned long long &gt;::operator()", "stdgpu: stdgpu::hash&lt; unsigned short &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; unsigned short &gt;::operator()", "stdgpu: stdgpu::hash&lt; wchar_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::hash&lt; wchar_t &gt;::operator()", "stdgpu: stdgpu::identity", "stdgpu: Member List", "stdgpu: stdgpu::identity::operator()", "stdgpu: stdgpu::is_execution_policy&lt; T &gt;", "stdgpu: stdgpu::logical_and&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::logical_and&lt; void &gt;", "stdgpu: Member List", "stdgpu: stdgpu::logical_and&lt; void &gt;::operator()", "stdgpu: stdgpu::logical_and&lt; void &gt;::is_transparent", "stdgpu: stdgpu::logical_and::operator()", "stdgpu: stdgpu::numeric_limits&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; bool &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; char16_t &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; char32_t &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::is_signed", "stdgpu: stdgpu::numeric_limits&lt; char &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; double &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; double &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; float &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; float &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; int &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; int &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; long &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; long double &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; long long &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; short &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; short &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; signed char &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; unsigned char &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; unsigned int &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; unsigned long &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; unsigned long long &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::infinity", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; unsigned short &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;", "stdgpu: Member List", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::max", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::is_signed", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::min", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::lowest", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::round_error", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::epsilon", "stdgpu: stdgpu::numeric_limits&lt; wchar_t &gt;::infinity", "stdgpu: stdgpu::numeric_limits::min", "stdgpu: stdgpu::numeric_limits::lowest", "stdgpu: stdgpu::numeric_limits::infinity", "stdgpu: stdgpu::numeric_limits::max", "stdgpu: stdgpu::numeric_limits::round_error", "stdgpu: stdgpu::numeric_limits::epsilon", "stdgpu: stdgpu::plus&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::plus&lt; void &gt;", "stdgpu: Member List", "stdgpu: stdgpu::plus&lt; void &gt;::is_transparent", "stdgpu: stdgpu::plus&lt; void &gt;::operator()", "stdgpu: stdgpu::plus::operator()", "stdgpu: stdgpu::remove_cvref&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::remove_cvref::type", "stdgpu: stdgpu::safe_device_allocator&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::safe_device_allocator::deallocate", "stdgpu: stdgpu::safe_device_allocator::operator=", "stdgpu: stdgpu::safe_device_allocator::value_type", "stdgpu: stdgpu::safe_device_allocator::safe_device_allocator", "stdgpu: stdgpu::safe_device_allocator::allocate", "stdgpu: stdgpu::safe_device_allocator::operator=", "stdgpu: stdgpu::safe_host_allocator&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::safe_host_allocator::operator=", "stdgpu: stdgpu::safe_host_allocator::value_type", "stdgpu: stdgpu::safe_host_allocator::allocate", "stdgpu: stdgpu::safe_host_allocator::deallocate", "stdgpu: stdgpu::safe_host_allocator::operator=", "stdgpu: stdgpu::safe_host_allocator::safe_host_allocator", "stdgpu: stdgpu::safe_managed_allocator&lt; T &gt;", "stdgpu: Member List", "stdgpu: stdgpu::safe_managed_allocator::allocate", "stdgpu: stdgpu::safe_managed_allocator::operator=", "stdgpu: stdgpu::safe_managed_allocator::operator=", "stdgpu: stdgpu::safe_managed_allocator::value_type", "stdgpu: stdgpu::safe_managed_allocator::safe_managed_allocator", "stdgpu: stdgpu::safe_managed_allocator::deallocate", "stdgpu: stdgpu/type_traits.h File Reference", "stdgpu: stdgpu/type_traits.h Source File", "stdgpu: stdgpu/unordered_map.cuh File Reference", "stdgpu: stdgpu/unordered_set.cuh File Reference", "stdgpu: stdgpu/utility.h File Reference", "stdgpu: stdgpu/utility.h Source File", "stdgpu: stdgpu/vector.cuh File Reference", "Overview"], "terms": {"memori": [0, 1, 3, 6, 20, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 50, 51, 53, 59, 61, 62, 64, 68, 69, 70, 71, 73, 78, 81, 182, 451, 456, 469, 471, 473, 475, 479, 480, 482, 483, 487, 489, 490, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 591, 604, 615, 618, 620, 627, 632, 637, 884, 886, 890, 892, 896, 897, 900, 902, 907, 915], "manag": [0, 1, 3, 6, 15, 17, 56, 74, 182, 184, 185, 188, 189, 241, 249, 542, 543, 548, 556, 557, 562, 567, 568, 570, 572, 573, 574, 602, 603, 900, 915], "motiv": 0, "api": [0, 3, 530, 538, 549, 551, 568, 915], "creat": [0, 3, 56, 74, 110, 116, 130, 135, 140, 141, 143, 153, 186, 187, 222, 225, 241, 249, 286, 290, 291, 293, 371, 378, 382, 389, 395, 410, 415, 420, 425, 432, 434, 437, 438, 441, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 543, 546, 548, 551, 555, 556, 563, 570, 574, 599, 603, 610], "destroi": [0, 3, 67, 75, 100, 101, 127, 136, 223, 227, 236, 253, 288, 333, 342, 370, 398, 404, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639], "arrai": [0, 3, 5, 6, 126, 147, 168, 173, 174, 179, 180, 194, 196, 197, 198, 203, 212, 241, 249, 276, 301, 315, 319, 321, 326, 343, 347, 361, 386, 387, 392, 431, 439, 446, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 546, 548, 549, 550, 551, 555, 556, 557, 562, 563, 566, 567, 568, 570, 572, 573, 574, 575, 598, 599, 602, 603, 608, 613, 915], "copi": [0, 3, 4, 5, 12, 15, 94, 443, 446, 448, 450, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 548, 551, 552, 554, 556, 561, 562, 565, 567, 570, 572, 573, 574, 599, 601, 603, 608, 610, 613, 626, 887, 889, 894, 899, 903, 906, 909, 913], "between": [0, 3, 6, 274, 334, 458, 647, 915], "host": [0, 1, 5, 6, 12, 74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 194, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 454, 455, 458, 462, 463, 464, 465, 467, 506, 509, 511, 512, 514, 515, 516, 519, 529, 531, 533, 535, 536, 537, 542, 548, 550, 552, 554, 555, 556, 560, 561, 562, 563, 564, 565, 568, 572, 573, 574, 579, 580, 584, 599, 601, 602, 603, 613, 632, 637, 892, 913], "devic": [0, 1, 5, 6, 12, 56, 67, 74, 75, 98, 100, 101, 104, 105, 110, 111, 114, 116, 118, 122, 127, 130, 135, 136, 140, 141, 143, 153, 163, 164, 168, 182, 186, 187, 220, 222, 223, 225, 227, 236, 241, 249, 253, 280, 284, 286, 288, 290, 291, 293, 295, 316, 328, 333, 336, 342, 353, 370, 371, 372, 378, 382, 383, 389, 390, 395, 396, 398, 404, 408, 410, 412, 415, 420, 425, 432, 434, 435, 437, 438, 441, 446, 451, 454, 455, 456, 458, 462, 463, 464, 465, 467, 506, 513, 517, 518, 520, 522, 523, 525, 526, 527, 532, 534, 540, 542, 543, 546, 552, 554, 555, 556, 560, 561, 563, 564, 565, 567, 568, 570, 572, 573, 574, 575, 579, 580, 585, 599, 601, 602, 603, 613, 632, 637, 884, 913, 915], "iter": [0, 4, 5, 6, 82, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 451, 456, 459, 462, 463, 465, 467, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 552, 554, 560, 561, 564, 565, 578, 580, 591, 602, 603, 604, 607, 608, 613, 915], "over": [0, 6, 168, 194, 579, 584, 585, 613], "contain": [0, 2, 6, 15, 17, 48, 83, 84, 85, 86, 88, 103, 124, 129, 135, 141, 143, 153, 191, 192, 193, 209, 210, 211, 212, 221, 230, 246, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 410, 413, 415, 420, 433, 434, 435, 437, 438, 441, 468, 499, 505, 508, 509, 510, 513, 516, 520, 521, 523, 527, 529, 532, 533, 534, 535, 537, 539, 582, 586, 589, 590, 597, 598, 599, 604, 915], "object": [0, 2, 6, 11, 12, 15, 17, 22, 29, 35, 40, 41, 43, 45, 46, 53, 56, 60, 67, 68, 69, 73, 74, 75, 78, 79, 94, 95, 99, 100, 101, 110, 112, 116, 119, 127, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 150, 153, 158, 160, 163, 164, 166, 182, 184, 185, 186, 187, 188, 189, 212, 220, 222, 223, 224, 225, 226, 227, 229, 236, 238, 241, 243, 245, 249, 252, 253, 257, 259, 276, 281, 286, 288, 290, 291, 292, 293, 295, 301, 307, 312, 315, 319, 321, 326, 328, 333, 336, 340, 342, 343, 347, 352, 353, 358, 361, 363, 370, 371, 378, 382, 386, 387, 389, 392, 395, 398, 403, 404, 405, 406, 408, 410, 412, 415, 416, 418, 420, 422, 425, 432, 434, 437, 438, 441, 458, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 498, 524, 528, 599, 603, 631, 635, 654], "defin": [0, 1, 2, 5, 12, 442, 443, 444, 445, 446, 447, 448, 450, 455, 458, 500, 501, 502, 503, 581, 599, 601, 603, 608, 609, 610, 613, 753, 862, 909, 913], "The": [1, 2, 3, 14, 112, 120, 122, 177, 207, 226, 267, 277, 292, 298, 303, 305, 320, 325, 341, 344, 349, 358, 365, 376, 385, 483, 551, 563, 568, 606, 915], "concept": 1, "i": [1, 2, 3, 5, 6, 12, 16, 17, 18, 56, 74, 83, 87, 89, 119, 125, 150, 156, 160, 163, 166, 169, 178, 183, 191, 195, 206, 209, 212, 213, 215, 216, 220, 224, 229, 231, 238, 243, 245, 247, 252, 257, 259, 262, 263, 273, 275, 279, 281, 294, 297, 304, 307, 308, 310, 312, 314, 328, 329, 331, 335, 338, 340, 345, 346, 352, 353, 355, 360, 362, 363, 381, 388, 391, 394, 405, 408, 416, 418, 426, 443, 446, 448, 450, 455, 456, 458, 464, 492, 493, 497, 530, 538, 543, 548, 551, 556, 558, 562, 563, 567, 568, 570, 572, 573, 574, 579, 580, 599, 601, 603, 604, 608, 610, 613, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 712, 714, 716, 721, 723, 731, 739, 747, 753, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 862, 875, 877, 882, 885, 893, 901, 909, 913, 915], "one": [1, 2, 3, 41, 45, 53, 69, 78, 79, 470, 477, 915], "core": [1, 915], "aspect": [1, 2], "standard": [1, 2, 124, 230, 246, 274, 334, 393, 915], "templat": [1, 2, 4, 7, 11, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 592, 593, 594, 595, 596, 598, 602, 603, 605, 607, 612, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 645, 646, 647, 649, 651, 653, 654, 709, 711, 712, 713, 715, 717, 719, 720, 868, 869, 870, 871, 872, 873, 874, 876, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 912], "librari": [1, 2, 3, 551, 915], "stl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "most": [1, 2, 3], "c": [1, 2, 82, 83, 84, 190, 191, 193, 208, 209, 210, 508, 509, 510, 511, 513, 516, 520, 521, 523, 527, 529, 532, 533, 534, 535, 537, 539, 598, 599, 915], "programm": 1, "ar": [1, 2, 3, 6, 25, 41, 45, 49, 69, 78, 84, 98, 104, 107, 115, 118, 123, 193, 210, 455, 470, 477, 486, 510, 521, 539, 601, 651, 653, 915], "familiar": [1, 915], "thi": [1, 2, 3, 4, 5, 11, 12, 16, 18, 35, 40, 56, 60, 67, 68, 74, 75, 83, 87, 89, 99, 100, 101, 108, 110, 116, 117, 119, 125, 127, 128, 130, 136, 140, 144, 145, 149, 169, 183, 191, 195, 209, 213, 215, 222, 223, 224, 225, 227, 231, 236, 241, 247, 249, 253, 263, 275, 288, 290, 291, 333, 335, 342, 370, 371, 382, 394, 398, 399, 404, 417, 423, 425, 430, 432, 442, 443, 444, 445, 446, 447, 448, 450, 454, 455, 457, 458, 484, 490, 530, 538, 548, 551, 556, 562, 567, 570, 572, 573, 574, 598, 599, 600, 601, 602, 603, 607, 608, 609, 610, 612, 613, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 887, 891, 893, 894, 898, 901, 903, 904, 908, 909, 912, 913], "can": [1, 2, 3, 511, 915], "easili": [1, 2, 3], "write": [1, 5, 12, 443, 446, 448, 450, 455, 458, 462, 465, 554, 561, 580, 599, 601, 603, 608, 610, 613, 909, 913, 915], "algorithm": [1, 451, 456, 460, 461, 462, 463, 464, 465, 466, 467, 511, 591, 599, 604, 613, 915], "thrust": [1, 2, 3, 262, 264, 454, 455, 506, 508, 511, 592, 595, 598, 599, 613, 912, 913, 915], "aim": 1, "provid": [1, 2, 3, 6, 455, 458, 571, 610, 654, 712, 915], "function": [1, 2, 3, 4, 5, 6, 7, 11, 12, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 320, 334, 365, 393, 446, 451, 456, 459, 464, 468, 491, 500, 501, 502, 503, 506, 508, 541, 542, 548, 556, 562, 567, 570, 572, 573, 574, 576, 578, 579, 581, 583, 588, 592, 598, 599, 601, 602, 603, 604, 605, 607, 608, 613, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 912, 913, 915], "also": [1, 2, 3, 15, 548, 556, 562, 567, 570, 572, 573, 574, 579, 915], "vector": [1, 2, 3, 6, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 451, 456, 504, 604], "includ": [1, 2, 3, 5, 12, 15, 16, 17, 18, 83, 87, 89, 125, 169, 183, 191, 195, 209, 213, 215, 231, 247, 263, 275, 335, 394, 446, 448, 455, 458, 599, 601, 603, 608, 610, 613, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 893, 901, 909, 913, 915], "conveni": [1, 2, 915], "syntax": 1, "consid": [1, 3, 915], "follow": [1, 2, 3, 15, 17, 915], "exampl": [1, 3], "algortihm": 1, "std": [1, 2, 3, 6, 11, 12, 15, 17, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 44, 47, 50, 51, 52, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 76, 77, 80, 81, 86, 88, 124, 151, 208, 212, 214, 230, 246, 274, 327, 334, 348, 393, 407, 446, 447, 448, 454, 455, 458, 491, 492, 493, 494, 495, 496, 497, 498, 503, 506, 592, 593, 594, 596, 599, 603, 615, 619, 621, 622, 625, 628, 633, 634, 638, 639, 655, 657, 658, 660, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 687, 688, 690, 691, 693, 694, 696, 697, 699, 700, 702, 703, 705, 706, 708, 881, 883, 909, 912, 913], "float": [1, 2, 3, 6, 15, 17, 274, 298, 305, 334, 341, 376, 457, 458, 507, 541, 600, 601, 671, 672, 764, 765, 766, 767, 768, 769, 770], "1000": [1, 2, 3, 610], "fill": [1, 2, 4, 5, 459, 460, 461, 462, 463, 464, 466, 467, 543, 546, 555, 603, 632, 637], "someth": [1, 2, 3], "us": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 23, 54, 55, 56, 57, 74, 82, 85, 86, 106, 109, 110, 116, 124, 130, 137, 139, 140, 148, 151, 154, 161, 162, 165, 168, 170, 171, 172, 181, 187, 190, 192, 194, 200, 201, 204, 205, 208, 211, 212, 218, 222, 225, 230, 234, 235, 239, 242, 244, 246, 250, 251, 255, 256, 261, 262, 264, 266, 268, 269, 274, 283, 285, 287, 290, 291, 296, 299, 306, 313, 317, 318, 322, 324, 327, 330, 332, 334, 337, 348, 357, 359, 364, 368, 371, 373, 374, 375, 377, 379, 380, 382, 384, 393, 400, 407, 409, 411, 414, 421, 425, 427, 432, 440, 443, 446, 447, 448, 450, 454, 455, 458, 462, 463, 465, 467, 503, 506, 508, 511, 551, 552, 554, 561, 565, 583, 584, 585, 592, 595, 598, 599, 601, 603, 605, 606, 608, 610, 612, 613, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 649, 652, 715, 718, 876, 878, 881, 883, 884, 888, 892, 895, 900, 905, 909, 912, 913, 915], "sort": 1, "begin": [1, 4, 5, 124, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 413, 415, 420, 435, 438, 459, 462, 463, 465, 467, 513, 514, 516, 517, 519, 522, 523, 526, 529, 531, 534, 537, 542, 552, 554, 560, 561, 564, 565, 578, 580, 599, 602, 603, 607, 608, 613], "end": [1, 2, 4, 5, 131, 132, 142, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 232, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 406, 413, 422, 434, 435, 437, 459, 465, 467, 509, 512, 515, 518, 520, 525, 527, 532, 533, 535, 536, 540, 542, 554, 560, 564, 565, 578, 580, 599, 602, 603, 607, 608, 613, 915], "98": [1, 443, 446, 448, 613], "11": [1, 5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "In": [1, 2, 3, 915], "modern": 1, "latter": 1, "more": [1, 2, 915], "recent": [1, 915], "version": [1, 2, 5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "should": [1, 2, 3, 96, 102, 113, 455, 543, 546, 548, 551, 555, 556, 562, 567, 570, 572, 573, 574, 637, 720], "semant": [1, 3], "thei": [1, 3], "ident": [1, 457, 458, 507, 710, 711], "similar": [1, 3, 6, 124, 230, 246, 274, 334, 393, 475], "its": [1, 3, 915], "device_vector": [1, 2, 3], "h": [1, 2, 451, 456, 915], "differ": [1, 15, 17, 86, 88, 124, 208, 212, 214, 230, 246, 274, 334, 393, 595, 615, 913], "mostli": 1, "relat": [1, 915], "gener": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "set": [1, 2, 3, 12, 56, 74, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 448, 494, 584, 585, 915], "although": [1, 2], "abl": 1, "automat": [1, 2, 6, 173, 182, 197, 603, 613], "infer": [1, 173, 197, 613], "whether": [1, 2, 6, 12, 25, 49, 216, 455, 486, 497, 548, 556, 562, 567, 570, 572, 573, 574, 712, 753, 862], "alloc": [1, 2, 3, 5, 6, 7, 13, 16, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 246, 249, 253, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 449, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 499, 505, 530, 538, 542, 543, 546, 548, 549, 553, 555, 556, 568, 570, 574, 576, 589, 590, 597, 599, 602, 603, 605, 608, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 910, 911, 914], "advis": 1, "clearli": 1, "state": [1, 2, 3, 86, 88, 124, 160, 163, 212, 214, 220, 229, 230, 245, 246, 252, 274, 307, 328, 334, 352, 353, 393, 408, 416, 551, 603], "done": [1, 2], "It": [1, 2, 3], "possibl": [1, 2], "pass": [1, 2, 3], "raw": [1, 2, 545, 571, 603], "pointer": [1, 2, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 184, 189, 197, 203, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 470, 477, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 540, 545, 547, 551, 558, 559, 569, 571, 598, 599, 603, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 886, 890, 896, 897, 902, 907], "get": 1, "intrus": [1, 2], "device_ptr": [1, 168, 171, 393, 394, 395, 396, 397, 413, 415, 420, 434, 435, 437, 438, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599, 613], "stdgpu": [1, 2, 6, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 604, 606, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 915], "device_arrai": [1, 508, 517, 518, 522, 524, 525, 526, 540, 542, 570, 574, 575, 598, 599, 602, 603], "createdevicearrai": [1, 2, 3, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "device_pointer_cast": 1, "destroydevicearrai": [1, 2, 3, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 602, 603], "intent": 1, "cast": 1, "clear": [1, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "veri": [1, 2, 3, 915], "verbos": 1, "furthermor": [1, 2, 3], "size": [1, 2, 3, 4, 5, 56, 74, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 459, 462, 463, 464, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 539, 540, 542, 549, 552, 558, 559, 561, 564, 578, 579, 598, 599, 602, 603, 607, 608, 613, 618, 620, 627, 630, 632, 637, 886, 890, 896, 897, 902, 907, 915], "must": [1, 2, 3, 15, 212, 396, 397, 413, 435, 455, 530, 538, 558, 627, 632, 886, 897, 907], "known": 1, "explicitli": [1, 511, 599, 613], "comput": [1, 3, 5, 6, 20, 21, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 42, 44, 50, 51, 58, 59, 61, 62, 64, 66, 70, 71, 76, 77, 80, 81, 458, 461, 466, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489, 492, 493, 495, 496, 640, 645, 646, 654, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 915], "point": [1, 15, 17, 274, 334, 462, 463, 465, 467, 524, 528, 552, 554, 561, 565, 580], "what": 1, "an": [1, 2, 3, 5, 6, 12, 15, 17, 56, 74, 82, 110, 116, 130, 134, 140, 142, 168, 175, 176, 179, 180, 186, 187, 190, 194, 196, 198, 199, 202, 208, 222, 225, 240, 241, 249, 260, 271, 272, 276, 290, 291, 301, 315, 319, 321, 326, 343, 347, 361, 371, 382, 386, 387, 392, 422, 425, 432, 443, 446, 448, 450, 455, 458, 464, 498, 510, 530, 538, 579, 599, 601, 603, 608, 610, 613, 635, 712, 884, 892, 900, 909, 913, 915], "avoid": [1, 2, 3], "boilerpl": [1, 2, 3], "code": [1, 2, 3, 4, 11, 442, 445, 447, 451, 454, 457, 598, 600, 602, 607, 609, 612, 908, 912, 915], "abov": [1, 3], "natur": 1, "extens": [1, 915], "how": [1, 915], "perform": [1, 2, 6, 90, 95, 458, 543, 551, 579, 608, 713, 717, 719, 915], "device_begin": [1, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599], "device_end": [1, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 598, 599], "compar": [1, 2, 3, 41, 45, 69, 78, 325, 385, 458, 470, 477, 651, 653], "systax": 1, "call": [1, 2, 5, 212, 464, 511, 558, 559, 579, 599, 608, 613], "becom": [1, 2], "intern": [1, 2, 14, 86, 124, 212, 276, 301, 315, 319, 321, 326, 343, 347, 361, 386, 387, 392, 558, 559, 568, 603, 606, 915], "leak": [1, 2, 3], "check": [1, 2, 6, 25, 49, 98, 104, 107, 115, 118, 119, 123, 150, 160, 163, 166, 178, 206, 214, 216, 220, 224, 229, 238, 243, 245, 252, 257, 259, 273, 281, 307, 312, 328, 340, 352, 353, 363, 405, 408, 416, 418, 455, 458, 486, 548, 551, 556, 562, 567, 570, 572, 573, 574, 603, 647, 712, 915], "which": [1, 2, 3, 6, 12, 15, 82, 84, 190, 193, 208, 210, 331, 388, 397, 435, 444, 455, 456, 492, 493, 510, 521, 539, 543, 577, 579, 599, 720, 915], "now": [1, 3], "requir": [1, 2, 3, 5, 12, 15, 86, 124, 212, 230, 246, 274, 334, 393, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "inform": [1, 915], "therefor": [1, 2, 3, 915], "queri": 1, "given": [1, 2, 3, 5, 6, 12, 27, 28, 30, 31, 32, 38, 41, 42, 43, 45, 50, 51, 59, 62, 64, 67, 69, 71, 73, 75, 78, 81, 96, 99, 100, 101, 102, 108, 113, 117, 127, 136, 173, 197, 223, 227, 236, 253, 279, 282, 284, 288, 294, 297, 300, 302, 304, 308, 309, 310, 311, 314, 316, 329, 331, 333, 338, 339, 342, 345, 346, 354, 355, 356, 360, 362, 367, 369, 370, 381, 383, 388, 390, 391, 396, 397, 398, 404, 413, 435, 458, 460, 461, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 485, 487, 488, 489, 492, 493, 495, 496, 498, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 546, 547, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 561, 562, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 599, 603, 608, 613, 618, 620, 627, 631, 632, 635, 637, 645, 646, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 709, 711, 717, 719, 879, 880, 881, 886, 890, 896, 897, 902, 907, 909], "return": [1, 2, 3, 6, 35, 40, 48, 60, 68, 86, 88, 91, 93, 99, 103, 108, 117, 126, 129, 134, 142, 147, 155, 159, 167, 184, 185, 188, 189, 219, 221, 228, 233, 237, 240, 254, 258, 260, 274, 289, 308, 310, 323, 331, 334, 345, 350, 355, 366, 388, 419, 422, 429, 431, 433, 436, 439, 458, 484, 490, 544, 553, 577, 603, 626, 630, 709, 711, 887, 891, 894, 898, 903, 904, 915], "mismatch": [1, 2], "both": [1, 2, 41, 45, 69, 78, 470, 477, 568, 651, 653, 915], "addit": [1, 2, 15, 17, 30, 37, 77, 81, 124, 214, 230, 246, 274, 334, 393, 476, 480, 488, 915], "const": [1, 3, 4, 5, 6, 7, 11, 12, 15, 16, 17, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 107, 108, 110, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 132, 135, 138, 140, 141, 144, 145, 146, 147, 149, 150, 155, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 175, 176, 177, 178, 182, 184, 188, 194, 195, 199, 202, 206, 207, 212, 213, 214, 216, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 237, 238, 241, 243, 245, 246, 247, 248, 249, 252, 254, 257, 258, 259, 262, 263, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 353, 355, 356, 358, 360, 362, 363, 365, 366, 368, 371, 372, 376, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 396, 397, 399, 402, 405, 406, 408, 409, 411, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 429, 430, 432, 433, 434, 435, 436, 437, 439, 441, 446, 458, 459, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 508, 512, 515, 516, 517, 518, 519, 523, 526, 527, 531, 532, 533, 534, 535, 537, 540, 542, 543, 545, 546, 548, 554, 555, 556, 561, 562, 567, 570, 572, 573, 574, 598, 599, 602, 603, 613, 615, 616, 622, 625, 626, 630, 637, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 874, 875, 876, 877, 879, 880, 881, 884, 885, 887, 889, 892, 893, 894, 899, 900, 901, 903, 906, 909, 915], "them": [1, 3, 915], "14": [1, 5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "vector_out": 1, "transform": [1, 6, 262, 265, 613], "cbegin": [1, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "cend": [1, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392], "negat": 1, "almost": 1, "device_array_out": 1, "device_cbegin": [1, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 598, 599], "device_cend": [1, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599], "combin": 1, "power": [1, 12, 492, 493, 496, 497], "interfac": [1, 3, 6, 915], "interact": [1, 3], "well": [1, 2, 915], "kernel": [1, 2, 915], "fast": [1, 2, 915], "safe": [1, 548, 556, 558, 562, 567, 570, 572, 573, 574], "intuit": 1, "wai": [1, 2, 3], "main": 2, "develop": [2, 915], "care": 2, "about": [2, 915], "usual": 2, "suffici": [2, 3], "case": [2, 41, 45, 69, 78, 393, 470, 477], "howev": [2, 3], "all": [2, 3, 5, 15, 16, 17, 18, 82, 83, 86, 87, 88, 89, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 168, 169, 182, 183, 190, 191, 194, 195, 208, 209, 212, 213, 214, 215, 230, 231, 246, 247, 262, 263, 274, 275, 334, 335, 393, 394, 455, 456, 463, 467, 552, 565, 577, 603, 604, 615, 616, 640, 641, 642, 643, 647, 648, 649, 650, 654, 655, 656, 658, 659, 661, 662, 664, 665, 667, 668, 670, 671, 673, 674, 676, 677, 679, 680, 682, 683, 685, 686, 688, 689, 691, 692, 694, 695, 697, 698, 700, 701, 703, 704, 706, 707, 709, 710, 713, 714, 715, 716, 720, 721, 722, 723, 730, 731, 738, 739, 746, 747, 755, 756, 763, 764, 771, 772, 779, 780, 787, 788, 795, 796, 803, 804, 811, 812, 819, 820, 827, 828, 835, 836, 843, 844, 851, 852, 859, 860, 874, 875, 876, 877, 881, 882, 884, 885, 892, 893, 900, 901, 915], "unfortun": 2, "directli": 2, "support": [2, 15, 17, 212, 915], "gpu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "side": 2, "There": [2, 3], "ha": [2, 3, 41, 45, 69, 78, 217, 470, 477], "been": [2, 3, 41, 45, 69, 78, 217, 470, 477], "some": [2, 3, 124, 274, 334, 393, 577, 915], "effort": 2, "solut": 2, "still": [2, 3], "quit": [2, 3], "limit": [2, 3, 5, 12, 124, 230, 246, 274, 334, 393, 443, 446, 448, 450, 451, 455, 456, 458, 591, 599, 603, 604, 608, 610, 613, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 909, 913, 915], "For": [2, 610, 915], "instanc": [2, 12, 56, 74, 110, 116, 130, 140, 222, 225, 290, 291, 371, 382, 425, 432, 498, 915], "deliv": 2, "cuda": [2, 446, 915], "default": [2, 3, 14, 86, 88, 94, 124, 168, 194, 212, 230, 246, 262, 274, 334, 393, 543, 546, 555, 603, 606, 613, 637, 884, 892, 900, 915], "onli": [2, 3, 56, 74, 393, 446, 558, 599, 610, 915], "cpu": [2, 3, 563, 568, 915], "host_vector": [2, 3], "other": [2, 3, 20, 21, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 42, 44, 50, 51, 58, 59, 61, 62, 64, 66, 70, 71, 76, 77, 80, 81, 458, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489, 603, 651, 653, 884, 885, 889, 892, 893, 899, 900, 901, 906, 915], "present": 2, "garbag": 2, "collect": [2, 915], "mai": [2, 5, 12, 15, 17, 124, 156, 274, 334, 426, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "lead": 2, "unwant": 2, "wast": 2, "bandwidth": 2, "typic": 2, "applic": [2, 5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "involv": 2, "critic": 2, "optim": 2, "On": 2, "hand": 2, "allow": [2, 3, 511, 599, 613, 915], "pace": 2, "when": [2, 124, 230, 246, 274, 334, 393, 551], "stick": 2, "achiev": [2, 915], "maximum": [2, 5, 42, 71, 277, 298, 341, 349, 466, 603, 630, 725, 733, 741, 748, 758, 765, 777, 783, 789, 797, 806, 815, 825, 832, 842, 846, 858, 865, 872], "drawback": 2, "like": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "free": [2, 3, 25, 49, 486, 915], "prone": 2, "error": [2, 3, 601, 725, 733, 741, 748, 758, 765, 777, 783, 789, 797, 806, 815, 825, 832, 842, 846, 858, 865, 872, 915], "order": [2, 3, 7, 15, 16, 17, 18, 20, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 50, 51, 53, 59, 61, 62, 64, 68, 69, 70, 71, 73, 78, 81, 468, 469, 471, 473, 475, 479, 480, 482, 483, 487, 489, 490, 915], "solv": 2, "problem": 2, "simpl": [2, 915], "consist": 2, "wrapper": [2, 6, 182, 603], "around": 2, "goal": [2, 915], "reduc": [2, 578, 579, 607, 608], "give": [2, 915], "user": [2, 915], "strong": [2, 551, 563, 568, 915], "guarante": [2, 124, 212, 230, 246, 274, 334, 393, 915], "request": [2, 15, 17, 156, 219, 228, 279, 289, 294, 297, 304, 314, 329, 338, 346, 350, 360, 362, 381, 391, 426, 473, 475], "oper": [2, 3, 5, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 64, 67, 68, 69, 70, 71, 73, 74, 75, 78, 81, 86, 87, 88, 89, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 182, 183, 186, 187, 212, 213, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 458, 462, 463, 465, 467, 483, 486, 543, 545, 603, 640, 641, 642, 643, 644, 647, 648, 649, 650, 652, 655, 656, 658, 659, 661, 662, 664, 665, 667, 668, 670, 671, 673, 674, 676, 677, 679, 680, 682, 683, 685, 686, 688, 689, 691, 692, 694, 695, 697, 698, 700, 701, 703, 704, 706, 707, 709, 710, 713, 714, 715, 716, 718, 874, 875, 876, 877, 878, 884, 885, 886, 888, 889, 890, 892, 893, 895, 896, 897, 899, 900, 901, 902, 905, 906, 907, 915], "simplest": 2, "deal": 2, "dynam": [2, 5, 530, 538, 544, 549, 553, 558, 559, 566, 568, 599, 603, 608], "device_float_vector": 2, "42": [2, 448, 458, 909], "0f": 2, "host_float_vector": 2, "createhostarrai": [2, 3, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "here": [2, 3, 6, 456, 604, 915], "two": [2, 3, 6, 12, 458, 492, 493, 496, 497, 595, 647, 651, 653, 713, 717, 719, 874, 879, 880, 913, 915], "length": 2, "valu": [2, 4, 5, 6, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 95, 96, 102, 113, 128, 133, 144, 145, 146, 149, 152, 157, 168, 194, 274, 275, 276, 278, 279, 280, 282, 294, 300, 301, 304, 309, 310, 311, 315, 316, 319, 321, 326, 334, 335, 339, 343, 346, 347, 351, 354, 355, 356, 361, 362, 369, 372, 383, 386, 387, 391, 392, 399, 401, 402, 417, 423, 424, 428, 430, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 542, 543, 546, 547, 552, 554, 555, 560, 561, 564, 569, 578, 579, 580, 584, 585, 593, 594, 595, 596, 601, 602, 603, 607, 608, 631, 635, 637, 640, 641, 642, 643, 645, 646, 647, 651, 653, 654, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 709, 711, 713, 717, 719, 724, 726, 727, 729, 732, 735, 736, 737, 740, 742, 743, 744, 750, 751, 752, 754, 757, 759, 760, 762, 766, 768, 769, 770, 773, 774, 775, 778, 781, 784, 785, 786, 790, 791, 792, 794, 798, 799, 801, 802, 805, 807, 809, 810, 813, 816, 817, 818, 821, 823, 824, 826, 829, 830, 831, 833, 837, 839, 840, 841, 847, 848, 849, 850, 853, 854, 855, 857, 861, 863, 864, 867, 868, 869, 870, 871, 874, 879, 880, 913, 915], "tradit": [2, 3], "initi": [2, 124, 187, 274, 334, 393, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 602, 603], "paramet": [2, 3, 15, 17, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 53, 56, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 113, 114, 116, 117, 118, 122, 124, 127, 128, 130, 131, 132, 135, 136, 138, 140, 144, 145, 149, 153, 158, 163, 164, 168, 173, 174, 179, 180, 182, 186, 187, 190, 193, 194, 196, 197, 198, 203, 208, 210, 212, 219, 220, 222, 223, 225, 227, 228, 230, 232, 236, 241, 246, 248, 249, 253, 262, 265, 270, 274, 279, 280, 282, 284, 286, 288, 289, 290, 291, 294, 295, 297, 300, 302, 304, 308, 309, 310, 311, 314, 316, 328, 329, 331, 333, 334, 336, 338, 339, 342, 345, 346, 350, 353, 354, 355, 356, 360, 362, 367, 369, 370, 371, 372, 378, 381, 382, 383, 388, 390, 391, 393, 396, 397, 398, 399, 403, 404, 406, 408, 412, 413, 417, 423, 425, 430, 432, 435, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 584, 585, 593, 594, 595, 596, 618, 620, 626, 627, 630, 631, 632, 635, 637, 640, 645, 646, 647, 651, 653, 654, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 711, 713, 717, 719, 720, 874, 879, 880, 881, 884, 886, 889, 890, 892, 896, 897, 899, 900, 902, 906, 907], "option": [2, 915], "construct": [2, 131, 158, 186, 187, 309, 354, 403, 510, 521, 524, 528, 539, 547, 599, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 915], "e": [2, 3, 74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 220, 222, 223, 280, 284, 286, 288, 290, 295, 308, 310, 316, 328, 336, 345, 353, 355, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 462, 463, 464, 465, 467, 551, 552, 554, 560, 561, 564, 565, 579, 580, 632, 637, 915], "equal": [2, 6, 12, 41, 45, 69, 78, 274, 325, 334, 385, 396, 397, 413, 435, 458, 470, 477, 492, 493, 647, 651, 653, 915], "0": [2, 3, 5, 12, 97, 114, 140, 291, 308, 310, 311, 345, 355, 356, 382, 432, 443, 446, 448, 450, 455, 458, 464, 494, 495, 496, 543, 544, 546, 549, 553, 555, 579, 599, 601, 603, 608, 610, 613, 909, 913, 915], "freed": [2, 558], "later": 2, "time": [2, 915], "destroyhostarrai": [2, 3, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "bit": [2, 6, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 104, 105, 107, 108, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 212, 451, 456, 492, 493, 494, 495, 496, 497, 498, 591, 604, 915], "than": [2, 12, 15, 17, 86, 88, 274, 334, 473, 475, 492, 493], "overhead": 2, "might": [2, 473, 475, 548, 556, 562, 567, 570, 572, 573, 574], "worth": 2, "sever": [2, 230, 246, 915], "implicit": 2, "If": [2, 915], "fail": [2, 577], "warn": [2, 915], "print": 2, "null": 2, "valid": [2, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 212, 213, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "afterward": [2, 579], "overwrit": 2, "doubl": [2, 3, 6, 457, 458, 507, 541, 600, 601, 668, 669, 680, 681, 756, 757, 758, 759, 760, 761, 762, 788, 789, 790, 791, 792, 793, 794, 915], "again": 2, "checker": 2, "maintain": [2, 915], "list": [2, 3, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 334, 393, 604, 615, 640, 642, 647, 649, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900], "forget": 2, "prompt": 2, "so": [2, 3], "fix": 2, "step": 2, "effici": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "handl": [2, 3], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "avail": [2, 544, 553], "process": [2, 3, 511, 915], "reason": 2, "store": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 230, 246, 279, 294, 297, 304, 314, 329, 338, 346, 360, 362, 381, 391, 393, 469, 471, 472, 476, 478, 479, 480, 481, 482, 485, 488, 489, 543, 546, 555, 637, 915], "consequ": [2, 3], "necessari": [2, 3], "copyhost2devicearrai": [2, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 602, 603], "do": [2, 3], "copydevice2hostarrai": [2, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 602, 603], "first": [2, 3, 6, 133, 146, 240, 262, 402, 428, 462, 463, 465, 467, 542, 552, 554, 560, 561, 564, 565, 577, 580, 595, 602, 603, 613, 651, 653, 717, 719, 879, 880, 915], "copyi": 2, "vice": 2, "versa": 2, "far": [2, 3], "unifi": 2, "copycreatehost2devicearrai": [2, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "share": [2, 915], "have": [2, 3, 15, 156, 212, 426], "inde": 2, "accident": 2, "prevent": [2, 274, 334], "element": [2, 5, 6, 82, 84, 124, 125, 131, 132, 134, 138, 142, 158, 174, 180, 190, 193, 198, 203, 208, 210, 230, 231, 232, 240, 246, 247, 248, 260, 274, 284, 289, 298, 302, 305, 308, 309, 310, 334, 341, 345, 350, 354, 355, 367, 376, 390, 393, 394, 397, 403, 406, 422, 435, 462, 463, 465, 467, 510, 521, 530, 539, 543, 546, 548, 552, 554, 555, 556, 561, 562, 564, 565, 567, 570, 572, 573, 574, 580, 599, 603, 608, 618, 620, 627, 632, 637, 886, 890, 896, 897, 902, 907], "out": [2, 562, 567, 572, 573], "bound": [2, 460, 464, 579], "import": [2, 3], "note": [2, 3, 446, 610, 915], "fulfil": 2, "extern": [2, 915], "stack": [2, 6, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 451, 456, 504, 604], "need": [2, 3, 56, 74, 446], "disabl": 2, "situat": 2, "host_valu": 2, "device_value_point": 2, "1": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "memorycopi": [2, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "no_check": [2, 542, 602, 603], "pleas": [2, 915], "keep": 2, "mind": 2, "your": [2, 915], "respons": 2, "make": [2, 915], "sure": [2, 915], "succe": 2, "bridg": 3, "gap": 3, "program": [3, 915], "reliabl": [3, 915], "see": [3, 5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "even": 3, "project": [3, 915], "least": 3, "layer": 3, "hide": 3, "coher": 3, "g": [3, 74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 462, 463, 464, 465, 467, 551, 552, 554, 560, 561, 564, 565, 579, 580, 632, 637, 915], "pack": 3, "togeth": 3, "class": [3, 4, 5, 7, 13, 15, 17, 56, 67, 74, 75, 82, 86, 88, 100, 101, 110, 116, 124, 127, 130, 131, 136, 140, 158, 168, 182, 190, 194, 208, 212, 214, 222, 223, 225, 227, 230, 236, 241, 246, 249, 253, 262, 274, 288, 290, 291, 309, 333, 334, 342, 354, 370, 371, 382, 393, 398, 403, 404, 425, 432, 449, 454, 455, 457, 459, 460, 461, 466, 468, 499, 505, 506, 507, 508, 511, 541, 542, 551, 563, 568, 576, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 605, 611, 612, 613, 614, 615, 635, 645, 651, 654, 712, 717, 720, 868, 869, 870, 871, 872, 873, 879, 908, 910, 911, 912, 913, 914, 915], "public": [3, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 334, 393, 599, 615, 640, 642, 647, 649, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 915], "One": 3, "categori": 3, "context": [3, 915], "base": [3, 6, 182, 455, 601, 603, 654], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "prefer": 3, "easier": 3, "implement": [3, 393, 654, 915], "becaus": 3, "unordered_map": [3, 6, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 451, 456, 504, 604, 915], "etc": 3, "difficult": 3, "port": 3, "without": [3, 5, 12, 208, 443, 446, 448, 450, 455, 458, 511, 599, 601, 603, 608, 610, 613, 909, 913], "sacrif": 3, "properti": 3, "while": [3, 915], "easi": 3, "robust": [3, 915], "As": 3, "mention": 3, "further": [3, 915], "abstract": 3, "simplifi": 3, "anoth": [3, 915], "redud": 3, "myclass": 3, "nullptr": [3, 543, 546, 555], "int": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 33, 34, 47, 52, 61, 63, 70, 457, 458, 491, 494, 507, 541, 576, 577, 600, 601, 605, 606, 674, 675, 695, 696, 720, 722, 730, 738, 746, 755, 763, 772, 773, 774, 775, 776, 777, 778, 779, 787, 795, 803, 811, 819, 828, 829, 830, 831, 832, 833, 834, 835, 843, 851, 859], "new": [3, 21, 24, 26, 36, 37, 39, 44, 58, 65, 66, 72, 76, 77, 80, 113, 300, 339, 543, 546, 555, 603, 915], "delet": [3, 17, 88, 214, 282, 311, 316, 356, 369, 383, 396, 413], "void": [3, 4, 6, 7, 15, 17, 46, 53, 67, 75, 86, 97, 100, 101, 105, 111, 114, 121, 124, 127, 136, 156, 164, 212, 214, 223, 227, 230, 236, 246, 253, 274, 282, 284, 288, 295, 302, 316, 333, 334, 336, 342, 367, 369, 370, 383, 390, 393, 396, 397, 398, 404, 412, 413, 426, 435, 446, 457, 458, 459, 464, 465, 468, 473, 475, 479, 481, 507, 508, 538, 542, 550, 554, 557, 558, 559, 560, 562, 567, 569, 572, 573, 575, 578, 580, 598, 599, 602, 603, 607, 615, 625, 627, 631, 632, 635, 639, 640, 643, 644, 645, 646, 647, 650, 651, 652, 653, 713, 716, 717, 718, 719, 874, 877, 878, 879, 880, 884, 886, 892, 897, 900, 907, 915], "privat": [3, 915], "wrap": 3, "type": [3, 6, 12, 14, 15, 17, 74, 75, 82, 86, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 130, 135, 136, 153, 163, 164, 168, 182, 186, 187, 190, 194, 208, 212, 220, 222, 223, 230, 246, 262, 274, 280, 284, 286, 288, 290, 295, 316, 328, 334, 336, 353, 370, 371, 372, 378, 383, 390, 393, 396, 404, 408, 412, 425, 435, 446, 460, 461, 462, 463, 464, 465, 466, 467, 483, 498, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 580, 584, 585, 593, 594, 595, 596, 599, 601, 603, 606, 615, 631, 632, 635, 637, 640, 642, 647, 649, 654, 711, 712, 713, 715, 720, 753, 862, 874, 876, 881, 882, 884, 889, 892, 899, 900, 906, 909, 913, 915], "through": 3, "member": [3, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 334, 393, 615, 640, 642, 647, 649, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 915], "constructor": [3, 15, 22, 84, 94, 173, 174, 179, 180, 193, 196, 197, 198, 203, 208, 210, 265, 270, 552, 554, 561, 565, 599, 603, 613, 889, 899, 906], "simpli": 3, "empti": [3, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 212, 213, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 613], "final": 3, "destructor": 3, "clean": [3, 915], "up": [3, 915], "design": [3, 915], "problemat": 3, "sinc": [3, 15, 212, 915], "move": [3, 15, 592, 593, 595, 596, 891, 898, 904, 912, 913], "result": [3, 494, 495, 496, 543, 546, 555, 579, 645, 646, 717, 719], "doe": 3, "scale": [3, 915], "aforement": 3, "myhostdeviceobjectclass": 3, "_arrai": 3, "_size": 3, "static": [3, 15, 16, 56, 67, 74, 75, 86, 87, 100, 101, 110, 116, 124, 125, 127, 130, 136, 140, 212, 213, 222, 223, 225, 227, 230, 231, 236, 241, 246, 247, 249, 253, 274, 275, 288, 290, 291, 333, 334, 335, 342, 370, 371, 382, 393, 394, 398, 404, 425, 432, 601, 603, 615, 616, 618, 620, 626, 627, 630, 631, 632, 635, 637, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 884, 885, 892, 893, 900, 901, 915], "createdeviceobject": [3, 15, 16, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 212, 213, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441], "destroydeviceobject": [3, 15, 16, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 212, 213, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "device_object": [3, 15, 16, 67, 75, 86, 87, 100, 101, 124, 125, 127, 136, 212, 213, 223, 227, 230, 231, 236, 246, 247, 253, 274, 275, 288, 333, 334, 335, 342, 370, 393, 394, 398, 404], "createhostobject": 3, "destroyhostobject": 3, "host_object": 3, "hoste_object": 3, "match": [3, 558, 627, 632, 886, 897, 907], "capabl": [3, 615], "same": [3, 15, 212, 498, 548, 556, 570, 574], "manner": 3, "copycreatedevice2hostobject": 3, "alwai": [3, 615], "know": 3, "160": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "latest": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "go": [4, 5, 11, 12, 442, 443, 445, 446, 447, 448, 454, 455, 457, 458, 598, 599, 600, 601, 602, 603, 607, 608, 609, 610, 612, 613, 908, 909, 912, 913], "sourc": [4, 11, 442, 445, 447, 454, 457, 548, 551, 556, 562, 567, 570, 572, 573, 574, 598, 600, 602, 607, 609, 612, 908, 912, 915], "lt": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 448, 449, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "t": [4, 5, 6, 7, 11, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 449, 454, 455, 457, 458, 459, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 505, 506, 507, 508, 511, 512, 514, 515, 517, 518, 519, 522, 524, 525, 526, 528, 530, 531, 536, 540, 541, 542, 543, 546, 547, 548, 549, 550, 554, 555, 556, 557, 558, 559, 561, 562, 566, 567, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 582, 583, 584, 585, 586, 588, 589, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 607, 608, 611, 612, 613, 614, 615, 616, 623, 628, 631, 635, 641, 642, 643, 645, 646, 648, 649, 650, 651, 653, 709, 710, 711, 714, 715, 716, 717, 719, 721, 868, 869, 870, 871, 872, 873, 875, 876, 877, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914], "gt": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 448, 449, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "stdgpu_host_devic": [4, 5, 7, 11, 12, 15, 17, 22, 25, 29, 35, 40, 46, 48, 49, 53, 60, 68, 79, 82, 84, 86, 88, 103, 112, 119, 124, 129, 150, 155, 159, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 190, 193, 194, 196, 198, 199, 202, 203, 206, 207, 208, 210, 212, 214, 221, 224, 226, 230, 233, 237, 238, 243, 246, 254, 257, 258, 259, 262, 265, 267, 270, 271, 272, 273, 274, 277, 281, 292, 298, 303, 305, 312, 320, 323, 325, 331, 334, 340, 341, 344, 349, 358, 363, 365, 366, 376, 385, 388, 393, 405, 418, 419, 429, 433, 436, 458, 459, 460, 461, 466, 468, 479, 481, 484, 486, 490, 491, 492, 493, 494, 495, 496, 497, 498, 508, 510, 521, 524, 528, 539, 542, 545, 547, 569, 571, 581, 592, 593, 594, 596, 598, 599, 601, 602, 603, 609, 610, 613, 615, 630, 631, 635, 640, 642, 645, 646, 647, 649, 651, 653, 655, 657, 658, 660, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 687, 688, 690, 691, 693, 694, 696, 697, 699, 700, 702, 703, 705, 706, 708, 709, 711, 713, 715, 717, 719, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 879, 880, 912, 913], "amp": [4, 5, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 94, 95, 98, 100, 101, 104, 105, 110, 111, 114, 116, 118, 122, 124, 125, 127, 130, 131, 132, 135, 136, 137, 138, 140, 153, 158, 162, 163, 164, 182, 183, 185, 186, 187, 188, 190, 191, 193, 208, 209, 210, 212, 213, 220, 222, 223, 225, 227, 230, 231, 232, 236, 241, 246, 247, 248, 249, 253, 274, 275, 279, 280, 284, 286, 288, 290, 291, 294, 295, 297, 300, 304, 308, 309, 310, 311, 313, 314, 316, 322, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 353, 354, 355, 356, 359, 360, 362, 370, 371, 372, 378, 381, 382, 383, 388, 390, 391, 393, 394, 396, 398, 403, 404, 406, 408, 409, 412, 421, 425, 432, 435, 443, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 491, 498, 508, 509, 510, 513, 516, 520, 521, 523, 527, 529, 532, 533, 534, 535, 537, 539, 542, 545, 547, 550, 552, 554, 557, 560, 561, 564, 565, 575, 578, 579, 580, 592, 593, 594, 596, 598, 599, 602, 603, 607, 608, 615, 616, 618, 620, 626, 627, 630, 631, 632, 635, 637, 642, 643, 645, 647, 648, 649, 650, 651, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 874, 875, 876, 877, 879, 880, 884, 885, 887, 889, 891, 892, 893, 894, 898, 899, 900, 901, 903, 904, 906, 912, 913, 915], "clamp": [4, 5, 459, 461, 462, 463, 464, 465, 466, 467], "v": [4, 5, 459, 460], "lower": [4, 5, 459, 460], "upper": [4, 5, 459, 460, 464, 579], "typenam": [4, 5, 7, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 454, 455, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 592, 595, 598, 599, 602, 603, 605, 607, 608, 612, 613, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 645, 646, 647, 649, 651, 653, 654, 709, 711, 712, 713, 715, 717, 719, 874, 876, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 909, 912, 913], "executionpolici": [4, 5, 15, 16, 74, 75, 86, 87, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 125, 130, 135, 136, 153, 163, 164, 182, 183, 187, 212, 213, 220, 222, 223, 274, 275, 280, 284, 286, 288, 290, 295, 316, 328, 334, 335, 336, 353, 370, 371, 372, 378, 383, 390, 393, 394, 396, 404, 408, 412, 425, 435, 459, 462, 463, 464, 465, 467, 542, 552, 554, 560, 561, 564, 565, 578, 579, 580, 602, 603, 607, 608, 615, 616, 632, 637], "inputit": [4, 5, 459, 463, 467, 542, 552, 565, 602, 603], "outputit": [4, 5, 459, 463, 467, 542, 552, 565, 602, 603], "stdgpu_detail_overload_if": [4, 5, 11, 12, 15, 17, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 44, 47, 50, 51, 52, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 76, 77, 80, 81, 86, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 130, 135, 136, 153, 163, 164, 182, 187, 212, 220, 222, 223, 274, 279, 280, 282, 284, 286, 288, 290, 294, 295, 302, 304, 310, 316, 328, 334, 336, 346, 353, 355, 362, 367, 369, 370, 371, 372, 378, 383, 390, 391, 393, 396, 397, 404, 408, 412, 425, 435, 459, 462, 463, 464, 465, 467, 491, 492, 493, 494, 495, 496, 497, 498, 542, 545, 552, 554, 560, 561, 564, 565, 578, 579, 580, 602, 603, 607, 608, 615, 632, 637], "is_execution_policy_v": [4, 5, 15, 74, 75, 86, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 130, 135, 136, 153, 163, 164, 182, 187, 212, 220, 222, 223, 274, 280, 284, 286, 288, 290, 295, 316, 328, 334, 336, 353, 370, 371, 372, 378, 383, 390, 393, 396, 404, 408, 412, 425, 435, 455, 459, 462, 463, 464, 465, 467, 542, 552, 554, 560, 561, 564, 565, 578, 579, 580, 602, 603, 607, 608, 615, 632, 637], "remove_cvref_t": [4, 5, 15, 74, 75, 86, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 130, 135, 136, 153, 163, 164, 182, 187, 212, 220, 222, 223, 274, 280, 284, 286, 288, 290, 295, 316, 328, 334, 336, 353, 370, 371, 372, 378, 383, 390, 393, 396, 404, 408, 412, 425, 435, 455, 459, 462, 463, 464, 465, 467, 542, 552, 554, 560, 561, 564, 565, 578, 579, 580, 602, 603, 607, 608, 615, 632, 637, 909], "polici": [4, 5, 6, 15, 16, 74, 75, 86, 87, 98, 101, 104, 105, 111, 114, 116, 118, 122, 124, 125, 130, 135, 136, 153, 163, 164, 182, 183, 187, 212, 213, 220, 222, 223, 274, 275, 280, 284, 286, 288, 290, 295, 316, 328, 334, 335, 336, 353, 370, 371, 372, 378, 383, 390, 393, 394, 396, 404, 408, 412, 425, 435, 455, 459, 462, 463, 464, 465, 467, 511, 542, 552, 554, 560, 561, 564, 565, 578, 579, 580, 602, 603, 607, 608, 615, 616, 632, 637, 712], "output_begin": [4, 5, 459, 463, 467, 542, 552, 565, 602, 603], "copy_n": [4, 5, 459, 460, 461, 462, 464, 465, 466, 467], "n": [4, 5, 86, 87, 96, 99, 102, 108, 113, 117, 124, 125, 128, 144, 145, 149, 168, 169, 174, 180, 194, 195, 198, 203, 212, 213, 219, 228, 274, 275, 289, 334, 335, 350, 393, 394, 399, 417, 423, 430, 446, 459, 462, 463, 496, 542, 552, 558, 559, 561, 564, 577, 602, 603, 613, 615, 616, 618, 620, 627, 632, 637, 884, 885, 886, 890, 892, 893, 896, 897, 900, 901, 902, 907, 915], "fill_n": [4, 5, 459, 460, 461, 463, 464, 465, 466, 467], "indextyp": [4, 5, 459, 464, 578, 579, 607, 608], "unaryfunct": [4, 5, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 459, 464, 578, 579, 583, 607, 608, 612, 613], "for_each_index": [4, 5, 459, 460, 461, 462, 463, 465, 466, 467], "f": [4, 5, 262, 263, 265, 459, 464, 578, 579, 607, 608, 613], "constexpr": [4, 5, 454, 455, 459, 461, 466, 506, 592, 593, 594, 596, 601, 603, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 884, 892, 900, 912], "max": [4, 5, 15, 17, 459, 460, 461, 462, 463, 464, 465, 467, 601, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873], "b": [4, 5, 459, 461, 466, 915], "min": [4, 5, 15, 17, 459, 460, 462, 463, 464, 465, 466, 467, 601, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 865, 866, 867, 869, 870, 871, 872, 873], "9": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915], "6": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "document": [5, 12, 443, 446, 448, 455, 456, 458, 599, 601, 603, 608, 610, 613, 909, 913], "2": [5, 12, 24, 34, 39, 47, 52, 56, 63, 65, 67, 72, 74, 75, 90, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 113, 115, 116, 118, 120, 122, 123, 126, 127, 128, 130, 133, 136, 140, 141, 144, 145, 146, 147, 149, 152, 157, 160, 163, 174, 184, 185, 186, 187, 188, 189, 203, 219, 220, 222, 223, 225, 227, 228, 229, 265, 270, 276, 278, 284, 288, 290, 291, 294, 301, 307, 308, 310, 314, 315, 316, 319, 328, 329, 333, 338, 342, 343, 345, 346, 347, 351, 352, 353, 355, 360, 361, 370, 371, 382, 383, 387, 390, 395, 396, 397, 398, 399, 401, 402, 404, 408, 410, 413, 416, 417, 420, 423, 424, 425, 428, 430, 431, 432, 434, 435, 438, 439, 441, 443, 446, 448, 450, 455, 458, 496, 512, 516, 517, 518, 519, 523, 527, 530, 532, 533, 534, 535, 537, 538, 545, 571, 577, 593, 596, 599, 601, 603, 608, 610, 613, 618, 620, 887, 891, 894, 898, 903, 904, 909, 913, 915], "copyright": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "2019": [5, 12, 446, 448, 450, 458, 599, 601, 603, 610, 613, 913, 915], "patrick": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "stotko": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "3": [5, 12, 96, 97, 111, 113, 114, 121, 153, 180, 198, 282, 284, 286, 300, 302, 304, 311, 316, 339, 356, 362, 367, 369, 378, 383, 390, 443, 446, 448, 450, 455, 458, 515, 526, 531, 540, 599, 601, 603, 608, 610, 613, 909, 913, 915], "licens": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "under": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "apach": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "quot": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "4": [5, 12, 135, 141, 143, 153, 173, 174, 179, 180, 196, 197, 198, 203, 278, 279, 280, 286, 293, 297, 304, 329, 351, 360, 362, 372, 378, 381, 389, 391, 443, 446, 448, 450, 455, 458, 509, 513, 514, 515, 520, 522, 523, 525, 526, 527, 529, 531, 533, 536, 537, 540, 599, 601, 603, 608, 610, 613, 909, 913], "you": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "except": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "complianc": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "5": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "obtain": [5, 12, 443, 446, 448, 450, 455, 458, 545, 599, 601, 603, 608, 610, 613, 909, 913], "7": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "http": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "www": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "org": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "8": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "unless": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "law": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "agre": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "softwar": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "10": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "distribut": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "AS": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "basi": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "warranti": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "OR": [5, 12, 31, 44, 64, 80, 443, 446, 448, 450, 455, 458, 471, 485, 599, 601, 603, 608, 610, 613, 909, 913], "condit": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "OF": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "ani": [5, 12, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 156, 426, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "kind": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "either": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "express": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "impli": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "12": [5, 12, 443, 446, 448, 450, 455, 456, 458, 599, 601, 603, 604, 608, 610, 613, 909, 913], "specif": [5, 12, 443, 446, 448, 450, 455, 458, 544, 553, 599, 601, 603, 608, 610, 613, 909, 913], "languag": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "govern": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "permiss": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "13": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "15": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "16": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "ifndef": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "stdgpu_algorithm_h": 5, "17": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "18": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "28": [5, 12, 446, 448, 450, 458, 599, 601, 603, 608, 610, 613, 909, 913], "execut": [5, 6, 74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 187, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 451, 456, 462, 463, 464, 465, 467, 511, 552, 554, 560, 561, 564, 565, 579, 580, 591, 603, 604, 608, 632, 637, 712, 915], "29": [5, 12, 443, 446, 448, 450, 458, 599, 601, 603, 608, 610, 613, 909, 913], "platform": [5, 12, 446, 451, 456, 458, 599, 601, 603, 604, 613, 913, 915], "30": [5, 12, 443, 446, 448, 450, 458, 599, 601, 603, 613, 913], "31namespac": 5, "32": [5, 12, 446, 448, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913, 915], "33": [5, 446, 448, 455, 458, 599, 601, 603, 610, 613], "42templat": [5, 12, 599, 601, 613, 913], "43constexpr": 5, "44min": 5, "45": [5, 12, 443, 446, 455, 603, 608], "54templat": 5, "55constexpr": 5, "56max": 5, "57": [5, 448, 599, 601], "68templat": 5, "69": [5, 458, 608, 610, 613], "70clamp": 5, "71": [5, 443, 446, 448, 455, 458, 599, 601, 610], "82templat": 5, "83": [5, 443, 446, 448, 599, 613], "84": [5, 443, 446, 458, 599, 601, 610, 613], "85": [5, 443, 446, 455, 458, 601, 610, 613], "86void": 5, "87for_each_index": 5, "88": [5, 446, 603], "100templat": [5, 12], "101": [5, 443, 446, 458, 601, 610], "102": [5, 443, 446, 458, 610], "103": [5, 12, 443, 446, 458, 610], "104void": 5, "105fill": 5, "106": [5, 446, 599, 601, 610, 613], "120templat": 5, "121": [5, 12, 610], "122": [5, 610], "123": [5, 6, 610], "124": [5, 7, 13, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 334, 393, 447, 449, 454, 468, 503, 506, 508, 542, 576, 583, 592, 598, 601, 602, 605, 611, 612, 614, 615, 640, 642, 647, 649, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 910, 911, 912, 914], "125iter": 5, "126fill_n": 5, "127": 5, "140templat": [5, 458], "141": 5, "142": [5, 458, 613], "143": [5, 601, 613], "144outputit": 5, "145copi": 5, "146": [5, 603], "160templat": 5, "161": [5, 603], "162": [5, 599, 603], "163": 5, "164": [5, 458, 601], "165outputit": 5, "166copy_n": 5, "167": [5, 458, 613], "168": 5, "namespac": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "169": 5, "170": [5, 601], "impl": [5, 12, 458, 599, 601, 603, 608, 610, 613, 909, 913], "algorithm_detail": 5, "171": [5, 601], "172": [5, 613], "endif": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "clampstdgpu_host_devic": 5, "rang": [5, 6, 135, 141, 143, 153, 168, 175, 176, 177, 178, 194, 199, 202, 206, 207, 262, 265, 267, 270, 271, 272, 273, 274, 278, 280, 282, 284, 286, 293, 302, 316, 334, 351, 367, 369, 372, 378, 383, 389, 390, 396, 397, 410, 413, 435, 441, 451, 456, 460, 462, 463, 464, 465, 467, 551, 552, 554, 560, 561, 564, 565, 579, 580, 584, 585, 591, 603, 604, 608, 915], "minconstexpr": 5, "minimum": [5, 28, 51, 461], "fill_niter": 5, "assign": [5, 90, 95, 462, 463, 465, 467, 887, 891, 894, 898, 903, 904], "copy_noutputit": 5, "input": [5, 262, 265, 270, 463, 467, 552, 565, 603, 881], "output": [5, 6, 82, 190, 208, 463, 467, 552, 565, 599, 603], "for_each_indexvoid": 5, "unari": [5, 464, 579, 608], "index": [5, 289, 350, 464, 579, 584, 585, 608, 915], "from": [5, 6, 11, 12, 131, 134, 142, 158, 173, 197, 240, 260, 282, 311, 316, 356, 369, 383, 396, 403, 413, 422, 455, 464, 491, 498, 551, 579, 608, 613, 881, 889, 899, 906, 909, 915], "fillvoid": 5, "maxconstexpr": 5, "copyoutputit": 5, "sizeindex64_t": [5, 599, 608], "find": [5, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 530, 538, 549, 599, 603, 608], "number": [5, 11, 12, 120, 122, 174, 180, 198, 203, 289, 298, 303, 305, 308, 310, 341, 344, 345, 350, 355, 376, 462, 463, 464, 491, 492, 493, 494, 495, 496, 497, 530, 543, 544, 546, 548, 552, 553, 555, 556, 561, 562, 564, 567, 570, 572, 573, 574, 579, 599, 603, 608, 618, 620, 627, 632, 637, 886, 890, 896, 897, 902, 907, 915], "stdgpu_host_deviceplatform": [5, 12, 458, 599, 601, 603, 613, 913], "independ": [5, 12, 458, 599, 601, 603, 613, 913], "annot": [5, 12, 458, 599, 601, 603, 613, 913], "definit": [5, 12, 455, 458, 599, 601, 603, 613, 909, 913], "77": [5, 12, 446, 455, 458, 599, 601, 603, 608, 610, 613, 913], "struct": [6, 454, 457, 506, 507, 541, 542, 588, 600, 602, 615, 640, 647, 654, 712, 713, 720, 874, 881, 884, 892, 900, 908], "union": 6, "brief": [6, 456], "descript": [6, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 334, 393, 444, 456, 459, 468, 491, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 541, 542, 576, 578, 581, 582, 583, 586, 587, 588, 589, 590, 591, 592, 597, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900], "detail": [6, 15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 214, 230, 246, 262, 274, 279, 282, 284, 294, 302, 304, 310, 316, 334, 346, 355, 362, 367, 369, 383, 390, 391, 393, 397, 435, 444, 456, 458, 459, 468, 491, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 541, 542, 545, 576, 578, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 597, 599, 602, 603, 604, 610, 612, 613, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 915], "level": [6, 456, 604], "9660": [6, 456, 604], "nstdgpu": 6, "callocator_traitsa": 6, "traitor": [6, 603, 615], "catomica": 6, "model": [6, 15, 17, 86, 212, 214], "atom": [6, 8, 9, 10, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 90, 92, 95, 451, 456, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 604, 915], "catomic_refa": 6, "refer": [6, 17, 22, 41, 45, 69, 78, 86, 89, 90, 91, 92, 93, 95, 99, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 188, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 212, 215, 216, 217, 219, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 499, 599, 603, 613, 881, 909, 915], "cback_insert_iteratoran": 6, "insert": [6, 82, 84, 190, 193, 208, 210, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599, 915], "push_back": [6, 82, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 599], "cbit_nota": 6, "bitwis": [6, 21, 31, 32, 36, 38, 44, 50, 58, 62, 64, 76, 80, 458, 469, 471, 472, 482, 485, 640, 645, 646], "NOT": [6, 458, 640, 645, 646], "cbit_not": 6, "A": [6, 15, 17, 86, 124, 168, 182, 194, 212, 230, 246, 262, 274, 334, 393, 473, 475, 511, 584, 585, 595, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 713, 715, 874, 876, 915], "transpar": [6, 642, 649, 715, 876], "special": [6, 393, 538, 601, 642, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 715, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 876], "bit_not": [6, 457, 458, 507, 641, 643, 644, 645, 646], "cbitseta": 6, "bitset": [6, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 451, 456, 504, 604], "creferencea": 6, "proxi": [6, 88, 214], "cdequea": 6, "dequ": [6, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 451, 456, 504, 604], "cdevice_rangea": 6, "repres": [6, 12, 168, 194, 262, 495, 584, 585, 613], "cdevice_unique_objecta": 6, "resourc": [6, 182, 603], "scope": [6, 182, 603, 654], "destruct": [6, 15, 86, 124, 182, 212, 230, 246, 274, 334, 393, 603], "cequal_toa": 6, "cequal_to": 6, "equal_to": [6, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 457, 458, 507, 648, 650, 651, 652, 653], "cfront_insert_iteratoran": 6, "push_front": [6, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 190, 599], "chasha": 6, "hash": [6, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 457, 458, 507, 589, 590, 656, 657, 659, 660, 662, 663, 665, 666, 668, 669, 671, 672, 674, 675, 677, 678, 680, 681, 683, 684, 686, 687, 689, 690, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 910, 911], "kei": [6, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 458, 589, 590, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 910, 911, 915], "chash": 6, "bool": [6, 7, 11, 12, 15, 17, 25, 41, 45, 49, 69, 78, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 102, 104, 107, 108, 113, 115, 117, 118, 119, 123, 124, 131, 132, 134, 138, 142, 150, 158, 160, 163, 166, 168, 178, 194, 206, 212, 214, 216, 217, 220, 224, 229, 230, 232, 238, 240, 243, 245, 246, 248, 252, 257, 259, 260, 262, 273, 274, 281, 294, 300, 307, 309, 312, 314, 328, 334, 338, 339, 340, 346, 352, 353, 354, 363, 393, 403, 405, 406, 408, 416, 418, 422, 455, 457, 458, 468, 470, 477, 486, 491, 497, 507, 541, 600, 601, 613, 647, 653, 656, 657, 713, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 738, 746, 753, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859], "char": [6, 446, 457, 458, 507, 541, 600, 601, 665, 666, 689, 690, 692, 693, 747, 748, 749, 750, 751, 752, 753, 754, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826], "char16_t": [6, 457, 458, 507, 541, 600, 601, 659, 660, 731, 732, 733, 734, 735, 736, 737], "char32_t": [6, 457, 458, 507, 541, 600, 601, 662, 663, 739, 740, 741, 742, 743, 744, 745], "long": [6, 7, 10, 15, 17, 457, 458, 507, 541, 600, 601, 677, 678, 680, 681, 683, 684, 698, 699, 701, 702, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850], "short": [6, 457, 458, 507, 541, 600, 601, 686, 687, 704, 705, 804, 805, 806, 807, 808, 809, 810, 852, 853, 854, 855, 856, 857, 858], "sign": [6, 457, 458, 507, 541, 600, 601, 689, 690, 753, 812, 813, 814, 815, 816, 817, 818, 862, 915], "sing": [6, 688], "unsign": [6, 7, 9, 10, 13, 14, 15, 17, 20, 33, 61, 70, 457, 458, 507, 541, 600, 601, 605, 606, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858], "wchar_t": [6, 457, 458, 507, 541, 600, 601, 707, 708, 860, 861, 862, 863, 864, 865, 866, 867], "chost_rangea": 6, "cidentitya": 6, "cinsert_iteratoran": 6, "cis_execution_policytyp": 6, "trait": [6, 455, 601, 712, 720, 881, 909], "clogical_anda": 6, "logic": [6, 458, 713, 717, 719], "AND": [6, 21, 38, 58, 62, 458, 482, 713, 717, 719], "clogical_and": 6, "logical_and": [6, 457, 458, 507, 714, 716, 717, 718, 719], "cmutex_arraya": 6, "mutex": [6, 212, 214, 216, 217, 219, 228, 451, 456, 577, 591, 604, 915], "cnumeric_limitsgener": 6, "cnumeric_limit": 6, "cplusa": 6, "add": [6, 131, 132, 138, 158, 232, 248, 403, 406, 458, 874, 879, 880], "cplu": 6, "plu": [6, 457, 458, 507, 875, 877, 878, 879, 880], "cqueuea": 6, "queue": [6, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 451, 456, 504, 604, 915], "cremove_cvreftyp": 6, "remov": [6, 134, 142, 240, 260, 422, 881, 909, 915], "vol": [6, 881, 909], "qualifi": [6, 881, 909], "csafe_device_allocatoran": 6, "csafe_host_allocatoran": 6, "csafe_managed_allocatoran": 6, "cstacka": 6, "ctransform_rangea": 6, "where": [6, 262, 613], "appli": [6, 262, 579, 613], "cunordered_mapa": 6, "cunordered_seta": 6, "unordered_set": [6, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 451, 456, 504, 604, 915], "cvectora": 6, "macro": [7, 13, 442, 444, 445, 447, 449, 500, 501, 502, 503, 581, 605, 609, 610, 611, 614, 910, 911, 914], "typedef": [7, 8, 9, 10, 13, 14, 447, 454, 503, 506, 508, 511, 583, 584, 585, 592, 595, 598, 605, 606, 612, 912], "enumer": [7, 468, 542, 602], "atomic_ref": [7, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 468], "atomic_int": 7, "atomic_uint": 7, "atomic_ullong": 7, "enum": [7, 468, 483, 542, 551, 563, 568, 602, 654], "memory_ord": [7, 15, 16, 17, 18, 20, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 50, 51, 53, 59, 61, 62, 64, 68, 69, 70, 71, 73, 78, 81, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490], "memory_order_relax": [7, 468, 483], "memory_order_consum": [7, 468, 483], "memory_order_acquir": [7, 468, 483], "memory_order_releas": [7, 468, 483], "memory_order_acq_rel": [7, 468, 483], "memory_order_seq_cst": [7, 15, 16, 17, 18, 20, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 50, 51, 53, 59, 61, 62, 64, 68, 69, 70, 71, 73, 78, 81, 468, 483], "stdgpu_device_onli": [7, 15, 17, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 52, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 86, 88, 90, 91, 92, 93, 95, 96, 99, 102, 108, 113, 117, 124, 128, 131, 132, 133, 134, 138, 142, 144, 145, 146, 149, 152, 157, 158, 212, 214, 216, 217, 219, 228, 230, 232, 240, 246, 248, 260, 274, 276, 279, 289, 294, 297, 300, 301, 304, 308, 309, 310, 311, 314, 315, 319, 321, 326, 329, 334, 338, 339, 343, 345, 346, 347, 350, 354, 355, 356, 360, 361, 362, 381, 386, 387, 391, 392, 393, 399, 401, 402, 403, 406, 417, 422, 423, 424, 428, 430, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 482, 485, 487, 488, 489, 576, 577, 581, 605, 609, 610], "atomic_compare_exchange_strong": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "obj": [7, 17, 18, 22, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490], "value_typ": [7, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 468, 470, 474, 477, 479, 481, 487, 599, 603, 613, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907], "expect": [7, 15, 16, 17, 18, 41, 45, 69, 78, 468, 470, 477], "desir": [7, 12, 15, 16, 17, 18, 29, 41, 43, 45, 46, 53, 69, 73, 78, 79, 468, 470, 474, 477, 479, 481, 487, 498], "noexcept": [7, 11, 12, 15, 17, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 95, 103, 112, 119, 124, 125, 126, 129, 147, 155, 159, 168, 175, 176, 194, 199, 202, 212, 213, 221, 224, 226, 262, 271, 272, 274, 275, 276, 277, 301, 315, 319, 321, 323, 326, 334, 335, 343, 347, 349, 361, 366, 386, 387, 392, 393, 429, 431, 433, 436, 439, 458, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 542, 545, 571, 592, 601, 602, 603, 613, 615, 709, 711, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 884, 885, 892, 893, 900, 901, 912, 913], "atomic_compare_exchange_weak": [7, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_exchang": [7, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_exchange_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490], "atomic_fetch_add": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490], "difference_typ": [7, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 468, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489, 599, 603, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639], "arg": [7, 15, 16, 17, 18, 20, 21, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 42, 44, 50, 51, 58, 59, 61, 62, 64, 66, 70, 71, 76, 77, 80, 81, 124, 125, 131, 158, 182, 183, 186, 187, 274, 275, 309, 334, 335, 354, 393, 394, 403, 468, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489, 542, 547, 602, 603, 615, 616, 635], "atomic_fetch_add_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_and": [7, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_and_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_or": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490], "atomic_fetch_or_explicit": [7, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_sub": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_sub_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490], "atomic_fetch_xor": [7, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_fetch_xor_explicit": [7, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_is_lock_fre": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490], "atomic_load": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490], "atomic_load_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "atomic_signal_f": [7, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_stor": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_store_explicit": [7, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "atomic_thread_f": [7, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490], "stdgpuatom": [8, 9, 10, 15, 16, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "cuh": [8, 9, 10, 14, 451, 456, 606, 915], "9670": [8, 9, 10, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 584, 585, 593, 594, 595, 596, 606, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 651, 652, 653, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 711, 717, 718, 719, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 745, 748, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 833, 834, 837, 838, 839, 840, 841, 842, 845, 846, 847, 848, 849, 850, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 878, 879, 880, 883, 886, 887, 888, 889, 890, 891, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907], "To": [11, 12, 491, 498, 915], "sizeof": [11, 12, 491, 498, 601], "is_trivially_copyable_v": [11, 12, 491, 498], "bit_cast": [11, 12, 491, 492, 493, 494, 495, 496, 497], "is_unsigned_v": [11, 12, 491, 492, 493, 494, 495, 496, 497], "bit_ceil": [11, 12, 491, 493, 494, 495, 496, 497, 498], "bit_floor": [11, 12, 491, 492, 494, 495, 496, 497, 498], "bit_mod": [11, 12, 491, 492, 493, 494, 495, 497, 498], "divid": [11, 12, 491, 496], "bit_width": [11, 12, 491, 492, 493, 494, 496, 497, 498], "has_single_bit": [11, 12, 491, 492, 493, 494, 495, 496, 498], "popcount": [11, 12, 491, 492, 493, 495, 496, 497, 498], "stdgpu_bit_h": 12, "type_trait": [12, 451, 455, 456, 458, 591, 603, 604, 881, 913], "31": [12, 446, 448, 458, 599, 601, 603, 608, 610, 613, 909, 913], "33namespac": [12, 913], "34": [12, 446, 448, 603, 610, 913], "35": [12, 443, 446, 455, 458, 599, 601, 603, 613, 913], "43stdgpu_host_devic": 12, "44has_single_bit": 12, "52templat": [12, 913], "53stdgpu_host_devic": 12, "54bit_ceil": 12, "55": [12, 448, 455, 458, 613, 913], "62templat": 12, "63stdgpu_host_devic": 12, "64bit_floor": 12, "65": [12, 448, 599, 601], "76templat": [12, 458], "77stdgpu_host_devic": 12, "78bit_mod": 12, "79": [12, 443, 446, 448, 455, 599, 601, 913], "88templat": 12, "89stdgpu_host_devic": 12, "90bit_width": 12, "91": [12, 446, 448, 455, 601, 610, 613], "101stdgpu_host_devic": 12, "102popcount": 12, "110templat": 12, "111": [12, 446, 601, 610, 613], "112": [12, 446, 610, 613], "113": [12, 446, 613], "114stdgpu_host_devic": 12, "115bit_cast": 12, "116": [12, 446, 458, 601, 613], "117": [12, 446, 458, 601, 613], "118": [12, 446, 458, 599, 610, 613], "119": [12, 458, 603, 610], "bit_detail": 12, "120": [12, 610], "bit_ceilstdgpu_host_devic": 12, "noexceptcomput": 12, "smallest": [12, 492, 495, 726, 736, 742, 751, 757, 766, 774, 785, 794, 798, 810, 813, 826, 831, 840, 847, 857, 863, 868], "larger": [12, 492], "bit_floorstdgpu_host_devic": 12, "largest": [12, 493, 724, 732, 743, 754, 760, 769, 778, 786, 791, 802, 807, 816, 824, 833, 839, 849, 854, 861, 871], "smaller": [12, 493], "popcountstdgpu_host_devic": 12, "noexceptcount": 12, "bit_widthstdgpu_host_devic": 12, "bit_modstdgpu_host_devic": 12, "modulu": [12, 20, 33, 61, 70, 496], "has_single_bitstdgpu_host_devic": 12, "noexceptdetermin": 12, "bit_caststdgpu_host_devic": 12, "noexceptreinterpret": 12, "block": [13, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 499, 558, 559, 576, 603, 605, 606, 618, 620, 627, 632, 637, 886, 890, 896, 897, 902, 907, 915], "bitset_default_typ": [13, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "stdgpubitset": [14, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "raquo": [15, 17, 82, 86, 88, 124, 168, 182, 190, 194, 208, 212, 230, 246, 262, 274, 334, 393, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900], "safe_device_alloc": [15, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 542, 558, 559, 602, 603, 885, 886, 887, 888, 890, 891], "tthe": [15, 17, 124, 168, 194, 230, 246, 274, 393, 460, 461, 462, 465, 466, 512, 514, 515, 517, 518, 519, 522, 524, 525, 526, 528, 530, 531, 536, 540, 543, 546, 547, 548, 549, 550, 554, 555, 556, 557, 561, 562, 567, 569, 570, 571, 572, 573, 574, 575, 579, 580, 584, 585, 593, 594, 596, 631, 635, 640, 645, 647, 651, 654, 711, 713, 717, 720, 874, 879, 881], "allocatorth": [15, 56, 74, 86, 110, 116, 124, 130, 140, 212, 222, 225, 274, 290, 291, 334, 371, 382, 393, 425, 432], "experiment": [15, 17, 915], "thread": [15, 212, 558, 915], "exact": [15, 212, 601], "manual": [15, 86, 124, 212, 230, 246, 274, 334, 393], "load": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 484, 490], "stricter": [15, 17, 473, 475], "integ": [15, 17, 601, 915], "increment": [15, 17, 33, 39, 47, 63, 65, 70, 580], "decrement": [15, 17, 20, 24, 34, 52, 61, 72], "modulo": [15, 17, 496], "allocator_typ": [15, 16, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 212, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639], "compare_exchange_strong": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81], "compare_exchange_weak": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "exchang": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 470, 474, 477, 487], "is_integral_v": [15, 17, 21, 24, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 42, 44, 47, 50, 51, 52, 58, 59, 62, 63, 64, 65, 66, 71, 72, 76, 77, 80, 81], "is_floating_point_v": [15, 17, 26, 27, 28, 30, 37, 42, 51, 59, 66, 71, 77, 81], "fetch_add": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "fetch_and": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "is_same_v": [15, 17, 20, 33, 61, 70], "fetch_dec_mod": [15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_inc_mod": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_max": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_min": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_or": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_sub": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "fetch_xor": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "get_alloc": [15, 16, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 212, 213, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441], "is_lock_fre": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "complet": [16, 18, 83, 87, 89, 125, 164, 169, 183, 191, 195, 209, 213, 215, 231, 247, 263, 275, 295, 335, 336, 394, 412, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 893, 901], "inherit": [16, 18, 83, 87, 89, 125, 169, 183, 191, 195, 209, 213, 215, 231, 247, 263, 275, 335, 394, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 893, 901], "typedefstdgpu": [16, 18, 83, 87, 125, 169, 191, 195, 209, 213, 231, 247, 263, 275, 335, 394, 616, 643, 650, 716, 877, 882, 885, 893, 901], "noexceptstdgpu": [16, 18, 87, 89, 125, 169, 195, 213, 263, 275, 335, 394, 616, 710, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 885, 893, 901], "conststdgpu": [16, 18, 87, 125, 169, 183, 195, 213, 215, 231, 247, 263, 275, 335, 394, 641, 648, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 714, 875], "stdgpuatomic_ref": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "copyassign": 17, "deletestdgpu": [18, 89, 215], "explicit": [18, 83, 84, 169, 173, 183, 186, 187, 191, 193, 195, 197, 209, 210, 263, 270, 599, 603, 613, 885, 893, 901], "argth": [20, 21, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 42, 44, 50, 51, 58, 59, 61, 62, 64, 66, 70, 71, 76, 77, 80, 81, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489], "argument": [20, 21, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 42, 44, 50, 51, 58, 59, 61, 62, 64, 66, 70, 71, 76, 77, 80, 81, 131, 158, 186, 187, 309, 354, 403, 469, 471, 472, 476, 478, 480, 482, 485, 488, 489, 547, 635], "orderth": [20, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 50, 51, 53, 59, 61, 62, 64, 68, 69, 70, 71, 73, 78, 81, 469, 471, 473, 475, 479, 480, 482, 487, 489, 490], "returnsth": [20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 76, 77, 79, 80, 81, 90, 91, 92, 93, 95, 96, 102, 103, 108, 112, 113, 117, 120, 122, 126, 128, 129, 133, 134, 142, 144, 145, 146, 147, 149, 152, 155, 157, 159, 167, 177, 207, 219, 221, 226, 228, 233, 237, 240, 254, 258, 260, 267, 277, 289, 292, 298, 303, 305, 308, 310, 320, 323, 325, 331, 341, 344, 345, 349, 350, 355, 358, 365, 366, 376, 385, 388, 399, 401, 402, 417, 419, 422, 423, 424, 428, 429, 430, 431, 433, 436, 439, 462, 463, 467, 469, 471, 472, 474, 476, 478, 480, 482, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 530, 538, 543, 544, 545, 546, 548, 549, 552, 553, 555, 556, 561, 565, 566, 570, 571, 574, 579, 593, 594, 596, 630, 645, 646, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 711, 717, 719, 879, 880], "old": [20, 27, 28, 30, 31, 32, 33, 34, 38, 41, 42, 43, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 69, 70, 71, 73, 78, 81, 86, 88, 90, 92, 95, 96, 102, 113, 469, 470, 471, 472, 474, 476, 477, 478, 480, 482, 485, 487, 488, 489, 915], "equival": [21, 24, 26, 34, 36, 37, 39, 44, 47, 52, 58, 63, 65, 66, 72, 76, 77, 80, 96, 214, 511], "explicitnoexcept": [22, 889, 899, 906], "obja": 22, "current": [24, 29, 34, 35, 39, 40, 41, 43, 45, 46, 47, 52, 53, 60, 63, 65, 68, 69, 72, 73, 78, 79, 134, 142, 156, 167, 233, 240, 254, 260, 419, 422, 426, 470, 474, 477, 479, 481, 484, 487, 490], "lock": [25, 49, 212, 214, 215, 217, 486, 577], "returnstru": [25, 41, 45, 49, 69, 78, 98, 104, 107, 115, 118, 119, 123, 131, 132, 138, 150, 158, 160, 163, 166, 178, 206, 216, 217, 220, 224, 229, 232, 238, 243, 245, 248, 252, 257, 259, 273, 281, 294, 307, 312, 314, 328, 338, 340, 346, 352, 353, 363, 403, 405, 406, 408, 416, 418, 470, 477, 486, 497, 651, 653], "fals": [25, 41, 45, 49, 69, 78, 96, 98, 104, 107, 115, 118, 119, 123, 131, 132, 134, 138, 142, 150, 158, 160, 163, 166, 178, 206, 216, 217, 220, 224, 229, 232, 238, 240, 243, 245, 248, 252, 257, 259, 260, 273, 281, 294, 300, 307, 309, 312, 314, 328, 338, 339, 340, 346, 352, 353, 354, 363, 403, 405, 406, 408, 416, 418, 422, 470, 477, 486, 497, 548, 556, 562, 567, 570, 572, 573, 574, 601, 651, 653], "otherwis": [25, 41, 45, 49, 69, 78, 98, 104, 107, 115, 118, 119, 123, 131, 132, 134, 138, 142, 150, 158, 160, 163, 166, 178, 206, 216, 217, 220, 224, 229, 232, 238, 240, 243, 245, 248, 252, 257, 259, 260, 273, 279, 281, 294, 297, 300, 304, 307, 309, 311, 312, 314, 328, 329, 338, 339, 340, 346, 352, 353, 354, 356, 360, 362, 363, 381, 391, 403, 405, 406, 408, 416, 418, 422, 460, 461, 466, 470, 477, 486, 497, 530, 538, 543, 544, 546, 548, 549, 553, 555, 556, 562, 567, 570, 572, 573, 574, 577, 651, 653, 915], "subtract": [26, 27, 59, 66, 478, 489], "replac": [29, 46, 53, 79, 479, 481], "desiredth": [29, 41, 43, 45, 46, 53, 69, 73, 78, 79, 470, 474, 477, 479, 481, 487], "noteequival": [29, 40], "xor": [32, 36, 50, 76, 469, 472], "expecteda": [41, 45, 69, 78, 470, 477], "updat": [41, 45, 69, 78, 470, 477, 915], "chang": [41, 45, 69, 78, 470, 477], "returnsa": [56, 74, 99, 110, 116, 130, 135, 140, 141, 143, 153, 184, 185, 188, 189, 222, 225, 241, 249, 276, 278, 280, 286, 290, 291, 293, 315, 321, 326, 343, 351, 371, 372, 378, 382, 386, 387, 389, 392, 395, 410, 415, 420, 425, 432, 434, 437, 438, 441, 461, 466, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 539, 540, 547, 618, 620, 626, 637, 890, 896, 902], "newli": [56, 74, 110, 116, 130, 140, 222, 225, 241, 249, 290, 291, 371, 382, 425, 432], "noteth": [56, 74, 473, 475, 530, 538, 548, 556, 562, 567, 570, 572, 573, 574], "implicitli": [56, 74], "singl": [56, 74], "device_objectth": [67, 75, 100, 101, 127, 136, 223, 227, 236, 253, 288, 333, 342, 370, 398, 404], "executionpolicyth": [74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 187, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 462, 463, 464, 465, 467, 552, 554, 560, 561, 564, 565, 579, 580, 632, 637], "policyth": [74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 187, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 462, 463, 464, 465, 467, 552, 554, 560, 561, 564, 565, 579, 580, 632, 637], "correspond": [74, 75, 98, 101, 104, 105, 111, 114, 116, 118, 122, 130, 135, 136, 153, 163, 164, 220, 222, 223, 280, 284, 286, 288, 290, 295, 316, 328, 336, 353, 370, 371, 372, 378, 383, 390, 396, 404, 408, 412, 425, 435, 444, 456, 632, 637, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708], "stdgpuback_insert_iter": [82, 83, 84, 85], "complement": [82, 168, 182, 190, 194, 208, 212, 262, 604, 615, 640, 642, 647, 649, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 712, 713, 715, 720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 874, 876, 881, 884, 892, 900, 915], "containerth": [82, 190, 208], "container_typ": [82, 83, 84, 190, 191, 193, 208, 209, 210, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 599], "back_insert_iter": [83, 85, 508, 521, 598, 599], "cthe": [84, 193, 210, 509, 510, 513, 516, 520, 521, 523, 527, 529, 532, 533, 534, 535, 537, 539], "blockth": [86, 212], "reset": [86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123], "flip": [86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "rather": [86, 88, 274, 334], "itself": [86, 88], "block_typ": [86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "index_t": [86, 87, 96, 99, 102, 108, 110, 112, 113, 116, 117, 120, 122, 124, 125, 130, 139, 140, 155, 159, 167, 212, 213, 219, 222, 225, 226, 228, 230, 231, 233, 237, 241, 246, 247, 249, 254, 258, 274, 275, 277, 287, 290, 291, 292, 303, 334, 335, 344, 349, 358, 364, 371, 382, 393, 394, 419, 425, 429, 432, 436, 440, 447, 448, 503, 583, 584, 585, 612, 613, 915], "count": [86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 494, 542, 543, 546, 548, 555, 556, 562, 567, 570, 572, 573, 574, 602, 603], "none": [86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123], "true": [86, 87, 113, 134, 142, 240, 260, 300, 309, 339, 354, 422, 601], "test": [86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 915], "defaultstdgpu": [87, 89, 125, 169, 195, 213, 231, 247, 263, 275, 335, 394, 885, 893, 901], "stdgpubitsetrefer": [88, 89, 90, 91, 92, 93, 94, 95], "referencedata": 88, "referencea": [88, 214], "x": [88, 89, 90, 94, 95, 915], "xa": 90, "invers": 93, "defaultnoexcept": [94, 887, 891, 894, 898, 903, 904], "xthe": [94, 95], "posit": [96, 99, 102, 108, 113, 117, 124, 128, 144, 145, 149, 208, 219, 228, 279, 297, 304, 329, 360, 362, 381, 391, 393, 394, 397, 399, 417, 423, 430, 435, 577, 580, 608], "nthe": [96, 99, 102, 108, 113, 117, 128, 144, 145, 149, 174, 180, 198, 203, 219, 228, 289, 350, 399, 417, 423, 430, 462, 463, 552, 558, 559, 561, 564, 618, 620, 627, 632, 637, 886, 890, 896, 897, 902, 907], "precondition0": [96, 99, 102, 108, 113, 117, 128, 144, 145, 149, 219, 228, 399, 417, 423, 430], "postconditioncount": [97, 111, 114, 121], "sizeth": [110, 116, 222, 225, 241, 249, 462, 463, 464, 552, 561, 564, 579], "valueth": [113, 300, 339, 462, 465, 554, 561, 580, 645, 646], "stdgpudequ": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "index_typ": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "instead": [124, 230, 246, 274, 334, 393, 615, 915], "size_typ": [124, 230, 246, 274, 334, 393, 615], "max_siz": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639], "capac": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 274, 275, 290, 291, 334, 335, 371, 382, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "No": [124, 212, 214, 230, 246, 274, 334, 393, 551, 615], "reach": [124, 230, 246, 274, 334, 393], "non": [124, 156, 230, 246, 274, 334, 393, 426], "full": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 915], "miss": [124, 230, 246, 274, 334, 393], "invalid": [124, 542, 568, 602, 603], "dure": [124, 558, 627, 632, 886, 897, 907], "concurr": 124, "pop_front": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "const_point": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 603, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "const_refer": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "ptrdiff_t": [124, 151, 274, 327, 334, 348, 393, 407, 447, 448, 503, 599, 603, 613], "back": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "device_indexed_rang": [124, 135, 141, 143, 153, 274, 278, 280, 286, 293, 334, 351, 372, 378, 389, 583, 584, 612, 613], "device_rang": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 181, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 583, 585, 612, 613], "emplace_back": [124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "emplace_front": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167], "front": [124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "pair": [124, 134, 142, 230, 240, 246, 260, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 339, 354, 393, 422, 592, 593, 594, 596, 912, 913, 915], "pop_back": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "shrink_to_fit": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "underli": [126, 147, 230, 246, 431, 439], "read": [128, 133, 144, 145, 146, 149, 152, 157, 399, 401, 402, 417, 423, 424, 428, 430], "capacityth": [130, 140, 290, 291, 371, 382, 425, 432], "argsth": [131, 158, 186, 187, 309, 354, 403, 547, 635], "elementan": [132, 138, 232, 248, 406], "pop": [134, 142, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 422], "preconditioncapac": [140, 291, 382, 432], "last": [152, 157, 401, 424, 462, 463, 465, 467, 542, 552, 554, 560, 561, 565, 580, 602, 603], "shrink": [156, 426], "notethi": [156, 426, 654], "bind": [156, 426], "effect": [156, 426, 915], "maxim": [159, 436], "stdgpudevice_rang": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "index64_t": [168, 169, 174, 177, 180, 194, 195, 198, 203, 207, 262, 267, 447, 448, 503, 508, 530, 538, 542, 543, 544, 546, 548, 549, 553, 555, 556, 558, 559, 562, 567, 570, 572, 573, 574, 598, 602, 603, 613, 615, 629, 884, 885, 886, 890, 892, 893, 896, 897, 900, 901, 902, 907], "p": [168, 169, 173, 174, 194, 195, 197, 203, 542, 545, 547, 558, 559, 569, 571, 602, 603, 613, 615, 616, 627, 631, 632, 635, 884, 885, 886, 892, 893, 897, 900, 901, 907, 915], "pa": [173, 174, 197, 203, 545, 547, 558, 559, 569, 571, 627, 631, 632, 635, 886, 897, 907], "returnsan": [175, 176, 199, 202, 271, 272, 279, 297, 300, 301, 304, 309, 319, 329, 339, 347, 354, 360, 361, 362, 381, 391, 510, 564], "beginan": [179, 180, 196, 198], "endan": [179, 196], "stdgpudevice_unique_object": [182, 183, 184, 185, 186, 187, 188, 189], "ta": [182, 593, 594, 596, 711, 884, 892, 900], "device_unique_object": [183, 184, 185, 188, 189, 542, 602, 603], "stdgpufront_insert_iter": [190, 191, 192, 193], "front_insert_iter": [191, 192, 508, 539, 598, 599], "stdgpuhost_rang": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "host_ptr": [194, 200, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599, 613], "host_rang": [195, 199, 200, 201, 202, 204, 205, 206, 207, 583, 584, 612, 613], "stdgpuinsert_iter": [208, 209, 210, 211], "insert_iter": [209, 211, 508, 510, 598, 599], "stdgpumutex_arrai": [212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "mutex_default_typ": [212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 605], "mutex_arrai": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 576, 605], "stdgpumutex_arrayrefer": [214, 215, 216, 217], "analogu": 214, "try_lock": [214, 215, 216, 576, 605], "unlock": [214, 215, 216, 217], "tri": 217, "th": [219, 228, 580, 608], "stdgpuqueu": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "containertth": [230, 246], "push": [230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "containert": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 582, 586, 611, 614], "stdgpustack": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "stdgputransform_rang": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "rthe": [262, 265, 270], "unaryfunctionth": [262, 464, 579], "transform_iter": [262, 264, 613], "transform_rang": [263, 264, 266, 267, 268, 269, 271, 272, 273, 583, 584, 585, 612, 613], "r": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 583, 612, 613, 915], "fthe": [265, 464, 579], "functor": [265, 274, 334], "stdgpuunordered_map": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "keyth": [274, 279, 294, 297, 304, 308, 310, 311, 314, 329, 331, 334, 338, 345, 346, 355, 356, 360, 362, 381, 388, 391, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708], "map": [274, 331, 388], "hashth": [274, 334], "keyequalth": [274, 334], "occupi": [274, 334], "entri": [274, 303, 334, 344, 543, 546, 555, 637], "eras": [274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "key_typ": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "const_iter": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "hasher": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "key_equ": [274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "mapped_typ": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "bucket": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392], "bucket_count": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "bucket_s": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "keylik": [274, 275, 279, 294, 304, 310, 334, 335, 346, 355, 362, 391], "is_transparent_v": [274, 279, 294, 304, 310, 334, 346, 355, 362, 391], "emplac": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "keyiter": [274, 275, 282, 316, 334, 335, 369, 383], "is_iterator_v": [274, 282, 284, 302, 316, 334, 367, 369, 383, 390, 393, 397, 435], "hash_funct": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "valueiter": [274, 275, 284, 302, 334, 335, 367, 390, 393, 394, 397, 435], "key_eq": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392], "load_factor": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "max_load_factor": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "keyequ": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 589, 590, 910, 911], "build": [278, 280, 351, 372], "determin": [279, 294, 297, 304, 314, 329, 338, 346, 360, 362, 381, 391, 497, 566, 603], "wa": [279, 294, 297, 300, 304, 309, 311, 314, 329, 338, 339, 346, 354, 356, 360, 362, 381, 391, 549, 577], "found": [279, 294, 297, 304, 314, 329, 338, 346, 360, 362, 381, 391, 915], "beginth": [282, 284, 302, 316, 367, 369, 383, 390, 396, 397, 413, 435, 462, 463, 465, 467, 552, 554, 561, 565, 580], "endth": [282, 284, 302, 316, 367, 369, 383, 390, 396, 397, 413, 435, 465, 467, 554, 565, 580], "per": [298, 305, 341, 376], "success": [300, 309, 339, 354, 577], "averag": [305, 376], "returns1": [311, 356], "got": [311, 356], "postconditionresult": [331, 388, 494, 495, 496], "stdgpuunordered_set": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "stdgpuvector": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "noteend": [396, 413], "positionth": [397, 435], "after": [397, 435], "noteposit": [397, 435], "stdgpu_device_compil": [442, 443, 446, 500], "stdgpu_device_compiler_cudaclang": [442, 443, 446, 500], "stdgpu_device_compiler_hipclang": [442, 443, 500], "stdgpu_device_compiler_nvcc": [442, 443, 500], "stdgpu_device_compiler_unknown": [442, 443, 500], "stdgpu_host_compil": [442, 443, 448, 500, 601], "stdgpu_host_compiler_clang": [442, 443, 448, 500], "stdgpu_host_compiler_gcc": [442, 443, 448, 500], "stdgpu_host_compiler_msvc": [442, 443, 448, 500, 601], "stdgpu_host_compiler_unknown": [442, 443, 500], "2020": 443, "stdgpu_compiler_h": 443, "28namespac": 443, "40": [443, 610, 909], "50": [443, 446, 455, 601, 608, 909], "51": [443, 455, 599, 601, 613, 909], "56": [443, 601], "20": [443, 450, 915], "61": [443, 455, 599, 613], "21": [443, 450, 915], "66": [443, 448, 599, 608, 610, 913], "22": [443, 915], "23": 443, "72": [443, 448, 599, 601], "78": [443, 446, 448, 458, 599, 601, 608, 610, 913], "__gnuc__": 443, "__clang__": 443, "80": [443, 446, 448, 455, 913], "elif": [443, 448], "81": [443, 446, 448, 599, 913], "82": [443, 446, 448, 913], "_msc_ver": 443, "els": [443, 446, 448, 601, 610], "86": [443, 446, 455, 458, 601], "87": [443, 446, 458, 603], "93": [443, 446, 448, 455], "__nvcc__": 443, "94": [443, 446, 448, 455, 458], "95": [443, 446, 448, 455, 599, 601], "__hip__": 443, "96": [443, 446, 448, 601], "97": [443, 446, 448, 610, 613], "__cuda__": 443, "99": [443, 446, 448, 603, 613], "100": [443, 446, 458, 601, 610], "104": [443, 446, 613], "105": [443, 446, 601, 610, 613], "serv": [444, 456, 618], "cmake": [444, 456, 915], "configur": [444, 456, 915], "stdgpu_enable_contract_check": [444, 446, 501, 915], "stdgpu_use_32_bit_index": [444, 448, 501, 915], "stdgpu_version_major": [444, 501], "stdgpu_version_minor": [444, 501], "stdgpu_version_patch": [444, 501], "stdgpu_version_str": [444, 501], "stdgpu_assert": [445, 446, 502], "stdgpu_ensur": [445, 446, 502], "stdgpu_expect": [445, 446, 502], "stdgpu_contract_h": 446, "cassert": 446, "cstdio": 446, "compil": [446, 448, 451, 456, 587, 601, 604, 610, 915], "config": [446, 448, 451, 456, 587, 603, 604, 610], "cstddef": [446, 451, 456, 458, 591, 599, 603, 604, 613, 915], "36": [446, 448, 455, 458, 599, 601, 603, 610, 613], "38": [446, 458, 610], "clang": [446, 610, 915], "merg": 446, "pars": 446, "termin": 446, "39": [446, 458, 610], "40namespac": 446, "41": [446, 610, 909], "42stdgpu_cuda_device_onli": 446, "43termin": 446, "44": [446, 455, 458, 599, 601, 603, 610, 613, 913], "dummi": 446, "46": [446, 603, 608, 613], "47": [446, 603, 608, 613], "48": [446, 448, 599, 603, 613, 909], "51namespac": 446, "52": [446, 455, 599, 909], "53": [446, 458, 599, 909], "stdgpu_detail_empty_stat": 446, "73": [446, 599, 603, 608], "74": [446, 599, 608], "75": [446, 599, 608, 613], "76": [446, 455, 599, 608, 613], "stdgpu_detail_host_check": 446, "__va_args__": 446, "printf": 446, "failur": 446, "": [446, 915], "d": 446, "__file__": 446, "__line__": 446, "static_cast": [446, 601], "stdgpu_func": [446, 447, 448, 503], "89": [446, 448, 603], "90": [446, 448, 601, 613], "stdgpu_detail_host_expect": 446, "precondit": [446, 460], "92": [446, 448, 455, 610, 613], "stdgpu_detail_host_ensur": 446, "postcondit": 446, "stdgpu_detail_host_assert": 446, "assert": [446, 530, 538], "stdgpu_detail_device_check": 446, "nolint": [446, 599, 610], "hicpp": 446, "decai": 446, "stdgpu_detail_device_expect": 446, "stdgpu_detail_device_ensur": 446, "stdgpu_detail_device_assert": 446, "stdgpu_cod": [446, 581, 609, 610], "stdgpu_code_devic": [446, 581, 609, 610], "107": 446, "108": [446, 610], "109": [446, 603], "110": [446, 458, 601, 610], "114": 446, "115": [446, 601, 613], "stdgpu_priindex": [447, 448, 503], "stdgpu_priindex32": [447, 448, 503], "stdgpu_priindex64": [447, 448, 503], "index32_t": [447, 448, 503], "int_least32_t": [447, 448, 503], "stdgpu_cstddef_h": 448, "cinttyp": 448, "cstdint": 448, "35namespac": 448, "37": [448, 603, 610], "42use": 448, "43": [448, 455, 458, 599, 603, 610, 613, 909, 913], "48use": 448, "49": [448, 601, 610, 613, 909], "56use": 448, "58use": 448, "59": [448, 610], "60": [448, 603, 610, 613], "pridleast32": 448, "td": 448, "__pretty_function__": 448, "__funcsig__": 448, "__func__": 448, "index64_tstd": [448, 599, 603, 613], "ptrdiff_tdefinit": [448, 599, 603, 613], "index32_tstd": 448, "int_least32_tdefinit": 448, "index_tindex64_t": 448, "index_tindex32_t": 448, "otherwisedefinit": 448, "58": [448, 599, 601], "stdgpu_device_h": 450, "19namespac": 450, "25void": 450, "26print_device_inform": 450, "27": [450, 455], "file": 451, "contract": [451, 456, 591, 604, 915], "numer": [451, 456, 579, 580, 591, 604], "util": [451, 456, 458, 591, 593, 594, 595, 596, 604, 915], "doxygen_src": 452, "docsdoxygen_src": 453, "variabl": [454, 506, 551], "is_execution_polici": [454, 455, 506], "device_polici": [454, 455, 506], "remove_const_t": [454, 455, 506], "decltyp": [454, 455, 458, 506, 508, 509, 513, 516, 520, 523, 527, 529, 532, 533, 534, 535, 537, 598, 599, 642, 643, 645, 649, 650, 651, 715, 716, 717, 876, 877, 879], "execution_polici": [454, 455, 506], "host_polici": [454, 455, 506], "2022": [455, 608], "stdgpu_execution_h": 455, "24": 455, "25": [455, 915], "26": 455, "34namespac": [455, 458, 599, 601, 613], "41templat": 455, "42struct": 455, "is_base_of": 455, "47templat": 455, "48inlin": 455, "53namespac": 455, "54": [455, 458, 599, 610, 613], "60templat": [455, 458], "61use": 455, "62": [455, 458, 599], "67use": 455, "68": [455, 458, 599, 608, 610, 613], "69static_assert": 455, "70": [455, 458, 601, 608, 610], "76use": 455, "78static_assert": 455, "85constexpr": 455, "91constexpr": 455, "execution_policythrust": 455, "execution_policyth": 455, "deriv": 455, "custom": [455, 915], "ones": 455, "host_policystd": 455, "host_policyth": 455, "deviceconstexpr": 455, "deviceth": 455, "hostconstexpr": 455, "hostth": 455, "device_policystd": 455, "device_policyth": 455, "67": [455, 599, 608, 610, 613], "is_execution_policytyp": 455, "inthi": 456, "stdgpu_functional_h": 458, "37namespac": 458, "40templat": 458, "41struct": 458, "hash_bas": 458, "51templat": 458, "52struct": 458, "is_enum_v": 458, "61struct": 458, "size_t": [458, 655, 657, 658, 660, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 687, 688, 690, 691, 693, 694, 696, 697, 699, 700, 702, 703, 705, 706, 708], "77struct": 458, "92templat": [458, 599], "93struct": 458, "108templat": 458, "109struct": 458, "124templat": [458, 613], "125struct": 458, "126": [458, 603, 610, 613], "132": [458, 610], "133": [458, 610], "134": [458, 610], "135": [458, 610], "141struct": 458, "148": 458, "149": [458, 613], "150": [458, 601, 613], "151": [458, 599, 601, 613], "156templat": 458, "157struct": 458, "158": [458, 601, 613], "165": [458, 601, 613], "166": [458, 601, 613], "172templat": 458, "173struct": 458, "174": [458, 613], "180": [458, 601, 613], "181": [458, 601, 613], "182": 458, "183": 458, "188templat": 458, "189struct": 458, "190": [458, 601], "196": [458, 601], "197": [458, 601, 613], "198": [458, 613], "199": [458, 613], "204templat": 458, "205struct": 458, "206": [458, 599], "212": [458, 613], "213": [458, 613], "214": [458, 613], "215": [458, 613], "220templat": 458, "221struct": 458, "222": [458, 613], "228": [458, 599, 603, 613], "229": [458, 613], "230": [458, 601], "231": [458, 601], "236templat": [458, 599], "237struct": 458, "238": [458, 601], "244": [458, 601, 603, 613], "245": [458, 601, 603], "246": [458, 601], "247": 458, "252templat": 458, "253struct": 458, "254": 458, "260": [458, 603], "261": [458, 599, 601, 603], "262": [458, 601, 603], "263": [458, 613], "268templat": 458, "269struct": 458, "270": [458, 613], "276": [458, 601, 613], "277": [458, 601, 613], "278": [458, 601, 613], "279": 458, "284templat": [458, 613], "285struct": 458, "286": [458, 613], "292": [458, 601, 603], "293": [458, 603], "294": [458, 599, 603, 613], "295": [458, 613], "300templat": 458, "301struct": 458, "302": 458, "308": [458, 603], "309": 458, "310": 458, "311": [458, 601], "316templat": 458, "317struct": 458, "318": [458, 601], "324": [458, 603], "325": [458, 601, 603], "326": [458, 601, 603], "327": [458, 599, 601], "332templat": 458, "333struct": 458, "334": [458, 603], "340": 458, "341": [458, 601], "342": [458, 601], "343": 458, "348struct": 458, "349": [458, 599, 603], "356": [458, 601], "357": [458, 601, 603], "358": [458, 601, 603], "359": 458, "360": [458, 599], "366templat": 458, "367struct": 458, "368": [458, 603], "375": 458, "376": 458, "lh": [458, 647, 648, 649, 650, 651, 653, 713, 714, 715, 716, 717, 719, 874, 875, 876, 877, 879, 880], "rh": [458, 647, 648, 649, 650, 651, 653, 713, 714, 715, 716, 717, 719, 874, 875, 876, 877, 879, 880], "377": [458, 601], "378": [458, 601, 603], "383templat": 458, "384struct": 458, "385": [458, 601, 603], "386": [458, 601, 603], "is_transpar": [458, 642, 643, 645, 649, 650, 651, 715, 716, 717, 876, 877, 879], "396": [458, 599], "u": [458, 603, 649, 650, 651, 715, 716, 717, 876, 877, 879, 884, 885, 889, 892, 893, 899, 900, 901, 906], "397": 458, "auto": [458, 508, 509, 513, 516, 520, 523, 527, 529, 532, 533, 534, 535, 537, 542, 545, 598, 602, 603, 642, 645, 649, 651, 715, 717, 876, 879], "398": [458, 601, 603], "forward": [458, 592, 594, 595, 599, 642, 643, 645, 649, 650, 651, 715, 716, 717, 876, 877, 879, 912, 913], "399": [458, 599, 601, 603], "400": [458, 601], "406templat": 458, "407struct": 458, "408": 458, "415": [458, 599], "416": [458, 601], "417": [458, 599, 601], "418": 458, "423templat": 458, "424struct": 458, "425": 458, "426": [458, 601], "436": [458, 599, 601], "437": [458, 599, 601, 603], "438": [458, 599, 601, 603], "439": 458, "440": 458, "446templat": 458, "447struct": 458, "448": [458, 599, 603], "455": 458, "456": [458, 599], "457": [458, 601], "458": [458, 599, 601], "463templat": 458, "464struct": 458, "465": [458, 599, 601], "466": [458, 601, 603], "476": [458, 599], "477": [458, 599], "478": [458, 599, 601, 603], "479": [458, 599, 601, 603], "480": [458, 601, 603], "486templat": [458, 599], "487struct": 458, "488": [458, 603], "494": [458, 603], "495": [458, 603], "496": [458, 603], "497": [458, 603], "502templat": 458, "503struct": 458, "504": 458, "505": [458, 599, 603], "513": [458, 601], "514": [458, 599], "515": [458, 599], "516": [458, 599, 603], "517": [458, 601, 603], "518": [458, 599, 601], "519": [458, 599], "520": [458, 599], "functional_detail": 458, "521": [458, 599, 603], "522": [458, 599, 601, 603], "is_transparentvoid": 458, "is_transparentdefinit": 458, "constcomput": 458, "bit_nota": 458, "each": [458, 651, 653], "constcompar": 458, "equal_toa": 458, "hasha": 458, "noexceptreturn": [458, 603], "identitya": 458, "constperform": 458, "logical_anda": 458, "constadd": 458, "plusa": 458, "algorithmcompl": 459, "va": 460, "lowerth": 460, "upperth": 460, "returnslow": 460, "aa": [461, 466], "banoth": [461, 466], "iteratorth": [462, 465, 554, 560, 561, 564, 580], "written": [462, 465, 554, 561], "inputitth": [463, 467, 552, 565], "outputitth": [463, 467, 552, 565], "output_beginth": [463, 467, 552, 565], "indextypeth": [464, 579], "indic": [464, 579], "past": [465, 467, 554, 565, 580], "atomicdata": 468, "objth": [469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490], "synchron": [473, 475], "fenc": [473, 475], "enforc": [473, 475], "enumeratormemory_order_relax": 483, "bitcompl": 491, "numbera": [492, 493, 494, 495, 496, 497], "numeric_limit": [494, 495, 541, 600, 601, 721, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "digit": [494, 495, 601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "dividerth": 496, "preconditionhas_single_bit": 496, "reinterpret": 498, "objectan": 498, "bitsetdata": 499, "compilerplatform": 500, "configplatform": 501, "contractcompl": 502, "cstddefcompl": 503, "modul": [504, 587, 591], "dequedata": 505, "executioncompl": 506, "functionalcompl": 507, "iteratorcompl": 508, "device_system_tag": [508, 511, 598, 599, 613], "host_system_tag": [508, 598, 599, 613], "back_insert": [508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599], "device_contain": [508, 513, 520, 523, 527, 532, 534, 598, 599], "front_insert": [508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 598, 599], "host_begin": [508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 538, 539, 540, 598, 599], "host_contain": [508, 509, 516, 529, 533, 535, 537, 598, 599], "host_arrai": [508, 512, 514, 515, 519, 528, 531, 536, 542, 548, 550, 556, 598, 599, 602, 603], "host_cbegin": [508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599], "host_cend": [508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 598, 599], "host_end": [508, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 540, 598, 599], "make_devic": [508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599, 915], "make_host": [508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 598, 599], "host_containeran": [509, 516, 529, 533, 535, 537], "respect": [511, 599, 613], "noteconsid": 511, "plain": 511, "constant": [512, 515, 516, 517, 518, 519, 523, 526, 527, 531, 532, 533, 534, 535, 537, 540, 599], "host_arrayan": [512, 514, 515, 519, 528, 531, 536], "device_containeran": [513, 520, 523, 527, 532, 534], "contant": [516, 523, 527, 532, 533, 534, 535, 537], "device_arrayan": [517, 518, 522, 524, 525, 526, 540], "arrayan": [530, 538, 549, 566], "trigger": [530, 538], "unknown": 538, "byte": [538, 549, 558, 559, 603], "limitscompl": 541, "memorycompl": 542, "allocator_trait": [542, 602, 603, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "safe_host_alloc": [542, 558, 559, 602, 603, 893, 894, 895, 896, 897, 898], "safe_managed_alloc": [542, 558, 559, 602, 603, 901, 902, 903, 904, 905, 907], "dynamic_memory_typ": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 602, 603, 884, 892, 900], "range_check": [542, 548, 551, 556, 562, 567, 570, 572, 573, 574, 602, 603], "construct_at": [542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "copycreatedevice2devicearrai": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 602, 603], "check_safeti": [542, 548, 556, 562, 567, 570, 572, 573, 574, 602, 603], "copycreatedevice2hostarrai": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 602, 603], "copycreatehost2hostarrai": [542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "copydevice2devicearrai": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "source_device_arrai": [542, 567, 573, 602, 603], "destination_device_arrai": [542, 567, 572, 602, 603], "destination_host_arrai": [542, 562, 573, 602, 603], "source_host_arrai": [542, 562, 572, 602, 603], "copyhost2hostarrai": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "default_valu": [542, 543, 546, 555, 602, 603, 615, 616, 637], "createmanagedarrai": [542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "initialize_on": [542, 543, 602, 603], "deregister_memori": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "memory_typ": [542, 544, 553, 558, 559, 602, 603, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907], "destroy_at": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 602, 603], "destroy_n": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "destroymanagedarrai": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "managed_arrai": [542, 557, 602, 603], "get_allocation_count": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "get_deallocation_count": [542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "get_dynamic_memory_typ": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "register_memori": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "size_byt": [542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "ptr": [542, 545, 602, 603], "has_arrow_operator_v": [542, 545, 602, 603], "to_address": [542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 602, 603], "uninitialized_copi": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "uninitialized_copy_n": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "uninitialized_fil": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "uninitialized_fill_n": [542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 602, 603], "countth": [543, 546, 548, 555, 556, 562, 567, 570, 572, 573, 574], "default_valuea": [543, 546, 555, 637], "everi": [543, 546, 555, 637, 915], "initialize_onth": 543, "postconditionget_dynamic_memory_typ": [543, 546, 555], "total": [544, 553, 603], "regist": [544, 549, 553, 559, 568, 603], "dealloc": [544, 603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906], "memory_typea": [544, 553], "convert": [545, 571], "potenti": [545, 571, 595, 603, 913], "fanci": [545, 571, 603], "ptrthe": 545, "held": 545, "via": [545, 568, 915], "host_arrayth": [548, 556], "check_safetytru": [548, 556, 562, 567, 570, 572, 573, 574], "our": [549, 551, 568], "host_arraya": 550, "enumeratorno_check": 551, "3rd": 551, "parti": 551, "local": 551, "fit": 551, "insid": 551, "target": 551, "managed_arraya": 557, "deregist": [558, 603], "manger": [558, 559, 603], "registr": 558, "memory_typeth": [558, 559], "noteautomat": [558, 559], "befor": [558, 579, 915], "actual": 558, "firstan": [560, 564], "lastan": 560, "source_host_arrayth": [562, 572], "destination_host_arrayth": [562, 573], "destin": [562, 567, 572, 573], "place": [563, 603], "enumeratorhost": [563, 568], "source_device_arrayth": [567, 573], "destination_device_arrayth": [567, 572], "driver": 568, "page": [568, 915], "device_arrayth": [570, 574], "device_arraya": 575, "mutexcompl": 576, "lockable1": [576, 577, 605], "lockable2": [576, 577, 605], "lockablen": [576, 577, 605], "lock1": [576, 577, 605], "lock2": [576, 577, 605], "lockn": [576, 577, 605], "tryi": 577, "lock1th": 577, "lock2th": 577, "second": [577, 595, 651, 653, 717, 719, 879, 880], "locknth": 577, "remain": 577, "numericcompl": 578, "iota": [578, 579, 607, 608], "binaryfunct": [578, 579, 607, 608], "transform_reduce_index": [578, 580, 607, 608], "init": [578, 579, 607, 608], "reduct": [579, 608], "binaryfunctionth": 579, "binari": 579, "initth": 579, "particip": 579, "reduceth": 579, "along": 579, "ascend": [580, 608], "start": 580, "platformplatform": 581, "stdgpu_backend": [581, 609, 610, 915], "stdgpu_backend_cuda": [581, 609, 610, 915], "stdgpu_backend_hip": [581, 609, 610], "stdgpu_backend_openmp": [581, 609, 610], "stdgpu_code_host": [581, 609, 610], "stdgpu_const": [581, 609, 610], "queuedata": 582, "rangescompl": 583, "select": [583, 584, 585, 612, 613, 915], "host_indexed_rang": [583, 585, 612, 613], "stackdata": 586, "type_traitscompl": 588, "remove_cvref": [588, 882, 883, 908, 909], "unordered_mapdata": 589, "unordered_setdata": 590, "utilitycompl": 592, "t1": [592, 595, 912, 913], "t2": [592, 595, 912, 913], "remove_reference_t": [592, 593, 594, 596, 881, 883, 909, 912, 913], "constexprnoexcept": [593, 594, 596], "t1the": 595, "t2the": 595, "vectordata": 597, "stdgpu_iterator_h": 599, "declar": 599, "43use": [599, 913], "50templat": 599, "51use": 599, "56namespac": 599, "cert": 599, "dcl58": 599, "cpp": 599, "59templat": 599, "60struct": 599, "iterator_trait": 599, "63": [599, 601], "64": [599, 601, 915], "iterator_categori": 599, "69templat": 599, "70struct": 599, "82namespac": 599, "93stdgpu_host_devic": 599, "94make_devic": 599, "103templat": 599, "104stdgpu_host_devic": 599, "105make_host": 599, "115templat": 599, "116index64_t": 599, "117size": 599, "126templat": 599, "127index64_t": 599, "128size": 599, "129": [599, 601, 603, 610, 613], "137templat": 599, "138host_ptr": 599, "139host_begin": 599, "140": 599, "148templat": 599, "149host_ptr": 599, "150host_end": 599, "159templat": 599, "160device_ptr": 599, "161device_begin": 599, "170templat": 599, "171device_ptr": 599, "172device_end": 599, "173": [599, 613], "181templat": 599, "182host_ptr": 599, "183host_begin": 599, "184": 599, "192templat": 599, "193host_ptr": 599, "194host_end": 599, "195": [599, 601, 613], "203templat": 599, "204device_ptr": 599, "205device_begin": 599, "214templat": 599, "215device_ptr": 599, "216device_end": 599, "217": [599, 601], "225templat": 599, "226host_ptr": 599, "227host_cbegin": 599, "237host_ptr": 599, "238host_cend": 599, "239": [599, 601], "247templat": 599, "248device_ptr": 599, "249device_cbegin": 599, "250": [599, 601, 613], "258templat": 599, "259device_ptr": 599, "260device_cend": 599, "269templat": 599, "270auto": 599, "271host_begin": 599, "272": [599, 601, 613], "280templat": 599, "281auto": 599, "282host_end": 599, "283": 599, "291templat": 599, "292auto": 599, "293device_begin": 599, "302templat": 599, "303auto": 599, "304device_end": 599, "305": [599, 601], "313templat": 599, "314auto": 599, "315host_begin": 599, "316": 599, "324templat": 599, "325auto": 599, "326host_end": 599, "335templat": 599, "336auto": 599, "337device_begin": 599, "338": [599, 603], "346templat": [599, 603], "347auto": 599, "348device_end": 599, "357templat": 599, "358auto": 599, "359host_cbegin": 599, "368templat": 599, "369auto": 599, "370host_cend": 599, "371": [599, 601], "379templat": 599, "380auto": 599, "381device_cbegin": 599, "382": 599, "390templat": 599, "391auto": 599, "392device_cend": 599, "393": [599, 601, 603], "394namespac": 599, "395": 599, "397templat": 599, "398struct": 599, "back_insert_iterator_bas": 599, "400templat": 599, "401struct": 599, "front_insert_iterator_bas": 599, "402": 599, "403templat": 599, "404struct": 599, "insert_iterator_bas": 599, "405": [599, 601, 603], "406": [599, 601, 603], "407": [599, 601], "413templat": 599, "414class": 599, "416public": 599, "420": [599, 603], "super_t": 599, "421": [599, 601, 603], "422": [599, 601, 603], "friend": 599, "iterator_core_access": 599, "424": 599, "429": 599, "430": 599, "431": [599, 601, 603], "432privat": 599, "433": 599, "434": 599, "derefer": 599, "435": 599, "_c": 599, "445templat": 599, "446stdgpu_host_devic": 599, "447back_insert": 599, "454templat": 599, "455class": 599, "457public": 599, "461": [599, 603], "462": 599, "463": 599, "470": 599, "471": [599, 601], "472": [599, 601, 603], "473privat": 599, "474": 599, "475": 599, "487stdgpu_host_devic": 599, "488front_insert": 599, "489": 599, "498templat": 599, "499class": 599, "500": [599, 601], "501public": 599, "502": [599, 601], "506": [599, 603], "507": [599, 601], "509": 599, "517privat": 599, "523": [599, 601], "530templat": 599, "531stdgpu_host_devic": 599, "532insert": 599, "533": [599, 603], "534": [599, 603], "535": [599, 603], "536": [599, 601], "iterator_detail": 599, "537": [599, 601], "538": [599, 601], "back_insert_iteratorstdgpu_host_devic": 599, "container_typecontain": 599, "container_typedefinit": 599, "back_insert_iteratoran": 599, "front_insert_iteratorstdgpu_host_devic": 599, "front_insert_iteratoran": 599, "insert_iteratorstdgpu_host_devic": 599, "insert_iteratoran": 599, "inserterstdgpu_host_devic": 599, "device_ptrthrust": [599, 613], "device_ptra": [599, 613], "execu": [599, 613], "host_cendhost_ptr": 599, "host_beginhost_ptr": 599, "device_cbegindevice_ptr": 599, "device_cenddevice_ptr": 599, "host_cbeginhost_ptr": 599, "back_inserterstdgpu_host_devic": 599, "device_begindevice_ptr": 599, "make_devicestdgpu_host_devic": 599, "device_enddevice_ptr": 599, "make_hoststdgpu_host_devic": 599, "host_endhost_ptr": 599, "front_inserterstdgpu_host_devic": 599, "host_ptrthrust": [599, 613], "host_ptra": [599, 613], "stdgpu_limits_h": 601, "cfloat": 601, "climit": 601, "43struct": 601, "lowest": [601, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 870, 871, 872, 873], "epsilon": [601, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872], "round_error": [601, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 873], "infin": [601, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 871, 872, 873], "is_speci": [601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "is_sign": [601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "is_integ": [601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "is_exact": [601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "radix": [601, 720, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "122templat": 601, "123struct": 601, "130": [601, 603, 613], "131": [601, 610, 613], "136": [601, 610, 613], "137": [601, 613], "138": 601, "144": [601, 603], "145": [601, 603], "152": 601, "157": [601, 613], "159": [601, 613], "175": 601, "176": [601, 603], "185": 601, "186": [601, 613], "191": 601, "202templat": 601, "203struct": 601, "204": 601, "209": [601, 603, 613], "210": [601, 603], "211": [601, 603, 613], "216": [601, 613], "218": 601, "223": 601, "224": 601, "225": [601, 603], "232": 601, "237": [601, 613], "251": [601, 613], "256": [601, 613], "257": [601, 613], "266": 601, "267": [601, 613], "271": 601, "char_bit": 601, "283templat": 601, "284struct": 601, "285": 601, "290": [601, 603], "291": [601, 603], "297": [601, 613], "298": [601, 613], "299": [601, 603, 613], "304": 601, "306": [601, 603], "312": 601, "313": [601, 603], "319": 601, "320": [601, 603], "331": 601, "332": [601, 603], "336": 601, "337": [601, 603], "346": 601, "347": 601, "351": 601, "352": 601, "363templat": 601, "364struct": 601, "365": 601, "370": 601, "372": 601, "379": [601, 603], "384": 601, "391": 601, "392": [601, 603], "411": 601, "412": [601, 603], "427": 601, "432": [601, 603], "443templat": 601, "444struct": 601, "445": 601, "450": 601, "451": 601, "452": [601, 603], "459": [601, 603], "464": 601, "473": [601, 603], "485": 601, "486": [601, 603], "487": [601, 603], "491": 601, "492": 601, "498": 601, "499": 601, "501": 601, "503": 601, "508": 601, "512": [601, 603], "524": 601, "529templat": 601, "530struct": 601, "531": 601, "543": 601, "544": 601, "545": 601, "550": 601, "551": 601, "552": [601, 603], "557": 601, "558": 601, "559": 601, "564": 601, "565": 601, "566": 601, "571": [601, 603], "572": 601, "573": 601, "577": 601, "578": 601, "582": [601, 603], "583": [601, 603], "587": [601, 603], "588": [601, 603], "592": [601, 603], "593": [601, 603], "597": [601, 603], "598": [601, 603], "602": [601, 603], "603": [601, 603], "604": [601, 603], "609templat": 601, "610struct": 601, "611": 601, "616": 601, "617": 601, "618": 601, "623": [601, 603], "624": [601, 603], "625": 601, "630": 601, "631": [601, 603], "632": [601, 603], "637": 601, "638": 601, "639": 601, "644": [601, 603], "645": [601, 603], "646": [601, 603], "651": 601, "652": 601, "653": 601, "657": [601, 603], "658": [601, 603], "662": 601, "663": 601, "667": 601, "668": 601, "672": [601, 603], "673": 601, "677": 601, "678": 601, "682": [601, 603], "683": 601, "684": 601, "689templat": 601, "690struct": 601, "691": 601, "696": [601, 603], "697": [601, 603], "698": [601, 603], "703": 601, "704": 601, "705": 601, "710": [601, 603], "711": 601, "712": 601, "717": 601, "718": 601, "719": 601, "724": 601, "725": 601, "726": 601, "731": 601, "732": 601, "733": 601, "737": 601, "738": 601, "742": 601, "743": 601, "747": 601, "748": 601, "752": 601, "753": 601, "757": 601, "758": 601, "762": 601, "763": [601, 603], "764": [601, 603], "769templat": 601, "770struct": 601, "771": 601, "776": 601, "777": 601, "778": 601, "783": [601, 603], "784": [601, 603], "785": [601, 603], "790": 601, "791": 601, "792": 601, "797": 601, "798": 601, "799": 601, "804": [601, 603], "805": [601, 603], "806": 601, "811": 601, "812": 601, "813": 601, "817": 601, "818": 601, "822": 601, "823": [601, 603], "827": 601, "828": 601, "832": 601, "833": 601, "837": 601, "838": 601, "842": 601, "843": 601, "844": [601, 603], "849templat": 601, "850struct": 601, "851": 601, "856": 601, "857": [601, 603], "858": [601, 603], "863": 601, "864": 601, "865": 601, "870": 601, "871": 601, "872": 601, "877": 601, "878": 601, "879": 601, "884": 601, "885": 601, "886": 601, "891": 601, "892": 601, "893": 601, "897": 601, "898": 601, "902": 601, "903": 601, "907": 601, "908": 601, "912": 601, "913": 601, "917": [601, 603], "918": [601, 603], "922": 601, "923": 601, "924": 601, "929templat": 601, "930struct": 601, "931": 601, "936": 601, "937": 601, "938": 601, "943": 601, "944": 601, "945": 601, "950": 601, "951": 601, "952": 601, "957": 601, "958": 601, "959": 601, "964": 601, "965": 601, "966": 601, "971": 601, "972": 601, "973": 601, "977": 601, "978": 601, "982": 601, "983": 601, "987": 601, "988": 601, "992": 601, "993": 601, "997": 601, "998": 601, "1002": 601, "1003": 601, "1004": 601, "1009templat": 601, "1010struct": 601, "1011": 601, "1016": 601, "1017": 601, "1018": 601, "1023": 601, "1024": 601, "1025": 601, "1030": 601, "1031": 601, "1032": 601, "1037": 601, "1038": 601, "1039": 601, "1044": 601, "1045": 601, "1046": 601, "1051": 601, "1052": 601, "1053": 601, "1057": 601, "1058": 601, "1062": 601, "1063": 601, "1067": 601, "1068": 601, "1072": 601, "1073": 601, "1077": 601, "1078": 601, "1082": 601, "1083": 601, "1084": 601, "1089templat": 601, "1090struct": 601, "1091": 601, "1096": 601, "1097": 601, "1098": 601, "1103": 601, "1104": 601, "1105": 601, "1110": 601, "1111": 601, "1112": 601, "1117": 601, "1118": 601, "1119": 601, "1124": 601, "1125": 601, "1126": 601, "1131": 601, "1132": 601, "1133": 601, "1137": 601, "1138": 601, "1142": 601, "1143": 601, "1147": 601, "1148": 601, "1152": 601, "1153": 601, "1157": 601, "1158": 601, "1162": 601, "1163": 601, "1164": 601, "1169templat": 601, "1170struct": 601, "1171": 601, "1176": 601, "1177": 601, "1178": 601, "1183": 601, "1184": 601, "1185": 601, "1190": 601, "1191": 601, "1192": 601, "1197": 601, "1198": 601, "1199": 601, "1204": 601, "1205": 601, "1206": 601, "1211": 601, "1212": 601, "1213": 601, "1217": 601, "1218": 601, "1222": 601, "1223": 601, "1227": 601, "1228": 601, "1232": 601, "1233": 601, "1237": 601, "1238": 601, "1242": 601, "1243": 601, "1244": 601, "1249templat": 601, "1250struct": 601, "1251": 601, "1256": 601, "1257": 601, "1258": 601, "1263": 601, "1264": 601, "1265": 601, "1270": 601, "1271": 601, "1272": 601, "1277": 601, "1278": 601, "1279": 601, "1284": 601, "1285": 601, "1286": 601, "1291": 601, "1292": 601, "1293": 601, "1297": 601, "1298": 601, "1302": 601, "1303": 601, "1307": 601, "1308": 601, "1312": 601, "1313": 601, "1317": 601, "1318": 601, "1322": 601, "1323": 601, "1324": 601, "1329templat": 601, "1330struct": 601, "1331": 601, "1336": 601, "1337": 601, "1338": 601, "1343": 601, "1344": 601, "1345": 601, "1350": 601, "1351": 601, "1352": 601, "1357": 601, "1358": 601, "1359": 601, "1364": 601, "1365": 601, "1366": 601, "1371": 601, "1372": 601, "1373": 601, "1377": 601, "1378": 601, "1382": 601, "1383": 601, "1387": 601, "1388": 601, "1392": 601, "1393": 601, "1397": 601, "flt_mant_dig": 601, "1398": 601, "1402": 601, "flt_radix": 601, "1403": 601, "1404": 601, "1409templat": 601, "1410struct": 601, "1411": 601, "1416": 601, "1417": 601, "1418": 601, "1423": 601, "1424": 601, "1425": 601, "1430": 601, "1431": 601, "1432": 601, "1437": 601, "1438": 601, "1439": 601, "1444": 601, "1445": 601, "1446": 601, "1451": 601, "1452": 601, "1453": 601, "1457": 601, "1458": 601, "1462": 601, "1463": 601, "1467": 601, "1468": 601, "1472": 601, "1473": 601, "1477": 601, "dbl_mant_dig": 601, "1478": 601, "1482": 601, "1483": 601, "1484": 601, "1489templat": 601, "1490struct": 601, "1491": 601, "1496": 601, "1497": 601, "1498": 601, "1503": 601, "1504": 601, "1505": 601, "1510": 601, "1511": 601, "1512": 601, "1517": 601, "1518": 601, "1519": 601, "1524": 601, "1525": 601, "1526": 601, "1531": 601, "1532": 601, "1533": 601, "1537": 601, "1538": 601, "1542": 601, "1543": 601, "1547": 601, "1548": 601, "1552": 601, "1553": 601, "1557": 601, "ldbl_mant_dig": 601, "1558": 601, "1562": 601, "1563": 601, "1564": 601, "1565": 601, "1566": 601, "1567": 601, "limits_detail": 601, "1568": 601, "1569": 601, "minstat": 601, "noexceptsmallest": 601, "represent": [601, 724, 726, 729, 732, 735, 736, 740, 742, 743, 750, 751, 754, 757, 759, 760, 766, 768, 769, 774, 775, 778, 781, 785, 786, 791, 792, 794, 798, 799, 802, 807, 809, 810, 813, 816, 817, 821, 824, 826, 829, 831, 833, 839, 840, 841, 847, 848, 849, 854, 855, 857, 861, 863, 864, 868, 869, 871], "finit": [601, 724, 726, 729, 732, 735, 736, 740, 742, 743, 750, 751, 754, 757, 759, 760, 766, 768, 769, 774, 775, 778, 781, 785, 786, 791, 792, 794, 798, 799, 802, 807, 809, 810, 813, 816, 817, 821, 824, 826, 829, 831, 833, 839, 840, 841, 847, 848, 849, 854, 855, 857, 861, 863, 864, 868, 869, 871], "loweststat": 601, "noexceptlowest": 601, "infinitystat": 601, "noexceptinfin": 601, "maxstat": 601, "noexceptlargest": 601, "round_errorstat": 601, "noexceptmaximum": 601, "round": [601, 725, 733, 741, 748, 758, 765, 777, 783, 789, 797, 806, 815, 825, 832, 842, 846, 858, 865, 872], "epsilonstat": 601, "noexceptmachin": 601, "numeric_limitsgener": 601, "digitsstat": 601, "digitsnumb": 601, "radixstat": 601, "radixinteg": 601, "is_exactstat": 601, "is_exactwheth": 601, "is_specializedstat": 601, "is_specializedwheth": 601, "is_integerstat": 601, "is_integerwheth": 601, "is_signedstat": 601, "is_signedwheth": 601, "stdgpu_memory_h": 603, "42enum": 603, "57templat": 603, "58t": 603, "59createdevicearrai": 603, "70templat": 603, "71t": [603, 608], "72createhostarrai": 603, "84templat": 603, "85t": 603, "86createmanagedarrai": 603, "96templat": 603, "97void": 603, "98destroydevicearrai": 603, "106templat": 603, "107void": 603, "108destroyhostarrai": 603, "116templat": 603, "117void": 603, "118destroymanagedarrai": 603, "124enum": 603, "125": [603, 610], "128": [603, 610, 613], "141templat": 603, "142t": 603, "143copycreatedevice2hostarrai": 603, "157templat": 603, "158t": 603, "159copycreatehost2devicearrai": 603, "173templat": 603, "174t": 603, "175copycreatehost2hostarrai": 603, "177": 603, "178": 603, "189templat": 603, "190t": 603, "191copycreatedevice2devicearrai": 603, "192": 603, "193": [603, 613], "194": [603, 613], "205templat": 603, "206void": 603, "207copydevice2hostarrai": 603, "208": 603, "222templat": 603, "223void": 603, "224copyhost2devicearrai": 603, "226": 603, "227": [603, 613], "239templat": 603, "240void": 603, "241copyhost2hostarrai": 603, "242": [603, 613], "243": [603, 613], "256templat": 603, "257void": 603, "258copydevice2devicearrai": 603, "259": 603, "263namespac": 603, "264": [603, 613], "265": [603, 613], "271templat": 603, "272class": 603, "273": [603, 613], "274public": 603, "280": 603, "281": 603, "282": 603, "300": 603, "301": 603, "307": 603, "314": 603, "315": 603, "321": 603, "322": 603, "323privat": 603, "unique_ptr": 603, "_object": 603, "331enum": 603, "333": 603, "335": 603, "339": 603, "347dynamic_memory_typ": 603, "348get_dynamic_memory_typ": 603, "355templat": 603, "356struct": 603, "363": 603, "364": 603, "369": 603, "373": 603, "374": 603, "387": 603, "394": 603, "404": 603, "nodiscard": [603, 613], "413": 603, "414": 603, "423": 603, "429templat": 603, "430struct": 603, "442": 603, "443": 603, "447": 603, "453": 603, "460": 603, "467": 603, "468": 603, "503templat": 603, "504struct": 603, "511": 603, "526": 603, "527": 603, "540": 603, "541": 603, "542": 603, "546": 603, "547": 603, "553": 603, "554": 603, "560": 603, "561": 603, "562": 603, "568": 603, "569": 603, "570": 603, "580templat": 603, "581struct": 603, "584": 603, "585": 603, "586": 603, "pointer_trait": [603, 615, 622, 625, 638, 639], "rebind": [603, 615, 622, 625, 639], "void_point": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638], "589": 603, "590": 603, "const_void_point": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "591": 603, "595": 603, "596": 603, "propagate_on_container_copy_assign": [603, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "false_typ": [603, 615, 619, 633, 634], "propagate_on_container_move_assign": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639], "propagate_on_container_swap": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639], "599": 603, "is_always_equ": [603, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "is_empti": [603, 615, 621], "600": 603, "601": 603, "rebind_alloc": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "rebind_trait": [603, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "612": 603, "613": 603, "614": 603, "622": 603, "hint": [603, 615, 616, 618], "633": 603, "643": 603, "allocate_fil": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639], "647": 603, "656": 603, "659": 603, "deallocate_fil": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639], "660": 603, "669": 603, "670": 603, "671": 603, "679": 603, "680": 603, "681": 603, "688": 603, "689": 603, "690": 603, "select_on_container_copy_construct": [603, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "699": 603, "707templat": 603, "708stdgpu_host_devic": 603, "709to_address": 603, "718templat": 603, "719stdgpu_host_devic": 603, "720to_address": 603, "721": 603, "723templat": 603, "has_get_v": 603, "724stdgpu_host_devic": 603, "725to_address": 603, "727": 603, "737templat": 603, "738stdgpu_host_devic": 603, "739construct_at": 603, "740": 603, "747templat": 603, "748stdgpu_host_devic": 603, "749destroy_at": 603, "750": 603, "762templat": 603, "765": 603, "766void": 603, "767uninitialized_fil": 603, "768": 603, "782templat": 603, "786": 603, "787iter": 603, "788uninitialized_fill_n": 603, "789": 603, "802templat": 603, "803": 603, "806outputit": 603, "807uninitialized_copi": 603, "808": 603, "822templat": 603, "824": 603, "825": 603, "826": 603, "827outputit": 603, "828uninitialized_copy_n": 603, "829": 603, "839templat": 603, "840": 603, "841": 603, "842void": 603, "843destroi": 603, "856templat": 603, "859": 603, "860iter": 603, "861destroy_n": 603, "862": 603, "871templat": 603, "872void": 603, "873register_memori": 603, "874": 603, "884templat": 603, "885void": 603, "886deregister_memori": 603, "887": 603, "894index64_t": 603, "895get_allocation_count": 603, "896": 603, "903index64_t": 603, "904get_deallocation_count": 603, "905": 603, "913templat": 603, "914index64_t": 603, "915size_byt": 603, "916": 603, "919": 603, "memory_detail": 603, "920": 603, "921": 603, "constreturn": 603, "device_unique_objectdevice_unique_object": 603, "device_unique_objecta": 603, "createmanagedarrayt": 603, "get_deallocation_countindex64_t": 603, "createdevicearrayt": 603, "construct_atstdgpu_host_devic": 603, "copycreatehost2hostarrayt": 603, "size_bytesindex64_t": 603, "destroyhostarrayvoid": 603, "memorycopymemorycopyth": 603, "uninitialized_copy_noutputit": 603, "get_allocation_countindex64_t": 603, "uninitialized_fillvoid": 603, "createhostarrayt": 603, "copycreatehost2devicearrayt": 603, "destroymanagedarrayvoid": 603, "deregister_memoryvoid": 603, "register_memoryvoid": 603, "destroyvoid": 603, "uninitialized_fill_niter": 603, "copyhost2hostarrayvoid": 603, "initializationinitializationth": 603, "destroy_niter": 603, "uninitialized_copyoutputit": 603, "get_dynamic_memory_typedynamic_memory_typ": 603, "copydevice2devicearrayvoid": 603, "dynamic_memory_typedynamic_memory_typeth": 603, "destroy_atstdgpu_host_devic": 603, "copycreatedevice2devicearrayt": 603, "to_addressstdgpu_host_devic": 603, "noexceptconvert": 603, "copyhost2devicearrayvoid": 603, "copydevice2hostarrayvoid": 603, "copycreatedevice2hostarrayt": 603, "destroydevicearrayvoid": 603, "value_typetypenam": [603, 613], "value_typedefinit": [603, 613], "allocatestat": 603, "propagate_on_container_copy_assignmentstd": 603, "propagate_on_container_copy_assignmentdefinit": 603, "is_always_equalstd": 603, "is_always_equaldefinit": 603, "const_pointertypenam": 603, "const_pointerdefinit": 603, "pointervalue_typ": 603, "pointerdefinit": 603, "const_void_pointertypenam": 603, "const_void_pointerdefinit": 603, "select_on_container_copy_constructionstat": 603, "deallocatestat": 603, "rebind_alloctypenam": 603, "rebind_allocdefinit": 603, "index_typeindex64_t": 603, "index_typedefinit": 603, "max_sizestat": 603, "could": [603, 630], "theoret": [603, 630], "destroystat": 603, "deallocate_filledstat": 603, "propagate_on_container_swapstd": 603, "propagate_on_container_swapdefinit": 603, "propagate_on_container_move_assignmentstd": 603, "propagate_on_container_move_assignmentdefinit": 603, "constructstat": 603, "allocator_typealloc": 603, "allocator_typedefinit": 603, "allocate_filledstat": 603, "difference_typetypenam": [603, 613], "difference_typedefinit": [603, 613], "594": 603, "void_pointertypenam": 603, "void_pointerdefinit": 603, "allocator_traitsa": 603, "deallocatevoid": 603, "value_typet": 603, "allocatet": 603, "safe_device_allocatoran": 603, "memory_typestat": 603, "memory_typedynam": 603, "safe_device_allocatorsafe_device_alloc": 603, "defaultdefault": 603, "safe_host_allocatoran": 603, "safe_host_allocatorsafe_host_alloc": 603, "safe_managed_allocatoran": 603, "safe_managed_allocatorsafe_managed_alloc": 603, "stdgpumutex": 606, "stdgpu_numeric_h": 608, "30namespac": [608, 909], "44templat": 608, "48void": 608, "49iota": 608, "65templat": 608, "72transform_reduce_index": 608, "numeric_detail": 608, "transform_reduce_indext": 608, "afterw": 608, "iotavoid": 608, "stdgpu_platform_h": 610, "format": 610, "off": [610, 915], "stdgpu_detail_backend_head": 610, "header_fil": 610, "stdgpu_backend_directori": 610, "bugpron": 610, "parenthes": 610, "misc": 610, "backward": 610, "compat": 610, "preprocessor": 610, "42namespac": 610, "workaround": 610, "purpos": 610, "ifdef": 610, "stdgpu_run_doxygen": 610, "stdgpu_detail_cat3": 610, "stdgpu_": 610, "stdgpu_backend_macro_namespac": 610, "_host_devic": 610, "_device_onli": 610, "_constant": 610, "1001": 610, "104namespac": 610, "stdgpu_detail_is_device_cod": 610, "_is_device_cod": 610, "124namespac": 610, "stdgpu_detail_is_device_compil": 610, "_is_device_compil": 610, "stdgpu_ranges_h": 613, "43class": 613, "45public": 613, "114privat": 613, "_begin": 613, "_end": 613, "125class": 613, "127public": 613, "179": 613, "187": 613, "188": 613, "196privat": 613, "200": 613, "207templat": 613, "208class": 613, "210public": 613, "221": 613, "235": 613, "236": 613, "249": 613, "258": 613, "266privat": 613, "268": 613, "269": 613, "271namespac": 613, "274templat": 613, "275class": 613, "285use": 613, "292templat": 613, "293use": 613, "296": 613, "ranges_detail": 613, "iteratordevice_ptr": 613, "iteratordefinit": 613, "device_rangedevice_rang": 613, "device_rangestdgpu_host_devic": 613, "beginstdgpu_host_devic": 613, "noexceptan": 613, "endstdgpu_host_devic": 613, "sizestdgpu_host_devic": 613, "constth": 613, "emptystdgpu_host_devic": 613, "constcheck": 613, "referencetypenam": 613, "referencedefinit": 613, "device_rangea": 613, "defaultempti": 613, "host_rangestdgpu_host_devic": 613, "host_rangehost_rang": 613, "iteratorhost_ptr": 613, "host_rangea": 613, "iteratorthrust": 613, "transform_rangestdgpu_host_devic": 613, "transform_rangea": 613, "transform_rangetransform_rang": 613, "stdgpuallocator_trait": [615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "detect": 615, "mechan": 615, "thu": 615, "fallback": 615, "ath": [618, 620, 626, 627, 630, 631, 632, 635, 637], "hinta": 618, "staticnoexcept": 630, "stdgpubit_not": [640, 641, 642, 643, 644, 645, 646], "unspecifi": [644, 652, 718, 878], "stdgpuequal_to": [647, 648, 649, 650, 651, 652, 653], "uth": [651, 717, 879], "lhsthe": [651, 653, 717, 719, 879, 880], "rhsthe": [651, 653, 717, 719, 879, 880], "stdgpuhash": [654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708], "stdgpuident": [709, 710, 711], "identitycompl": 709, "stdgpuis_execution_polici": 712, "stdgpulogical_and": [713, 714, 715, 716, 717, 718, 719], "stdgpunumeric_limit": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "attribut": [720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859, 884, 892, 900], "specifi": 720, "digitsstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "is_exactstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "is_integerstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "is_signedstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "is_specializedstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "radixstdgpu": [721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860], "staticconstexprnoexcept": [724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 745, 748, 749, 750, 751, 752, 754, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 773, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 833, 834, 837, 838, 839, 840, 841, 842, 845, 846, 847, 848, 849, 850, 853, 854, 855, 856, 857, 858, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873], "returnslargest": [724, 732, 743, 754, 760, 769, 778, 786, 791, 802, 807, 816, 824, 833, 839, 849, 854, 861, 871], "returnsmaximum": [725, 733, 741, 748, 758, 765, 777, 783, 789, 797, 806, 815, 825, 832, 842, 846, 858, 865, 872], "returnssmallest": [726, 736, 742, 751, 757, 766, 774, 785, 794, 798, 810, 813, 826, 831, 840, 847, 857, 863, 868], "returnsinfin": [727, 737, 744, 752, 762, 770, 773, 784, 790, 801, 805, 818, 823, 830, 837, 850, 853, 867, 870], "machin": [728, 734, 745, 749, 761, 767, 776, 782, 793, 800, 808, 814, 822, 834, 838, 845, 856, 866, 873], "returnsmachin": [728, 734, 745, 749, 761, 767, 776, 782, 793, 800, 808, 814, 822, 834, 838, 845, 856, 866, 873], "returnslowest": [729, 735, 740, 750, 759, 768, 775, 781, 792, 799, 809, 817, 821, 829, 841, 848, 855, 864, 869], "staticconstexpr": [753, 862], "noteimplement": [753, 862], "stdgpuplu": [874, 875, 876, 877, 878, 879, 880], "sum": [879, 880], "stdgpuremove_cvref": [881, 882, 883], "remove_cv_t": [881, 883, 909], "stdgpusafe_device_alloc": [884, 885, 886, 887, 888, 889, 890, 891], "memory_typestdgpu": [885, 893, 901], "uanoth": [889, 899, 906], "otherth": [889, 899, 906], "stdgpusafe_host_alloc": [892, 893, 894, 895, 896, 897, 898, 899], "stdgpusafe_managed_alloc": [900, 901, 902, 903, 904, 905, 906, 907], "2021": 909, "stdgpu_type_traits_h": 909, "38templat": 909, "39struct": 909, "45templat": 909, "46use": 909, "type_traits_detail": 909, "typestd": 909, "typedefinit": 909, "remove_cvreftyp": 909, "stdgpu_utility_h": 913, "53constexpr": 913, "54forward": 913, "63templat": 913, "64constexpr": 913, "65forward": 913, "74templat": 913, "75constexpr": 913, "76move": 913, "utility_detail": 913, "moveconstexpr": 913, "noexceptmov": 913, "pairthrust": 913, "paira": 913, "forwardconstexpr": 913, "noexceptforward": 913, "open": 915, "multipl": 915, "openmp": 915, "hip": 915, "rapidli": 915, "highli": 915, "complex": 915, "agnost": 915, "nativ": 915, "look": 915, "sequenti": 915, "parallel": 915, "product": 915, "previou": 915, "vexcl": 915, "arrayfir": 915, "boost": 915, "focu": 915, "variou": 915, "contigu": 915, "enhanc": 915, "orthogon": 915, "approach": 915, "focus": 915, "enabl": 915, "rapid": 915, "flexibl": 915, "just": 915, "counterpart": 915, "interoper": 915, "yet": 915, "ecosystem": 915, "lightweight": 915, "establish": 915, "framework": 915, "seamless": 915, "exist": 915, "trend": 915, "safer": 915, "philosophi": 915, "encourag": 915, "control": 915, "high": 915, "At": 915, "heart": 915, "offer": 915, "atomic_refatom": 915, "primit": 915, "bitsetspac": 915, "dequedynam": 915, "stackcontain": 915, "adapt": 915, "unordered_sethash": 915, "uniqu": 915, "vectordynam": 915, "commonli": 915, "increas": 915, "usabl": 915, "task": 915, "slamcast": 915, "scalabl": 915, "live": 915, "telepres": 915, "system": 915, "real": 915, "larg": 915, "3d": 915, "scene": 915, "reconstruct": 915, "stream": 915, "server": 915, "arbitrari": 915, "remot": 915, "client": 915, "duplic": 915, "queu": 915, "stream_set": 915, "add_block": 915, "short3": 915, "creation": 915, "backend": 915, "__global__": 915, "compute_update_set": 915, "voxel": 915, "tsdf_block_map": 915, "mc_update_set": 915, "global": 915, "blockidx": 915, "blockdim": 915, "threadidx": 915, "b_i": 915, "neighbor": 915, "candid": 915, "mc_block": 915, "y": 915, "z": 915, "j": 915, "directori": 915, "comprehens": 915, "introduct": 915, "research": 915, "paper": 915, "reinvent": 915, "wheel": 915, "tool": 915, "depend": 915, "instal": 915, "newer": 915, "gcc": 915, "ubuntu": 915, "04": 915, "sudo": 915, "apt": 915, "msvc": 915, "19": 915, "window": 915, "visual": 915, "studio": 915, "visualstudio": 915, "microsoft": 915, "com": 915, "download": 915, "kitwar": 915, "nvidia": 915, "alreadi": 915, "nvcc": 915, "toolkit": 915, "libomp": 915, "dev": 915, "rocm": 915, "radeonopencomput": 915, "built": 915, "we": 915, "cross": 915, "script": 915, "debug": 915, "releas": 915, "command": 915, "bash": 915, "setup": 915, "sh": 915, "build_typ": 915, "path": 915, "run": 915, "unit": 915, "re": 915, "run_test": 915, "dir": 915, "bin": 915, "uninstal": 915, "show": 915, "find_packag": 915, "add_librari": 915, "foo": 915, "target_link_librari": 915, "Or": 915, "emb": 915, "subdirectori": 915, "exclud": 915, "stdgpu_build_exampl": 915, "cach": 915, "benchmark": 915, "stdgpu_build_benchmark": 915, "stdgpu_build_test": 915, "add_subdirectori": 915, "stdgpu_build_shared_lib": 915, "ON": 915, "build_shared_lib": 915, "stdgpu_setup_compiler_flag": 915, "flag": 915, "standalon": 915, "stdgpu_compile_warning_as_error": 915, "treat": 915, "stdgpu_build_test_coverag": 915, "coverag": 915, "report": 915, "stdgpu_analyze_with_clang_tidi": 915, "analyz": 915, "tidi": 915, "stdgpu_analyze_with_cppcheck": 915, "cppcheck": 915, "cmake_build_typ": 915, "minsizerel": 915, "cite": 915, "unpublish": 915, "stotko2019stdgpu": 915, "author": 915, "titl": 915, "year": 915, "month": 915, "aug": 915, "arxiv": 915, "1908": 915, "05936": 915, "url": 915, "ab": 915, "immers": 915, "multi": 915, "articl": 915, "stotko2019slamcast": 915, "krumpen": 915, "hullin": 915, "m": 915, "weinmann": 915, "klein": 915, "journal": 915, "ieee": 915, "transact": 915, "graphic": 915, "volum": 915, "2102": 915, "2112": 915, "uni": 915, "bonn": 915, "de": 915}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"chapter": 0, "iter": [1, 171, 200, 264, 324, 374, 508, 598, 599], "over": 1, "arrai": [1, 2], "contain": [1, 3, 82, 190, 208, 294, 314, 338, 346, 504], "motiv": [1, 2, 3], "api": [1, 2], "memori": [2, 542, 602, 603], "manag": 2, "creat": 2, "destroi": [2, 560, 631], "copi": [2, 467], "between": 2, "host": [2, 3], "devic": [2, 3, 450], "object": 3, "defin": 3, "stdgpu": [4, 5, 7, 11, 12, 13, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 908, 909, 910, 911, 912, 913, 914], "algorithm": [4, 5, 459], "h": [4, 5, 11, 12, 442, 443, 444, 445, 446, 447, 448, 450, 454, 455, 457, 458, 598, 599, 600, 601, 602, 603, 607, 608, 609, 610, 612, 613, 908, 909, 912, 913], "file": [4, 5, 7, 11, 12, 13, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 908, 909, 910, 911, 912, 913, 914], "refer": [4, 7, 11, 13, 88, 94, 137, 181, 201, 214, 234, 261, 269, 322, 359, 421, 442, 444, 445, 447, 449, 451, 452, 453, 454, 457, 598, 600, 602, 605, 607, 609, 611, 612, 614, 908, 910, 911, 912, 914], "sourc": [5, 12, 443, 446, 448, 450, 455, 458, 599, 601, 603, 608, 610, 613, 909, 913], "class": 6, "list": [6, 16, 18, 83, 87, 89, 125, 169, 183, 191, 195, 209, 213, 215, 231, 247, 263, 275, 335, 394, 456, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 893, 901], "atom": [7, 15, 468], "cuh": [7, 13, 449, 605, 611, 614, 910, 911, 914], "atomic_int": 8, "atomic_uint": 9, "atomic_ullong": 10, "bit": [11, 12, 491], "bitset": [13, 86, 499], "bitset_default_typ": 14, "t": [15, 17, 40, 60, 124, 168, 182, 194, 230, 246, 274, 393, 640, 647, 654, 712, 713, 720, 874, 881, 884, 892, 900], "alloc": [15, 86, 124, 212, 274, 334, 393, 615, 618, 620, 890, 896, 902], "member": [16, 18, 83, 87, 89, 125, 169, 183, 191, 195, 209, 213, 215, 231, 247, 263, 275, 335, 394, 616, 641, 643, 648, 650, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 714, 716, 721, 723, 731, 739, 747, 756, 764, 772, 780, 788, 796, 804, 812, 820, 828, 836, 844, 852, 860, 875, 877, 882, 885, 893, 901], "atomic_ref": [17, 22], "value_typ": [19, 57, 165, 172, 205, 239, 251, 268, 318, 377, 427, 617, 888, 895, 905], "fetch_dec_mod": [20, 61], "oper": [21, 24, 26, 29, 34, 36, 37, 39, 40, 44, 47, 52, 58, 60, 63, 65, 66, 72, 76, 77, 79, 80, 90, 91, 93, 95, 99, 108, 144, 149, 184, 185, 188, 189, 219, 228, 399, 423, 645, 646, 651, 653, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 699, 702, 705, 708, 711, 717, 719, 879, 880, 887, 891, 894, 898, 903, 904], "difference_typ": [23, 54, 151, 170, 204, 266, 327, 348, 407, 638], "is_lock_fre": [25, 49], "fetch_sub": [27, 59], "fetch_min": [28, 51], "fetch_add": [30, 81], "fetch_or": [31, 64], "fetch_xor": [32, 50], "fetch_inc_mod": [33, 70], "load": [35, 68], "fetch_and": [38, 62], "compare_exchange_strong": [41, 78], "fetch_max": [42, 71], "exchang": [43, 73], "compare_exchange_weak": [45, 69], "store": [46, 53], "get_alloc": [48, 103, 129, 221, 323, 366, 433], "allocator_typ": [55, 109, 154, 218, 285, 357, 414, 636], "createdeviceobject": [56, 74, 110, 116, 130, 140, 222, 225, 241, 249, 290, 291, 371, 382, 425, 432], "destroydeviceobject": [67, 75, 100, 101, 127, 136, 223, 227, 236, 253, 288, 333, 342, 370, 398, 404], "back_insert_iter": [82, 84], "container_typ": [85, 192, 211, 242, 256], "block": [86, 212], "bool": [91, 655, 722], "flip": [92, 102, 105], "reset": [96, 97, 114], "all": [98, 107], "ani": [104, 123], "block_typ": 106, "set": [111, 113, 121], "size": [112, 167, 177, 207, 226, 233, 254, 267, 292, 358, 419, 530, 538], "none": [115, 118], "test": 117, "empti": [119, 166, 178, 206, 224, 243, 257, 273, 281, 340, 418], "count": [120, 122, 308, 310, 345, 355], "dequ": [124, 449, 505], "data": [126, 147, 431, 439, 504], "emplace_back": [131, 403], "push_back": [132, 406], "front": [133, 146, 402, 428], "pop_front": 134, "device_rang": [135, 141, 143, 153, 168, 173, 174, 179, 180, 278, 280, 286, 293, 351, 372, 378, 389, 410, 441], "push_front": 138, "index_typ": [139, 244, 250, 287, 364, 440, 629], "pop_back": [142, 422], "pointer": [148, 299, 384, 400, 624], "full": [150, 238, 259, 312, 363, 405], "back": [152, 157, 401, 424], "capac": [155, 237, 258, 429], "shrink_to_fit": [156, 426], "emplace_front": 158, "max_siz": [159, 277, 349, 436, 630], "valid": [160, 163, 220, 229, 245, 252, 307, 328, 352, 353, 408, 416], "const_point": [161, 296, 368, 411, 622], "const_refer": [162, 235, 255, 313, 337, 409], "clear": [164, 295, 336, 412], "begin": [175, 202, 272, 276, 319, 347, 387], "end": [176, 199, 271, 301, 315, 343, 361], "device_unique_object": [182, 186, 187], "front_insert_iter": [190, 193], "host_rang": [194, 196, 197, 198, 203], "insert_iter": [208, 210], "mutex_arrai": 212, "lock": 216, "try_lock": [217, 577], "queue": [230, 582, 611], "containert": [230, 246], "push": [232, 248], "pop": [240, 260], "stack": [246, 586, 614], "transform_rang": [262, 265, 270], "r": 262, "unaryfunct": 262, "unordered_map": [274, 589, 910], "kei": [274, 334], "hash": [274, 334, 654, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706], "keyequ": [274, 334], "find": [279, 297, 304, 329, 360, 362, 381, 391], "eras": [282, 311, 316, 356, 369, 383, 396, 413], "key_equ": [283, 373], "insert": [284, 300, 302, 339, 367, 390, 397, 435, 510], "bucket_s": [289, 350], "max_load_factor": [298, 341], "bucket_count": [303, 344], "load_factor": [305, 376], "mapped_typ": 306, "emplac": [309, 354], "hasher": [317, 375], "hash_funct": [320, 365], "cend": [321, 386], "key_eq": [325, 385], "cbegin": [326, 392], "key_typ": [330, 379], "bucket": [331, 388], "const_iter": [332, 380], "unordered_set": [334, 590, 911], "vector": [393, 597, 914], "device_end": [395, 434, 520, 525, 527, 540], "device_cbegin": [415, 517, 534], "device_begin": [420, 438, 513, 522, 523, 526], "device_cend": [437, 518, 532], "compil": [442, 443, 500], "config": [444, 501], "contract": [445, 446, 502], "cstddef": [447, 448, 503], "directori": [451, 452, 453], "home": [452, 453], "runner": [452, 453], "work": [452, 453], "doc": [452, 453], "doxygen_src": 453, "execut": [454, 455, 506], "function": [457, 458, 507, 587, 591], "clamp": 460, "min": [461, 726, 736, 742, 751, 757, 766, 774, 785, 794, 798, 810, 813, 826, 831, 840, 847, 857, 863, 868], "fill_n": 462, "copy_n": 463, "for_each_index": 464, "fill": 465, "max": [466, 724, 732, 743, 754, 760, 769, 778, 786, 791, 802, 807, 816, 824, 833, 839, 849, 854, 861, 871], "atomic_fetch_xor_explicit": 469, "atomic_compare_exchange_weak": 470, "atomic_fetch_or_explicit": 471, "atomic_fetch_xor": 472, "atomic_thread_f": 473, "atomic_exchang": 474, "atomic_signal_f": 475, "atomic_fetch_and": 476, "atomic_compare_exchange_strong": 477, "atomic_fetch_sub": 478, "atomic_store_explicit": 479, "atomic_fetch_add_explicit": 480, "atomic_stor": 481, "atomic_fetch_and_explicit": 482, "memory_ord": 483, "atomic_load": 484, "atomic_fetch_or": 485, "atomic_is_lock_fre": 486, "atomic_exchange_explicit": 487, "atomic_fetch_add": 488, "atomic_fetch_sub_explicit": 489, "atomic_load_explicit": 490, "bit_ceil": 492, "bit_floor": 493, "popcount": 494, "bit_width": 495, "bit_mod": 496, "has_single_bit": 497, "bit_cast": 498, "structur": 504, "host_end": [509, 515, 533, 536], "device_ptr": 511, "host_cend": [512, 535], "host_begin": [514, 529, 531, 537], "host_cbegin": [516, 519], "back_insert": 521, "make_devic": 524, "make_host": 528, "front_insert": 539, "limit": [541, 600, 601], "createmanagedarrai": 543, "get_deallocation_count": 544, "to_address": [545, 571], "createdevicearrai": 546, "construct_at": 547, "copycreatehost2hostarrai": 548, "size_byt": 549, "destroyhostarrai": 550, "memorycopi": 551, "uninitialized_copy_n": 552, "get_allocation_count": 553, "uninitialized_fil": 554, "createhostarrai": 555, "copycreatehost2devicearrai": 556, "destroymanagedarrai": 557, "deregister_memori": 558, "register_memori": 559, "uninitialized_fill_n": 561, "copyhost2hostarrai": 562, "initi": 563, "destroy_n": 564, "uninitialized_copi": 565, "get_dynamic_memory_typ": 566, "copydevice2devicearrai": 567, "dynamic_memory_typ": 568, "destroy_at": 569, "copycreatedevice2devicearrai": 570, "copyhost2devicearrai": 572, "copydevice2hostarrai": 573, "copycreatedevice2hostarrai": 574, "destroydevicearrai": 575, "mutex": [576, 605], "numer": [578, 607, 608], "transform_reduce_index": 579, "iota": 580, "platform": [581, 587, 609, 610], "rang": [583, 612, 613], "host_indexed_rang": 584, "device_indexed_rang": 585, "type_trait": [588, 908, 909], "complement": 591, "util": [592, 912, 913], "forward": [593, 596], "move": 594, "pair": 595, "modul": 604, "mutex_default_typ": 606, "allocator_trait": 615, "propagate_on_container_copy_assign": 619, "is_always_equ": 621, "rebind_trait": 623, "const_void_point": 625, "select_on_container_copy_construct": 626, "dealloc": [627, 886, 897, 907], "rebind_alloc": 628, "deallocate_fil": 632, "propagate_on_container_swap": 633, "propagate_on_container_move_assign": 634, "construct": 635, "allocate_fil": 637, "void_point": 639, "bit_not": [640, 642], "void": [642, 649, 715, 876], "is_transpar": [644, 652, 718, 878], "equal_to": [647, 649], "char16_t": [658, 730], "char32_t": [661, 738], "char": [664, 688, 691, 746, 811, 819], "doubl": [667, 679, 755, 787], "float": [670, 763], "int": [673, 694, 771, 827], "long": [676, 679, 682, 697, 700, 779, 787, 795, 835, 843], "short": [685, 703, 803, 851], "sign": [688, 811], "unsign": [691, 694, 697, 700, 703, 819, 827, 835, 843, 851], "wchar_t": [706, 859], "ident": 709, "is_execution_polici": 712, "logical_and": [713, 715], "numeric_limit": [720, 722, 730, 738, 746, 755, 763, 771, 779, 787, 795, 803, 811, 819, 827, 835, 843, 851, 859], "round_error": [725, 733, 741, 748, 758, 765, 777, 783, 789, 797, 806, 815, 825, 832, 842, 846, 858, 865, 872], "infin": [727, 737, 744, 752, 762, 770, 773, 784, 790, 801, 805, 818, 823, 830, 837, 850, 853, 867, 870], "epsilon": [728, 734, 745, 749, 761, 767, 776, 782, 793, 800, 808, 814, 822, 834, 838, 845, 856, 866, 873], "lowest": [729, 735, 740, 750, 759, 768, 775, 781, 792, 799, 809, 817, 821, 829, 841, 848, 855, 864, 869], "is_sign": [753, 862], "plu": [874, 876], "remove_cvref": 881, "type": 883, "safe_device_alloc": [884, 889], "safe_host_alloc": [892, 899], "safe_managed_alloc": [900, 906], "overview": 915, "featur": 915, "exampl": 915, "document": 915, "build": 915, "integr": 915, "contribut": 915, "licens": 915, "contact": 915}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"createDeviceObject": [[116, "createdeviceobject"], [130, "createdeviceobject"], [110, "createdeviceobject"], [74, "createdeviceobject"], [56, "createdeviceobject"], [432, "createdeviceobject"], [425, "createdeviceobject"], [382, "createdeviceobject"], [371, "createdeviceobject"], [291, "createdeviceobject"], [290, "createdeviceobject"], [222, "createdeviceobject"], [241, "createdeviceobject"], [225, "createdeviceobject"], [249, "createdeviceobject"], [140, "createdeviceobject"]], "back_insert_iterator": [[84, "back-insert-iterator"]], "fetch_inc_mod": [[70, "fetch-inc-mod"], [33, "fetch-inc-mod"]], "fetch_add": [[81, "fetch-add"], [30, "fetch-add"]], "test": [[117, "test"]], "operator|=": [[80, "operator"], [44, "operator"]], "operator=": [[95, "operator"], [79, "operator"], [90, "operator"], [29, "operator"], [898, "operator"], [904, "operator"], [891, "operator"], [887, "operator"], [894, "operator"], [903, "operator"]], "reset": [[96, "reset"], [114, "reset"], [97, "reset"]], "container_type": [[85, "container-type"], [256, "container-type"], [242, "container-type"], [211, "container-type"], [192, "container-type"]], "any": [[104, "any"], [123, "any"]], "operator[]": [[99, "operator"], [108, "operator"], [423, "operator"], [399, "operator"], [228, "operator"], [219, "operator"], [149, "operator"], [144, "operator"]], "reference": [[88, "reference"], [94, "reference"], [421, "reference"], [359, "reference"], [269, "reference"], [322, "reference"], [201, "reference"], [261, "reference"], [234, "reference"], [214, "reference"], [181, "reference"], [137, "reference"]], "at": [[128, "at"], [430, "at"], [417, "at"], [145, "at"]], "front": [[133, "front"], [428, "front"], [402, "front"], [146, "front"]], "operator~": [[93, "operator"]], "operator\u2013": [[72, "operator"], [34, "operator"], [52, "operator"], [24, "operator"]], "push_back": [[132, "push-back"], [406, "push-back"]], "destroyDeviceObject": [[75, "destroydeviceobject"], [67, "destroydeviceobject"], [101, "destroydeviceobject"], [100, "destroydeviceobject"], [127, "destroydeviceobject"], [404, "destroydeviceobject"], [342, "destroydeviceobject"], [370, "destroydeviceobject"], [398, "destroydeviceobject"], [333, "destroydeviceobject"], [288, "destroydeviceobject"], [227, "destroydeviceobject"], [253, "destroydeviceobject"], [223, "destroydeviceobject"], [236, "destroydeviceobject"], [136, "destroydeviceobject"]], "all": [[107, "all"], [98, "all"]], "flip": [[102, "flip"], [105, "flip"], [92, "flip"]], "fetch_max": [[71, "fetch-max"], [42, "fetch-max"]], "set": [[111, "set"], [113, "set"], [121, "set"]], "compare_exchange_strong": [[78, "compare-exchange-strong"], [41, "compare-exchange-strong"]], "Member List": [[83, "member-list"], [125, "member-list"], [89, "member-list"], [87, "member-list"], [16, "member-list"], [18, "member-list"], [875, "member-list"], [901, "member-list"], [885, "member-list"], [893, "member-list"], [882, "member-list"], [877, "member-list"], [844, "member-list"], [836, "member-list"], [812, "member-list"], [828, "member-list"], [860, "member-list"], [804, "member-list"], [820, "member-list"], [852, "member-list"], [796, "member-list"], [780, "member-list"], [747, "member-list"], [772, "member-list"], [764, "member-list"], [788, "member-list"], [739, "member-list"], [756, "member-list"], [731, "member-list"], [671, "member-list"], [689, "member-list"], [692, "member-list"], [723, "member-list"], [677, "member-list"], [710, "member-list"], [704, "member-list"], [674, "member-list"], [701, "member-list"], [680, "member-list"], [707, "member-list"], [721, "member-list"], [683, "member-list"], [686, "member-list"], [698, "member-list"], [714, "member-list"], [695, "member-list"], [716, "member-list"], [648, "member-list"], [616, "member-list"], [656, "member-list"], [643, "member-list"], [668, "member-list"], [650, "member-list"], [641, "member-list"], [659, "member-list"], [662, "member-list"], [665, "member-list"], [394, "member-list"], [335, "member-list"], [275, "member-list"], [231, "member-list"], [209, "member-list"], [263, "member-list"], [213, "member-list"], [247, "member-list"], [215, "member-list"], [169, "member-list"], [183, "member-list"], [191, "member-list"], [195, "member-list"]], "compare_exchange_weak": [[69, "compare-exchange-weak"], [45, "compare-exchange-weak"]], "allocator_type": [[109, "allocator-type"], [55, "allocator-type"], [636, "allocator-type"], [414, "allocator-type"], [357, "allocator-type"], [285, "allocator-type"], [218, "allocator-type"], [154, "allocator-type"]], "empty": [[119, "empty"], [418, "empty"], [340, "empty"], [281, "empty"], [273, "empty"], [206, "empty"], [224, "empty"], [243, "empty"], [257, "empty"], [178, "empty"], [166, "empty"]], "count": [[122, "count"], [120, "count"], [355, "count"], [345, "count"], [308, "count"], [310, "count"]], "exchange": [[73, "exchange"], [43, "exchange"]], "emplace_back": [[131, "emplace-back"], [403, "emplace-back"]], "deque< T, Allocator >": [[124, "deque-t-allocator"]], "bitset< Block, Allocator >": [[86, "bitset-block-allocator"]], "operator bool": [[91, "operator-bool"]], "load": [[68, "load"], [35, "load"]], "data": [[126, "data"], [431, "data"], [439, "data"], [147, "data"]], "block_type": [[106, "block-type"]], "none": [[118, "none"], [115, "none"]], "size": [[112, "size"], [538, "size"], [530, "size"], [419, "size"], [358, "size"], [292, "size"], [267, "size"], [207, "size"], [233, "size"], [254, "size"], [226, "size"], [167, "size"], [177, "size"]], "back_insert_iterator< Container >": [[82, "back-insert-iterator-container"]], "operator+=": [[77, "operator"], [37, "operator"]], "get_allocator": [[129, "get-allocator"], [103, "get-allocator"], [48, "get-allocator"], [433, "get-allocator"], [366, "get-allocator"], [323, "get-allocator"], [221, "get-allocator"]], "operator^=": [[76, "operator"], [36, "operator"]], "difference_type": [[54, "difference-type"], [23, "difference-type"], [638, "difference-type"], [407, "difference-type"], [348, "difference-type"], [327, "difference-type"], [266, "difference-type"], [204, "difference-type"], [151, "difference-type"], [170, "difference-type"]], "store": [[53, "store"], [46, "store"]], "stdgpu/bitset.cuh File Reference": [[13, "stdgpu-bitset-cuh-file-reference"]], "operator&=": [[58, "operator"], [21, "operator"]], "operator T": [[60, "operator-t"], [40, "operator-t"]], "stdgpu/algorithm.h File Reference": [[4, "stdgpu-algorithm-h-file-reference"]], "stdgpu/atomic.cuh File Reference": [[7, "stdgpu-atomic-cuh-file-reference"]], "operator++": [[39, "operator"], [47, "operator"], [63, "operator"], [65, "operator"]], "fetch_min": [[51, "fetch-min"], [28, "fetch-min"]], "atomic_ullong": [[10, "atomic-ullong"]], "value_type": [[19, "value-type"], [57, "value-type"], [905, "value-type"], [895, "value-type"], [888, "value-type"], [617, "value-type"], [427, "value-type"], [377, "value-type"], [318, "value-type"], [268, "value-type"], [239, "value-type"], [205, "value-type"], [251, "value-type"], [165, "value-type"], [172, "value-type"]], "fetch_dec_mod": [[61, "fetch-dec-mod"], [20, "fetch-dec-mod"]], "operator-=": [[26, "operator"], [66, "operator"]], "fetch_or": [[31, "fetch-or"], [64, "fetch-or"]], "atomic< T, Allocator >": [[15, "atomic-t-allocator"]], "fetch_and": [[62, "fetch-and"], [38, "fetch-and"]], "is_lock_free": [[25, "is-lock-free"], [49, "is-lock-free"]], "stdgpu/bit.h Source File": [[12, "stdgpu-bit-h-source-file"]], "Memory Management": [[2, "memory-management"]], "Motivation": [[2, "motivation"], [3, "motivation"], [1, "motivation"]], "Memory API": [[2, "memory-api"]], "Creating and Destroying Arrays": [[2, "creating-and-destroying-arrays"]], "Copying Arrays between Host and Device": [[2, "copying-arrays-between-host-and-device"]], "Class List": [[6, "class-list"]], "atomic_ref": [[22, "atomic-ref"]], "fetch_xor": [[50, "fetch-xor"], [32, "fetch-xor"]], "stdgpu/algorithm.h Source File": [[5, "stdgpu-algorithm-h-source-file"]], "stdgpu/bit.h File Reference": [[11, "stdgpu-bit-h-file-reference"]], "atomic_ref< T >": [[17, "atomic-ref-t"]], "atomic_int": [[8, "atomic-int"]], "Container Objects": [[3, "container-objects"]], "Defining Host and Device Container Objects": [[3, "defining-host-and-device-container-objects"]], "bitset_default_type": [[14, "bitset-default-type"]], "atomic_uint": [[9, "atomic-uint"]], "fetch_sub": [[27, "fetch-sub"], [59, "fetch-sub"]], "Iterating over Arrays and Containers": [[1, "iterating-over-arrays-and-containers"]], "Iterator API": [[1, "iterator-api"]], "Chapters": [[0, "chapters"]], "plus< void >": [[876, "plus-void"]], "allocate": [[896, "allocate"], [890, "allocate"], [902, "allocate"], [618, "allocate"], [620, "allocate"]], "stdgpu/utility.h Source File": [[913, "stdgpu-utility-h-source-file"]], "remove_cvref< T >": [[881, "remove-cvref-t"]], "epsilon": [[873, "epsilon"], [822, "epsilon"], [845, "epsilon"], [838, "epsilon"], [834, "epsilon"], [866, "epsilon"], [814, "epsilon"], [856, "epsilon"], [808, "epsilon"], [761, "epsilon"], [749, "epsilon"], [776, "epsilon"], [745, "epsilon"], [793, "epsilon"], [767, "epsilon"], [800, "epsilon"], [782, "epsilon"], [728, "epsilon"], [734, "epsilon"]], "stdgpu/vector.cuh File Reference": [[914, "stdgpu-vector-cuh-file-reference"]], "type": [[883, "type"]], "operator()": [[879, "operator"], [880, "operator"], [687, "operator"], [696, "operator"], [681, "operator"], [717, "operator"], [719, "operator"], [711, "operator"], [699, "operator"], [675, "operator"], [690, "operator"], [708, "operator"], [693, "operator"], [678, "operator"], [705, "operator"], [684, "operator"], [702, "operator"], [672, "operator"], [651, "operator"], [657, "operator"], [669, "operator"], [645, "operator"], [660, "operator"], [663, "operator"], [666, "operator"], [646, "operator"], [653, "operator"]], "safe_device_allocator< T >": [[884, "safe-device-allocator-t"]], "stdgpu/type_traits.h Source File": [[909, "stdgpu-type-traits-h-source-file"]], "max": [[871, "max"], [839, "max"], [824, "max"], [861, "max"], [854, "max"], [849, "max"], [807, "max"], [816, "max"], [833, "max"], [769, "max"], [760, "max"], [754, "max"], [778, "max"], [786, "max"], [791, "max"], [802, "max"], [743, "max"], [724, "max"], [732, "max"], [466, "max"]], "is_transparent": [[878, "is-transparent"], [718, "is-transparent"], [652, "is-transparent"], [644, "is-transparent"]], "safe_host_allocator": [[899, "safe-host-allocator"]], "safe_host_allocator< T >": [[892, "safe-host-allocator-t"]], "stdgpu/unordered_set.cuh File Reference": [[911, "stdgpu-unordered-set-cuh-file-reference"]], "Overview": [[915, "overview"]], "Features": [[915, "features"]], "Examples": [[915, "examples"]], "Documentation": [[915, "documentation"]], "Building": [[915, "building"]], "Integration": [[915, "integration"]], "Contributing": [[915, "contributing"]], "License": [[915, "license"]], "Contact": [[915, "contact"]], "deallocate": [[886, "deallocate"], [907, "deallocate"], [897, "deallocate"], [627, "deallocate"]], "stdgpu/utility.h File Reference": [[912, "stdgpu-utility-h-file-reference"]], "safe_managed_allocator": [[906, "safe-managed-allocator"]], "safe_device_allocator": [[889, "safe-device-allocator"]], "plus< T >": [[874, "plus-t"]], "stdgpu/type_traits.h File Reference": [[908, "stdgpu-type-traits-h-file-reference"]], "stdgpu/unordered_map.cuh File Reference": [[910, "stdgpu-unordered-map-cuh-file-reference"]], "round_error": [[872, "round-error"], [832, "round-error"], [842, "round-error"], [825, "round-error"], [846, "round-error"], [815, "round-error"], [865, "round-error"], [858, "round-error"], [806, "round-error"], [758, "round-error"], [789, "round-error"], [748, "round-error"], [741, "round-error"], [783, "round-error"], [765, "round-error"], [777, "round-error"], [797, "round-error"], [733, "round-error"], [725, "round-error"]], "safe_managed_allocator< T >": [[900, "safe-managed-allocator-t"]], "infinity": [[867, "infinity"], [830, "infinity"], [823, "infinity"], [805, "infinity"], [870, "infinity"], [818, "infinity"], [837, "infinity"], [850, "infinity"], [853, "infinity"], [790, "infinity"], [801, "infinity"], [737, "infinity"], [784, "infinity"], [752, "infinity"], [770, "infinity"], [744, "infinity"], [762, "infinity"], [773, "infinity"], [727, "infinity"]], "lowest": [[869, "lowest"], [817, "lowest"], [864, "lowest"], [809, "lowest"], [841, "lowest"], [829, "lowest"], [821, "lowest"], [848, "lowest"], [855, "lowest"], [750, "lowest"], [781, "lowest"], [759, "lowest"], [768, "lowest"], [799, "lowest"], [792, "lowest"], [740, "lowest"], [775, "lowest"], [735, "lowest"], [729, "lowest"]], "min": [[840, "min"], [857, "min"], [868, "min"], [831, "min"], [847, "min"], [863, "min"], [813, "min"], [826, "min"], [810, "min"], [751, "min"], [742, "min"], [757, "min"], [766, "min"], [798, "min"], [785, "min"], [794, "min"], [774, "min"], [736, "min"], [726, "min"], [461, "min"]], "numeric_limits< unsigned long long >": [[843, "numeric-limits-unsigned-long-long"]], "numeric_limits< unsigned short >": [[851, "numeric-limits-unsigned-short"]], "is_signed": [[862, "is-signed"], [753, "is-signed"]], "numeric_limits< unsigned int >": [[827, "numeric-limits-unsigned-int"]], "numeric_limits< wchar_t >": [[859, "numeric-limits-wchar-t"]], "numeric_limits< unsigned long >": [[835, "numeric-limits-unsigned-long"]], "numeric_limits< unsigned char >": [[819, "numeric-limits-unsigned-char"]], "numeric_limits< signed char >": [[811, "numeric-limits-signed-char"]], "numeric_limits< double >": [[755, "numeric-limits-double"]], "numeric_limits< long double >": [[787, "numeric-limits-long-double"]], "numeric_limits< float >": [[763, "numeric-limits-float"]], "numeric_limits< int >": [[771, "numeric-limits-int"]], "numeric_limits< char32_t >": [[738, "numeric-limits-char32-t"]], "numeric_limits< short >": [[803, "numeric-limits-short"]], "numeric_limits< char >": [[746, "numeric-limits-char"]], "numeric_limits< long >": [[779, "numeric-limits-long"]], "numeric_limits< long long >": [[795, "numeric-limits-long-long"]], "hash< short >": [[685, "hash-short"]], "hash< long long >": [[682, "hash-long-long"]], "hash< unsigned long >": [[697, "hash-unsigned-long"]], "numeric_limits< T >": [[720, "numeric-limits-t"]], "hash< signed char >": [[688, "hash-signed-char"]], "hash< unsigned char >": [[691, "hash-unsigned-char"]], "hash< unsigned int >": [[694, "hash-unsigned-int"]], "numeric_limits< char16_t >": [[730, "numeric-limits-char16-t"]], "hash< long >": [[676, "hash-long"]], "hash< unsigned long long >": [[700, "hash-unsigned-long-long"]], "logical_and< T >": [[713, "logical-and-t"]], "is_execution_policy< T >": [[712, "is-execution-policy-t"]], "hash< wchar_t >": [[706, "hash-wchar-t"]], "numeric_limits< bool >": [[722, "numeric-limits-bool"]], "logical_and< void >": [[715, "logical-and-void"]], "identity": [[709, "identity"]], "hash< unsigned short >": [[703, "hash-unsigned-short"]], "hash< float >": [[670, "hash-float"]], "hash< long double >": [[679, "hash-long-double"]], "hash< int >": [[673, "hash-int"]], "index_type": [[629, "index-type"], [440, "index-type"], [364, "index-type"], [287, "index-type"], [244, "index-type"], [250, "index-type"], [139, "index-type"]], "stdgpu/stack.cuh File Reference": [[614, "stdgpu-stack-cuh-file-reference"]], "construct": [[635, "construct"]], "equal_to< void >": [[649, "equal-to-void"]], "hash< char >": [[664, "hash-char"]], "propagate_on_container_copy_assignment": [[619, "propagate-on-container-copy-assignment"]], "max_size": [[630, "max-size"], [436, "max-size"], [349, "max-size"], [277, "max-size"], [159, "max-size"]], "allocate_filled": [[637, "allocate-filled"]], "allocator_traits< Allocator >": [[615, "allocator-traits-allocator"]], "pointer": [[624, "pointer"], [400, "pointer"], [384, "pointer"], [299, "pointer"], [148, "pointer"]], "select_on_container_copy_construction": [[626, "select-on-container-copy-construction"]], "Modules": [[604, "modules"]], "stdgpu/platform.h File Reference": [[609, "stdgpu-platform-h-file-reference"]], "hash< T >": [[654, "hash-t"]], "is_always_equal": [[621, "is-always-equal"]], "deallocate_filled": [[632, "deallocate-filled"]], "const_void_pointer": [[625, "const-void-pointer"]], "hash< char16_t >": [[658, "hash-char16-t"]], "rebind_alloc": [[628, "rebind-alloc"]], "stdgpu/queue.cuh File Reference": [[611, "stdgpu-queue-cuh-file-reference"]], "stdgpu/numeric.h Source File": [[608, "stdgpu-numeric-h-source-file"]], "hash< char32_t >": [[661, "hash-char32-t"]], "void_pointer": [[639, "void-pointer"]], "mutex_default_type": [[606, "mutex-default-type"]], "propagate_on_container_swap": [[633, "propagate-on-container-swap"]], "destroy": [[631, "destroy"], [560, "destroy"]], "stdgpu/ranges.h File Reference": [[612, "stdgpu-ranges-h-file-reference"]], "stdgpu/memory.h Source File": [[603, "stdgpu-memory-h-source-file"]], "const_pointer": [[622, "const-pointer"], [411, "const-pointer"], [368, "const-pointer"], [296, "const-pointer"], [161, "const-pointer"]], "stdgpu/numeric.h File Reference": [[607, "stdgpu-numeric-h-file-reference"]], "stdgpu/platform.h Source File": [[610, "stdgpu-platform-h-source-file"]], "hash< bool >": [[655, "hash-bool"]], "equal_to< T >": [[647, "equal-to-t"]], "stdgpu/ranges.h Source File": [[613, "stdgpu-ranges-h-source-file"]], "propagate_on_container_move_assignment": [[634, "propagate-on-container-move-assignment"]], "hash< double >": [[667, "hash-double"]], "rebind_traits": [[623, "rebind-traits"]], "bit_not< T >": [[640, "bit-not-t"]], "stdgpu/mutex.cuh File Reference": [[605, "stdgpu-mutex-cuh-file-reference"]], "bit_not< void >": [[642, "bit-not-void"]], "stdgpu/limits.h File Reference": [[600, "stdgpu-limits-h-file-reference"]], "type_traits": [[588, "type-traits"]], "copyDevice2HostArray": [[573, "copydevice2hostarray"]], "stdgpu/iterator.h Source File": [[599, "stdgpu-iterator-h-source-file"]], "mutex": [[576, "mutex"]], "construct_at": [[547, "construct-at"]], "host_begin": [[537, "host-begin"], [514, "host-begin"], [529, "host-begin"], [531, "host-begin"]], "size_bytes": [[549, "size-bytes"]], "destroyHostArray": [[550, "destroyhostarray"]], "uninitialized_copy_n": [[552, "uninitialized-copy-n"]], "deregister_memory": [[558, "deregister-memory"]], "to_address": [[571, "to-address"], [545, "to-address"]], "try_lock": [[577, "try-lock"], [217, "try-lock"]], "get_deallocation_count": [[544, "get-deallocation-count"]], "destroy_n": [[564, "destroy-n"]], "transform_reduce_index": [[579, "transform-reduce-index"]], "iota": [[580, "iota"]], "createHostArray": [[555, "createhostarray"]], "limits": [[541, "limits"]], "MemoryCopy": [[551, "memorycopy"]], "destroy_at": [[569, "destroy-at"]], "stdgpu/iterator.h File Reference": [[598, "stdgpu-iterator-h-file-reference"]], "vector": [[597, "vector"]], "copyCreateHost2HostArray": [[548, "copycreatehost2hostarray"]], "copyCreateDevice2HostArray": [[574, "copycreatedevice2hostarray"]], "utility": [[592, "utility"]], "numeric": [[578, "numeric"]], "host_end": [[536, "host-end"], [515, "host-end"], [509, "host-end"], [533, "host-end"]], "Complementing functionality": [[591, "complementing-functionality"]], "stdgpu/limits.h Source File": [[601, "stdgpu-limits-h-source-file"]], "copyHost2HostArray": [[562, "copyhost2hostarray"]], "stack": [[586, "stack"]], "get_dynamic_memory_type": [[566, "get-dynamic-memory-type"]], "stdgpu/memory.h File Reference": [[602, "stdgpu-memory-h-file-reference"]], "uninitialized_copy": [[565, "uninitialized-copy"]], "dynamic_memory_type": [[568, "dynamic-memory-type"]], "Initialization": [[563, "initialization"]], "destroyDeviceArray": [[575, "destroydevicearray"]], "unordered_map": [[589, "unordered-map"]], "destroyManagedArray": [[557, "destroymanagedarray"]], "unordered_set": [[590, "unordered-set"]], "copyHost2DeviceArray": [[572, "copyhost2devicearray"]], "front_inserter": [[539, "front-inserter"]], "uninitialized_fill_n": [[561, "uninitialized-fill-n"]], "platform": [[581, "platform"]], "copyCreateDevice2DeviceArray": [[570, "copycreatedevice2devicearray"]], "copyCreateHost2DeviceArray": [[556, "copycreatehost2devicearray"]], "host_indexed_range": [[584, "host-indexed-range"]], "move": [[594, "move"]], "device_indexed_range": [[585, "device-indexed-range"]], "forward": [[596, "forward"], [593, "forward"]], "memory": [[542, "memory"]], "register_memory": [[559, "register-memory"]], "ranges": [[583, "ranges"]], "pair": [[595, "pair"]], "copyDevice2DeviceArray": [[567, "copydevice2devicearray"]], "Platform functionality": [[587, "platform-functionality"]], "createManagedArray": [[543, "createmanagedarray"]], "createDeviceArray": [[546, "createdevicearray"]], "get_allocation_count": [[553, "get-allocation-count"]], "device_end": [[540, "device-end"], [520, "device-end"], [527, "device-end"], [525, "device-end"], [434, "device-end"], [395, "device-end"]], "queue": [[582, "queue"]], "uninitialized_fill": [[554, "uninitialized-fill"]], "inserter": [[510, "inserter"]], "bit_cast": [[498, "bit-cast"]], "atomic_fetch_xor_explicit": [[469, "atomic-fetch-xor-explicit"]], "execution": [[506, "execution"]], "device_ptr": [[511, "device-ptr"]], "host_cbegin": [[519, "host-cbegin"], [516, "host-cbegin"]], "device_begin": [[523, "device-begin"], [513, "device-begin"], [522, "device-begin"], [526, "device-begin"], [438, "device-begin"], [420, "device-begin"]], "atomic_fetch_or_explicit": [[471, "atomic-fetch-or-explicit"]], "atomic_store_explicit": [[479, "atomic-store-explicit"]], "config": [[501, "config"]], "contract": [[502, "contract"]], "deque": [[505, "deque"]], "back_inserter": [[521, "back-inserter"]], "device_cend": [[518, "device-cend"], [532, "device-cend"], [437, "device-cend"]], "atomic_fetch_or": [[485, "atomic-fetch-or"]], "atomic_fetch_xor": [[472, "atomic-fetch-xor"]], "popcount": [[494, "popcount"]], "atomic_load": [[484, "atomic-load"]], "atomic_fetch_and": [[476, "atomic-fetch-and"]], "atomic_compare_exchange_weak": [[470, "atomic-compare-exchange-weak"]], "host_cend": [[535, "host-cend"], [512, "host-cend"]], "memory_order": [[483, "memory-order"]], "atomic_load_explicit": [[490, "atomic-load-explicit"]], "bit_ceil": [[492, "bit-ceil"]], "atomic_is_lock_free": [[486, "atomic-is-lock-free"]], "make_host": [[528, "make-host"]], "Data Structures and Containers": [[504, "data-structures-and-containers"]], "bit_floor": [[493, "bit-floor"]], "atomic_fetch_and_explicit": [[482, "atomic-fetch-and-explicit"]], "atomic_exchange": [[474, "atomic-exchange"]], "atomic_fetch_add": [[488, "atomic-fetch-add"]], "atomic_fetch_sub_explicit": [[489, "atomic-fetch-sub-explicit"]], "compiler": [[500, "compiler"]], "bit": [[491, "bit"]], "bitset": [[499, "bitset"]], "atomic_store": [[481, "atomic-store"]], "atomic_fetch_sub": [[478, "atomic-fetch-sub"]], "atomic_thread_fence": [[473, "atomic-thread-fence"]], "bit_width": [[495, "bit-width"]], "device_cbegin": [[534, "device-cbegin"], [517, "device-cbegin"], [415, "device-cbegin"]], "cstddef": [[503, "cstddef"]], "iterator": [[508, "iterator"], [374, "iterator"], [324, "iterator"], [264, "iterator"], [200, "iterator"], [171, "iterator"]], "make_device": [[524, "make-device"]], "functional": [[507, "functional"]], "atomic_compare_exchange_strong": [[477, "atomic-compare-exchange-strong"]], "atomic_fetch_add_explicit": [[480, "atomic-fetch-add-explicit"]], "bit_mod": [[496, "bit-mod"]], "atomic_exchange_explicit": [[487, "atomic-exchange-explicit"]], "has_single_bit": [[497, "has-single-bit"]], "atomic_signal_fence": [[475, "atomic-signal-fence"]], "capacity": [[429, "capacity"], [237, "capacity"], [258, "capacity"], [155, "capacity"]], "device_range": [[410, "device-range"], [441, "device-range"], [351, "device-range"], [378, "device-range"], [372, "device-range"], [389, "device-range"], [280, "device-range"], [278, "device-range"], [286, "device-range"], [293, "device-range"], [135, "device-range"], [174, "device-range"], [180, "device-range"], [173, "device-range"], [179, "device-range"], [143, "device-range"], [141, "device-range"], [153, "device-range"]], "stdgpu/cstddef.h File Reference": [[447, "stdgpu-cstddef-h-file-reference"]], "valid": [[408, "valid"], [416, "valid"], [352, "valid"], [353, "valid"], [307, "valid"], [328, "valid"], [252, "valid"], [245, "valid"], [229, "valid"], [220, "valid"], [163, "valid"], [160, "valid"]], "const_reference": [[409, "const-reference"], [337, "const-reference"], [313, "const-reference"], [255, "const-reference"], [235, "const-reference"], [162, "const-reference"]], "stdgpu/contract.h Source File": [[446, "stdgpu-contract-h-source-file"]], "stdgpu/execution.h Source File": [[455, "stdgpu-execution-h-source-file"]], "algorithm": [[459, "algorithm"]], "fill_n": [[462, "fill-n"]], "full": [[405, "full"], [363, "full"], [312, "full"], [238, "full"], [259, "full"], [150, "full"]], "File List": [[456, "file-list"]], "clear": [[412, "clear"], [336, "clear"], [295, "clear"], [164, "clear"]], "insert": [[435, "insert"], [367, "insert"], [390, "insert"], [397, "insert"], [339, "insert"], [300, "insert"], [302, "insert"], [284, "insert"]], "/home/runner/work/stdgpu/stdgpu/docs/doxygen_src Directory Reference": [[453, "home-runner-work-stdgpu-stdgpu-docs-doxygen-src-directory-reference"]], "stdgpu/functional.h File Reference": [[457, "stdgpu-functional-h-file-reference"]], "copy": [[467, "copy"]], "for_each_index": [[464, "for-each-index"]], "stdgpu/deque.cuh File Reference": [[449, "stdgpu-deque-cuh-file-reference"]], "stdgpu/device.h Source File": [[450, "stdgpu-device-h-source-file"]], "atomic": [[468, "atomic"]], "stdgpu/cstddef.h Source File": [[448, "stdgpu-cstddef-h-source-file"]], "stdgpu/config.h.in File Reference": [[444, "stdgpu-config-h-in-file-reference"]], "fill": [[465, "fill"]], "stdgpu/compiler.h File Reference": [[442, "stdgpu-compiler-h-file-reference"]], "stdgpu/functional.h Source File": [[458, "stdgpu-functional-h-source-file"]], "shrink_to_fit": [[426, "shrink-to-fit"], [156, "shrink-to-fit"]], "stdgpu Directory Reference": [[451, "stdgpu-directory-reference"]], "stdgpu/contract.h File Reference": [[445, "stdgpu-contract-h-file-reference"]], "back": [[424, "back"], [401, "back"], [152, "back"], [157, "back"]], "/home/runner/work/stdgpu/stdgpu/docs Directory Reference": [[452, "home-runner-work-stdgpu-stdgpu-docs-directory-reference"]], "copy_n": [[463, "copy-n"]], "stdgpu/compiler.h Source File": [[443, "stdgpu-compiler-h-source-file"]], "stdgpu/execution.h File Reference": [[454, "stdgpu-execution-h-file-reference"]], "pop_back": [[422, "pop-back"], [142, "pop-back"]], "erase": [[413, "erase"], [356, "erase"], [369, "erase"], [383, "erase"], [396, "erase"], [311, "erase"], [282, "erase"], [316, "erase"]], "clamp": [[460, "clamp"]], "bucket_size": [[350, "bucket-size"], [289, "bucket-size"]], "find": [[362, "find"], [391, "find"], [381, "find"], [360, "find"], [297, "find"], [279, "find"], [304, "find"], [329, "find"]], "end": [[343, "end"], [361, "end"], [271, "end"], [301, "end"], [315, "end"], [199, "end"], [176, "end"]], "hasher": [[375, "hasher"], [317, "hasher"]], "begin": [[347, "begin"], [387, "begin"], [319, "begin"], [272, "begin"], [276, "begin"], [202, "begin"], [175, "begin"]], "bucket": [[388, "bucket"], [331, "bucket"]], "vector< T, Allocator >": [[393, "vector-t-allocator"]], "key_type": [[379, "key-type"], [330, "key-type"]], "key_eq": [[385, "key-eq"], [325, "key-eq"]], "max_load_factor": [[341, "max-load-factor"], [298, "max-load-factor"]], "contains": [[346, "contains"], [338, "contains"], [314, "contains"], [294, "contains"]], "const_iterator": [[380, "const-iterator"], [332, "const-iterator"]], "cend": [[386, "cend"], [321, "cend"]], "key_equal": [[373, "key-equal"], [283, "key-equal"]], "cbegin": [[392, "cbegin"], [326, "cbegin"]], "emplace": [[354, "emplace"], [309, "emplace"]], "bucket_count": [[344, "bucket-count"], [303, "bucket-count"]], "hash_function": [[365, "hash-function"], [320, "hash-function"]], "load_factor": [[376, "load-factor"], [305, "load-factor"]], "transform_range": [[270, "transform-range"], [265, "transform-range"]], "unordered_map< Key, T, Hash, KeyEqual, Allocator >": [[274, "unordered-map-key-t-hash-keyequal-allocator"]], "mapped_type": [[306, "mapped-type"]], "unordered_set< Key, Hash, KeyEqual, Allocator >": [[334, "unordered-set-key-hash-keyequal-allocator"]], "queue< T, ContainerT >": [[230, "queue-t-containert"]], "pop": [[240, "pop"], [260, "pop"]], "insert_iterator": [[210, "insert-iterator"]], "locked": [[216, "locked"]], "push": [[232, "push"], [248, "push"]], "mutex_array< Block, Allocator >": [[212, "mutex-array-block-allocator"]], "insert_iterator< Container >": [[208, "insert-iterator-container"]], "stack< T, ContainerT >": [[246, "stack-t-containert"]], "transform_range< R, UnaryFunction >": [[262, "transform-range-r-unaryfunction"]], "host_range": [[203, "host-range"], [197, "host-range"], [196, "host-range"], [198, "host-range"]], "front_insert_iterator": [[193, "front-insert-iterator"]], "operator->": [[189, "operator"], [184, "operator"]], "device_unique_object": [[187, "device-unique-object"], [186, "device-unique-object"]], "emplace_front": [[158, "emplace-front"]], "operator*": [[185, "operator"], [188, "operator"]], "device_unique_object< T >": [[182, "device-unique-object-t"]], "host_range< T >": [[194, "host-range-t"]], "device_range< T >": [[168, "device-range-t"]], "push_front": [[138, "push-front"]], "front_insert_iterator< Container >": [[190, "front-insert-iterator-container"]], "pop_front": [[134, "pop-front"]]}, "indexentries": {}})